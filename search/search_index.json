{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Comparative molecular life history of spontaneous canine and human gliomas \u00b6 Samirkumar B. Amin, Kevin J. Anderson, C. Elizabeth Boudreau, Emmanuel Martinez-Ledesma, Emre Kocakavuk, Kevin C. Johnson, Floris P. Barthel, Frederick S. Varn, Cynthia Kassab, Xiaoyang Ling, Hoon Kim, Mary Barter, Ching C. Lau, Chew Yee Ngan, Margaret Chapman, Jennifer W. Koehler, James P. Long, Andrew D. Miller, C. Ryan Miller, Brian F. Porter, Daniel R. Rissi, Christina Mazcko, Amy K. LeBlanc, Peter J. Dickinson, Rebecca A. Packer, Amanda R. Taylor, John H. Rossmeisl Jr, Kevin D. Woolard, Amy B. Heimberger, Jonathan M. Levine, Roel G. W. Verhaak Citation Amin SB, Anderson KJ, Boudreau CE, Martinez-Ledesma E, Kocakavuk E, Johnson KC, Barthel FP, Varn FS, Kassab C, Ling X, Kim H, Barter M, Lau CC, Ngan CY, Chapman M, Koehler JW, Long JP, Miller AD, Miller CR, Porter BF, Rissi DR, Mazcko C, LeBlanc AK, Dickinson PJ, Packer RA, Taylor AR, Rossmeisl JH Jr, Woolard KD, Heimberger AB, Levine JM, Verhaak RGW. Comparative Molecular Life History of Spontaneous Canine and Human Gliomas. Cancer Cell . 2020 Feb 10;37(2):243-257.e7. doi: 10.1016/j.ccell.2020.01.004. PubMed PMID: 32049048 ; PubMed Central PMCID: PMC7132629 . Summary Sporadic gliomas in companion dogs provide a window on the interaction between tumorigenic mechanisms and host environment. We compared the molecular profiles of canine gliomas with those of human pediatric and adult gliomas to characterize evolutionarily conserved mammalian mutational processes in gliomagenesis. Employing whole genome-, exome-, transcriptome- and methylation-sequencing of 83 canine gliomas, we found alterations shared between canine and human gliomas such as the receptor tyrosine kinases, TP53 and cell cycle pathways, and IDH1 R132. Canine gliomas showed high similarity with human pediatric gliomas per robust aneuploidy, mutational rates, relative timing of mutations, and DNA methylation patterns. Our cross-species comparative genomic analysis provides unique insights into glioma etiology and the chronology of glioma-causing somatic alterations. Significance Diffuse gliomas are the most common malignant brain tumors, with high-grade tumors carrying a dismal prognosis. Preclinical models have proven themselves as poor predictors of clinical efficacy. Spontaneous glioma in dogs provides an attractive alternative model, because of their comparable tumor microenvironment and tumor life history. We determined the similarities and differences between human and canine gliomas through genomic profiling, and leveraged our datasets to identify conserved somatic drivers, mutational processes and temporal ordering of somatic glioma events across species. Canine gliomas resemble human gliomas at (epi-)genetic levels and are more reminiscent of pediatric than adult disease, thus rationalizing sporadic canine glioma as a preclinical model tailored to measuring treatment efficacies in patients with canine or human glioma. Lead Contact Roel Verhaak Data availability Raw sequencing data, sample metadata, and somatic variant calls are available at the NCI Integrated Canine Data Commons (ICDC) under accession ID: ICDC000003. Analysis-ready data objects for published figures are available here . Full text link is provided by the publisher and valid until March 31, 2020. \u21a9","title":"Home"},{"location":"#comparative-molecular-life-history-of-spontaneous-canine-and-human-gliomas","text":"Samirkumar B. Amin, Kevin J. Anderson, C. Elizabeth Boudreau, Emmanuel Martinez-Ledesma, Emre Kocakavuk, Kevin C. Johnson, Floris P. Barthel, Frederick S. Varn, Cynthia Kassab, Xiaoyang Ling, Hoon Kim, Mary Barter, Ching C. Lau, Chew Yee Ngan, Margaret Chapman, Jennifer W. Koehler, James P. Long, Andrew D. Miller, C. Ryan Miller, Brian F. Porter, Daniel R. Rissi, Christina Mazcko, Amy K. LeBlanc, Peter J. Dickinson, Rebecca A. Packer, Amanda R. Taylor, John H. Rossmeisl Jr, Kevin D. Woolard, Amy B. Heimberger, Jonathan M. Levine, Roel G. W. Verhaak Citation Amin SB, Anderson KJ, Boudreau CE, Martinez-Ledesma E, Kocakavuk E, Johnson KC, Barthel FP, Varn FS, Kassab C, Ling X, Kim H, Barter M, Lau CC, Ngan CY, Chapman M, Koehler JW, Long JP, Miller AD, Miller CR, Porter BF, Rissi DR, Mazcko C, LeBlanc AK, Dickinson PJ, Packer RA, Taylor AR, Rossmeisl JH Jr, Woolard KD, Heimberger AB, Levine JM, Verhaak RGW. Comparative Molecular Life History of Spontaneous Canine and Human Gliomas. Cancer Cell . 2020 Feb 10;37(2):243-257.e7. doi: 10.1016/j.ccell.2020.01.004. PubMed PMID: 32049048 ; PubMed Central PMCID: PMC7132629 . Summary Sporadic gliomas in companion dogs provide a window on the interaction between tumorigenic mechanisms and host environment. We compared the molecular profiles of canine gliomas with those of human pediatric and adult gliomas to characterize evolutionarily conserved mammalian mutational processes in gliomagenesis. Employing whole genome-, exome-, transcriptome- and methylation-sequencing of 83 canine gliomas, we found alterations shared between canine and human gliomas such as the receptor tyrosine kinases, TP53 and cell cycle pathways, and IDH1 R132. Canine gliomas showed high similarity with human pediatric gliomas per robust aneuploidy, mutational rates, relative timing of mutations, and DNA methylation patterns. Our cross-species comparative genomic analysis provides unique insights into glioma etiology and the chronology of glioma-causing somatic alterations. Significance Diffuse gliomas are the most common malignant brain tumors, with high-grade tumors carrying a dismal prognosis. Preclinical models have proven themselves as poor predictors of clinical efficacy. Spontaneous glioma in dogs provides an attractive alternative model, because of their comparable tumor microenvironment and tumor life history. We determined the similarities and differences between human and canine gliomas through genomic profiling, and leveraged our datasets to identify conserved somatic drivers, mutational processes and temporal ordering of somatic glioma events across species. Canine gliomas resemble human gliomas at (epi-)genetic levels and are more reminiscent of pediatric than adult disease, thus rationalizing sporadic canine glioma as a preclinical model tailored to measuring treatment efficacies in patients with canine or human glioma. Lead Contact Roel Verhaak Data availability Raw sequencing data, sample metadata, and somatic variant calls are available at the NCI Integrated Canine Data Commons (ICDC) under accession ID: ICDC000003. Analysis-ready data objects for published figures are available here . Full text link is provided by the publisher and valid until March 31, 2020. \u21a9","title":"Comparative molecular life history of spontaneous canine and human gliomas"},{"location":"code/","text":"/code/ directory only hosts files that are otherwise not detailed under figure-specific code blocks, e.g., F1A , F2A , etc. Please note that code inside this directory is given to show run-time parameters, and it is unlikely to run off-the-shelf as code is tailored for our cluster environment.","title":"Additional Code"},{"location":"code/rnaseq/","text":"This directory only hosts code files that are otherwise not detailed under figure-specific code blocks, e.g., F1A , F2A , etc. Please note that code inside this directory is given to show run-time parameters, and it is unlikely to run off-the-shelf as code is tailored for our cluster environment.","title":"Index"},{"location":"code/snv_filters/","text":"This directory only hosts code files that are otherwise not detailed under figure-specific code blocks, e.g., F1A , F2A , etc. Please note that code inside this directory is given to show run-time parameters, and it is unlikely to run off-the-shelf as code is tailored for our cluster environment.","title":"Index"},{"location":"code/titancna/","text":"Snakemake workflow for Canine TitanCNA Analysis \u00b6 Based on TitanCNA snakemake workflow by Gavin Ha This directory only hosts code files that are otherwise not detailed under figure-specific code blocks, e.g., F1A , F2A , etc. Please note that code inside this directory is given to show run-time parameters, and it is unlikely to run off-the-shelf as code is tailored for our cluster environment.","title":"Index"},{"location":"code/titancna/#snakemake-workflow-for-canine-titancna-analysis","text":"Based on TitanCNA snakemake workflow by Gavin Ha This directory only hosts code files that are otherwise not detailed under figure-specific code blocks, e.g., F1A , F2A , etc. Please note that code inside this directory is given to show run-time parameters, and it is unlikely to run off-the-shelf as code is tailored for our cluster environment.","title":"Snakemake workflow for Canine TitanCNA Analysis"},{"location":"figures/A1_preload/","text":"Raw sequence data \u00b6 Sequencing data generated from canine patients with glioma (n=83 donors) is available in the Binary Alignment Map (BAM) format (n=373) at the NCBI SRA database under BioProject ID: PRJNA579792 . View details on comparative sequencing data used from patients of human pediatric and adult glioma. R session \u00b6 Prefer using RStudio or similar GUI over copy-pasting code in terminal. The latter may emit errors due to issues with syntax highlighting and font ligatures used on this website. Code on this website was evaluated in an isolated, new environment and syntax-related errors were addressed on the top of respective code blocks. Please report bugs by submitting a GitHub issue. sessionInfo () Package versions may have updated versions here than what was used at the time of publication. Versions for core R packages that were used in the manuscript are listed in the manuscript under STAR methods => Key Resources Table. R version 3.6.1 (2019-07-05) Platform: x86_64-conda_cos6-linux-gnu (64-bit) Running under: CentOS release 6.5 (Final) Matrix products: default BLAS/LAPACK: /home/foo/anaconda3/lib/libopenblasp-r0.3.6.so locale: [1] LC_CTYPE=en_US.UTF-8 LC_NUMERIC=C [3] LC_TIME=en_US.UTF-8 LC_COLLATE=en_US.UTF-8 [5] LC_MONETARY=en_US.UTF-8 LC_MESSAGES=en_US.UTF-8 [7] LC_PAPER=en_US.UTF-8 LC_NAME=C [9] LC_ADDRESS=C LC_TELEPHONE=C [11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C attached base packages: [1] stats4 parallel stats graphics grDevices utils datasets [8] methods base other attached packages: [1] GenomicFeatures_1.36.4 AnnotationDbi_1.46.0 [3] MutationalPatterns_1.10.0 rtracklayer_1.44.0 [5] cowplot_1.0.0 ggrepel_0.8.1 [7] ggforce_0.3.1 gridExtra_2.3 [9] forcats_0.4.0 stringr_1.4.0 [11] dplyr_0.8.3 purrr_0.3.3 [13] readr_1.3.1 tidyr_1.0.2 [15] tibble_2.1.3 ggplot2_3.2.1 [17] tidyverse_1.2.1 Palimpsest_1.0.0 [19] GenomicRanges_1.36.0 GenomeInfoDb_1.20.0 [21] IRanges_2.18.1 S4Vectors_0.22.0 [23] NMF_0.21.0 Biobase_2.44.0 [25] BiocGenerics_0.30.0 cluster_2.1.0 [27] rngtools_1.4 pkgmaker_0.27 [29] registry_0.5-1 extrafont_0.17 loaded via a namespace (and not attached): [1] colorspace_1.4-1 ggsignif_0.5.0 [3] ellipsis_0.3.0 rprojroot_1.3-2 [5] IRdisplay_0.7.0 lsa_0.73.1 [7] XVector_0.24.0 ggdendro_0.1-20 [9] base64enc_0.1-3 rstudioapi_0.10 [11] ggpubr_0.2.1.999 farver_1.1.0 [13] SnowballC_0.6.0 bit64_0.9-7 [15] fansi_0.4.0 lubridate_1.7.4 [17] xml2_1.2.2 codetools_0.2-16 [19] doParallel_1.0.14 polyclip_1.10-0 [21] IRkernel_1.0.2 jsonlite_1.6 [23] Rsamtools_2.0.0 broom_0.5.4 [25] gridBase_0.4-7 graph_1.62.0 [27] compiler_3.6.1 httr_1.4.1 [29] backports_1.1.5 assertthat_0.2.1 [31] Matrix_1.2-17 lazyeval_0.2.2 [33] cli_2.0.1 tweenr_1.0.1 [35] htmltools_0.3.6 prettyunits_1.0.2 [37] tools_3.6.1 gtable_0.3.0 [39] glue_1.3.1 GenomeInfoDbData_1.2.1 [41] reshape2_1.4.3 Rcpp_1.0.3 [43] cellranger_1.1.0 vctrs_0.2.2 [45] Biostrings_2.52.0 gdata_2.18.0 [47] nlme_3.1-140 iterators_1.0.10 [49] rvest_0.3.5 lifecycle_0.1.0 [51] gtools_3.8.1 XML_3.98-1.20 [53] MASS_7.3-51.4 zlibbioc_1.30.0 [55] RCircos_1.2.1 scales_1.0.0 [57] BSgenome_1.52.0 VariantAnnotation_1.30.1 [59] hms_0.5.3 SummarizedExperiment_1.14.0 [61] RColorBrewer_1.1-2 memoise_1.1.0 [63] biomaRt_2.40.1 stringi_1.4.3 [65] RSQLite_2.1.1 foreach_1.4.4 [67] plotrix_3.7-6 caTools_1.17.1.2 [69] BiocParallel_1.18.0 bibtex_0.4.2 [71] repr_1.0.1 rlang_0.4.3 [73] pkgconfig_2.0.3 matrixStats_0.54.0 [75] bitops_1.0-6 pracma_2.2.5 [77] evaluate_0.14 lattice_0.20-38 [79] labeling_0.3 GenomicAlignments_1.20.1 [81] bit_1.1-14 tidyselect_0.2.5 [83] here_0.1 plyr_1.8.4 [85] magrittr_1.5 R6_2.4.1 [87] gplots_3.0.1.1 generics_0.0.2 [89] pbdZMQ_0.3-3 DelayedArray_0.10.0 [91] DBI_1.1.0 pillar_1.4.3 [93] haven_2.2.0 withr_2.1.2 [95] RCurl_1.95-4.12 modelr_0.1.5 [97] crayon_1.3.4 uuid_0.1-2 [99] KernSmooth_2.23-15 progress_1.2.2 [101] grid_3.6.1 readxl_1.3.1 [103] data.table_1.12.2 blob_1.2.0 [105] Rgraphviz_2.28.0 digest_0.6.23 [107] xtable_1.8-4 munsell_0.5.0 Load R packages \u00b6 PS: Not all of R packages were loaded for generating all figures. If you are loading all of packages, be aware of warnings related to masked functions and use pacakge name prefix, e.g., dplyr::select to explicitly call a function. ## For Figure 1 and 2, including supplemental figures library ( knitr ) library ( htmlTable ) library ( tidyverse ) library ( broom ) library ( maftools ) library ( tint ) library ( DBI ) library ( ggplot2 ) library ( gridExtra ) library ( ggforce ) library ( ggrepel ) library ( cowplot ) ## For Figure 3, including supplemental figures, ## load these extra packages. library ( Palimpsest ) library ( BSgenome.Cfamiliaris.UCSC.canFam3 ) library ( rtracklayer ) library ( MutationalPatterns ) library ( tidyverse ) library ( GenomicFeatures ) library ( NMF ) library ( BradleyTerryScalable ) ## Import Arial fonts to avoid error ## related to font not found library ( extrafont ) loadfonts () Load R objects \u00b6 Download /data/cgp_base_objects_v1_20200207.RData , md5sum: 12812097f49d8c8300a470491387c7d1. load ( \"cgp_base_objects_v1_20200207.RData\" ) ls () ## 37 objects R object Description cgp_suppl_sample_info_master Donor level information on 81 canine patients with glioma. maf_nogistic maftools compatible MAF object, does not contain copy number data on 81 canine patients. Note that three patients had no detectable somatic mutations following somatic mutation filtration. cgp_maftools_gistic_matched maftools compatible MAF object only on 67 canine patients with paired tumor-normal samples where somatic copy number data was available. cgp_maftools_gistic_n81 maftools compatible MAF object of 81 canine patients. This object also contain copy number data on 67 of 81 canine patients where paired tumor-normal samples were available. cgp_maftools_gistic_methy maftools compatible MAF object of 42 canine patients where DNA methylation data was available. cancer_genes_maftools Cancer genes with observed somatic mutation in canine patients (n=48). Based on cancer hallmark analysis (Fig 1B). HALLMARK Genes (n=277) to Cancer Hallmarks (n=11) mapping CG_all Somatic variants in canine glioma cohort (n=62/81 cases) ALL_HALLMARK_v1 Cancer Hallmark table for Figure 1C mutrate_table Somatic mutation burden across patients of canine and human pediatric and adult cancers (n=4,840). merged_anp_scores Comparative aneuploidy metrics showing fraction of genome with aneuploidy cgp_aneuploidy_metrics_master aneuploidy metrics for 67 canine glioma patients. mat_aneuploidy_summary_mostvar_cgAll Comparative shared syntenic aneuploidy across canine and human pediatric and adult glioma. updated_merged_entropy_df_ridges Shannon entropy across canine and human pediatric and adult glioma where whole-genome sequence data was available (n=105). merged_ccf_vaf_df Comparative intra-tumor heterogeneity (Shannon entropy) and cellular prevalence matrix. mut_mat Canine glioma mutational matrix based on 96-trinucleotide context - Derived using mut_matrix function in MutationalPatterns R package. cancer_signatures Known human mutational signatures in adult (n=30, COSMIC v2) and pediatric cancers (n=12). fit_res_hm Somatic mutational signatures in canine glioma patients with outlier mutation profile (n=8). Signatures were fitted to known human mutational signatures. fit_res_nonhm Somatic mutational signatures in canine glioma patients without outlier mutation profile (n=73). Signatures were fitted to known human mutational signatures. hm_nonhm_topsigs_tbl, driver_sigs_groups Mutational signatures and their grouping to proposed mechnaism instability_sigs_df subset of fit_res$contribution matrix for suppl fig 3B. merged_ag_pg_cg_denovo_sig De-novo mutational signatures from canine, human pediatric and adult cohort. trimmed_{cg,pg,ag}_vcf Trimmed VCFs for plotting Figure 3C win_table_{cg,pg,ag}_vcf Trimmed VCFs for plotting Figure 3D cgp_RRBS.noNormals_class_prediction class prediction table for Figure 4 cgp_RRBS.noNormals_sample_info Donor level information for 45 canine patients with glioma where DNA methylation data was available. {cgp, tcga}_info Sample metadata for suppl figure 5. {cgp, ped, tcga}_cibersort CIBERSORT output for three cohorts. fig5b_dat Data related to IHC panel, Figure 5B. We now have also updated CanFam3.1 aligned RNA-seq data 1 as tidyverse-compliant tibble format. Download /data/cgp_rnaseq_sleuth_tpm_normed_canfam3.1_v201908.rds , md5sum: b6159d234566a290e2a4105fa62b2cdb. Load data as follows: library ( tidyverse ) rnaseq <- readRDS ( \"cgp_rnaseq_sleuth_tpm_normed_canfam3.1_v201908.rds\" ) glimpse ( rnaseq ) Details on RNA-seq alignments \u21a9","title":"Start Here"},{"location":"figures/A1_preload/#raw-sequence-data","text":"Sequencing data generated from canine patients with glioma (n=83 donors) is available in the Binary Alignment Map (BAM) format (n=373) at the NCBI SRA database under BioProject ID: PRJNA579792 . View details on comparative sequencing data used from patients of human pediatric and adult glioma.","title":"Raw sequence data"},{"location":"figures/A1_preload/#r-session","text":"Prefer using RStudio or similar GUI over copy-pasting code in terminal. The latter may emit errors due to issues with syntax highlighting and font ligatures used on this website. Code on this website was evaluated in an isolated, new environment and syntax-related errors were addressed on the top of respective code blocks. Please report bugs by submitting a GitHub issue. sessionInfo () Package versions may have updated versions here than what was used at the time of publication. Versions for core R packages that were used in the manuscript are listed in the manuscript under STAR methods => Key Resources Table. R version 3.6.1 (2019-07-05) Platform: x86_64-conda_cos6-linux-gnu (64-bit) Running under: CentOS release 6.5 (Final) Matrix products: default BLAS/LAPACK: /home/foo/anaconda3/lib/libopenblasp-r0.3.6.so locale: [1] LC_CTYPE=en_US.UTF-8 LC_NUMERIC=C [3] LC_TIME=en_US.UTF-8 LC_COLLATE=en_US.UTF-8 [5] LC_MONETARY=en_US.UTF-8 LC_MESSAGES=en_US.UTF-8 [7] LC_PAPER=en_US.UTF-8 LC_NAME=C [9] LC_ADDRESS=C LC_TELEPHONE=C [11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C attached base packages: [1] stats4 parallel stats graphics grDevices utils datasets [8] methods base other attached packages: [1] GenomicFeatures_1.36.4 AnnotationDbi_1.46.0 [3] MutationalPatterns_1.10.0 rtracklayer_1.44.0 [5] cowplot_1.0.0 ggrepel_0.8.1 [7] ggforce_0.3.1 gridExtra_2.3 [9] forcats_0.4.0 stringr_1.4.0 [11] dplyr_0.8.3 purrr_0.3.3 [13] readr_1.3.1 tidyr_1.0.2 [15] tibble_2.1.3 ggplot2_3.2.1 [17] tidyverse_1.2.1 Palimpsest_1.0.0 [19] GenomicRanges_1.36.0 GenomeInfoDb_1.20.0 [21] IRanges_2.18.1 S4Vectors_0.22.0 [23] NMF_0.21.0 Biobase_2.44.0 [25] BiocGenerics_0.30.0 cluster_2.1.0 [27] rngtools_1.4 pkgmaker_0.27 [29] registry_0.5-1 extrafont_0.17 loaded via a namespace (and not attached): [1] colorspace_1.4-1 ggsignif_0.5.0 [3] ellipsis_0.3.0 rprojroot_1.3-2 [5] IRdisplay_0.7.0 lsa_0.73.1 [7] XVector_0.24.0 ggdendro_0.1-20 [9] base64enc_0.1-3 rstudioapi_0.10 [11] ggpubr_0.2.1.999 farver_1.1.0 [13] SnowballC_0.6.0 bit64_0.9-7 [15] fansi_0.4.0 lubridate_1.7.4 [17] xml2_1.2.2 codetools_0.2-16 [19] doParallel_1.0.14 polyclip_1.10-0 [21] IRkernel_1.0.2 jsonlite_1.6 [23] Rsamtools_2.0.0 broom_0.5.4 [25] gridBase_0.4-7 graph_1.62.0 [27] compiler_3.6.1 httr_1.4.1 [29] backports_1.1.5 assertthat_0.2.1 [31] Matrix_1.2-17 lazyeval_0.2.2 [33] cli_2.0.1 tweenr_1.0.1 [35] htmltools_0.3.6 prettyunits_1.0.2 [37] tools_3.6.1 gtable_0.3.0 [39] glue_1.3.1 GenomeInfoDbData_1.2.1 [41] reshape2_1.4.3 Rcpp_1.0.3 [43] cellranger_1.1.0 vctrs_0.2.2 [45] Biostrings_2.52.0 gdata_2.18.0 [47] nlme_3.1-140 iterators_1.0.10 [49] rvest_0.3.5 lifecycle_0.1.0 [51] gtools_3.8.1 XML_3.98-1.20 [53] MASS_7.3-51.4 zlibbioc_1.30.0 [55] RCircos_1.2.1 scales_1.0.0 [57] BSgenome_1.52.0 VariantAnnotation_1.30.1 [59] hms_0.5.3 SummarizedExperiment_1.14.0 [61] RColorBrewer_1.1-2 memoise_1.1.0 [63] biomaRt_2.40.1 stringi_1.4.3 [65] RSQLite_2.1.1 foreach_1.4.4 [67] plotrix_3.7-6 caTools_1.17.1.2 [69] BiocParallel_1.18.0 bibtex_0.4.2 [71] repr_1.0.1 rlang_0.4.3 [73] pkgconfig_2.0.3 matrixStats_0.54.0 [75] bitops_1.0-6 pracma_2.2.5 [77] evaluate_0.14 lattice_0.20-38 [79] labeling_0.3 GenomicAlignments_1.20.1 [81] bit_1.1-14 tidyselect_0.2.5 [83] here_0.1 plyr_1.8.4 [85] magrittr_1.5 R6_2.4.1 [87] gplots_3.0.1.1 generics_0.0.2 [89] pbdZMQ_0.3-3 DelayedArray_0.10.0 [91] DBI_1.1.0 pillar_1.4.3 [93] haven_2.2.0 withr_2.1.2 [95] RCurl_1.95-4.12 modelr_0.1.5 [97] crayon_1.3.4 uuid_0.1-2 [99] KernSmooth_2.23-15 progress_1.2.2 [101] grid_3.6.1 readxl_1.3.1 [103] data.table_1.12.2 blob_1.2.0 [105] Rgraphviz_2.28.0 digest_0.6.23 [107] xtable_1.8-4 munsell_0.5.0","title":"R session"},{"location":"figures/A1_preload/#load-r-packages","text":"PS: Not all of R packages were loaded for generating all figures. If you are loading all of packages, be aware of warnings related to masked functions and use pacakge name prefix, e.g., dplyr::select to explicitly call a function. ## For Figure 1 and 2, including supplemental figures library ( knitr ) library ( htmlTable ) library ( tidyverse ) library ( broom ) library ( maftools ) library ( tint ) library ( DBI ) library ( ggplot2 ) library ( gridExtra ) library ( ggforce ) library ( ggrepel ) library ( cowplot ) ## For Figure 3, including supplemental figures, ## load these extra packages. library ( Palimpsest ) library ( BSgenome.Cfamiliaris.UCSC.canFam3 ) library ( rtracklayer ) library ( MutationalPatterns ) library ( tidyverse ) library ( GenomicFeatures ) library ( NMF ) library ( BradleyTerryScalable ) ## Import Arial fonts to avoid error ## related to font not found library ( extrafont ) loadfonts ()","title":"Load R packages"},{"location":"figures/A1_preload/#load-r-objects","text":"Download /data/cgp_base_objects_v1_20200207.RData , md5sum: 12812097f49d8c8300a470491387c7d1. load ( \"cgp_base_objects_v1_20200207.RData\" ) ls () ## 37 objects R object Description cgp_suppl_sample_info_master Donor level information on 81 canine patients with glioma. maf_nogistic maftools compatible MAF object, does not contain copy number data on 81 canine patients. Note that three patients had no detectable somatic mutations following somatic mutation filtration. cgp_maftools_gistic_matched maftools compatible MAF object only on 67 canine patients with paired tumor-normal samples where somatic copy number data was available. cgp_maftools_gistic_n81 maftools compatible MAF object of 81 canine patients. This object also contain copy number data on 67 of 81 canine patients where paired tumor-normal samples were available. cgp_maftools_gistic_methy maftools compatible MAF object of 42 canine patients where DNA methylation data was available. cancer_genes_maftools Cancer genes with observed somatic mutation in canine patients (n=48). Based on cancer hallmark analysis (Fig 1B). HALLMARK Genes (n=277) to Cancer Hallmarks (n=11) mapping CG_all Somatic variants in canine glioma cohort (n=62/81 cases) ALL_HALLMARK_v1 Cancer Hallmark table for Figure 1C mutrate_table Somatic mutation burden across patients of canine and human pediatric and adult cancers (n=4,840). merged_anp_scores Comparative aneuploidy metrics showing fraction of genome with aneuploidy cgp_aneuploidy_metrics_master aneuploidy metrics for 67 canine glioma patients. mat_aneuploidy_summary_mostvar_cgAll Comparative shared syntenic aneuploidy across canine and human pediatric and adult glioma. updated_merged_entropy_df_ridges Shannon entropy across canine and human pediatric and adult glioma where whole-genome sequence data was available (n=105). merged_ccf_vaf_df Comparative intra-tumor heterogeneity (Shannon entropy) and cellular prevalence matrix. mut_mat Canine glioma mutational matrix based on 96-trinucleotide context - Derived using mut_matrix function in MutationalPatterns R package. cancer_signatures Known human mutational signatures in adult (n=30, COSMIC v2) and pediatric cancers (n=12). fit_res_hm Somatic mutational signatures in canine glioma patients with outlier mutation profile (n=8). Signatures were fitted to known human mutational signatures. fit_res_nonhm Somatic mutational signatures in canine glioma patients without outlier mutation profile (n=73). Signatures were fitted to known human mutational signatures. hm_nonhm_topsigs_tbl, driver_sigs_groups Mutational signatures and their grouping to proposed mechnaism instability_sigs_df subset of fit_res$contribution matrix for suppl fig 3B. merged_ag_pg_cg_denovo_sig De-novo mutational signatures from canine, human pediatric and adult cohort. trimmed_{cg,pg,ag}_vcf Trimmed VCFs for plotting Figure 3C win_table_{cg,pg,ag}_vcf Trimmed VCFs for plotting Figure 3D cgp_RRBS.noNormals_class_prediction class prediction table for Figure 4 cgp_RRBS.noNormals_sample_info Donor level information for 45 canine patients with glioma where DNA methylation data was available. {cgp, tcga}_info Sample metadata for suppl figure 5. {cgp, ped, tcga}_cibersort CIBERSORT output for three cohorts. fig5b_dat Data related to IHC panel, Figure 5B. We now have also updated CanFam3.1 aligned RNA-seq data 1 as tidyverse-compliant tibble format. Download /data/cgp_rnaseq_sleuth_tpm_normed_canfam3.1_v201908.rds , md5sum: b6159d234566a290e2a4105fa62b2cdb. Load data as follows: library ( tidyverse ) rnaseq <- readRDS ( \"cgp_rnaseq_sleuth_tpm_normed_canfam3.1_v201908.rds\" ) glimpse ( rnaseq ) Details on RNA-seq alignments \u21a9","title":"Load R objects"},{"location":"figures/F1A/","text":"Required metadata \u00b6 Genes to plot Based on significantly mutated genes analysis . See also Table S2. oncoprint_genes <- c ( \"PDGFRA\" , \"PIK3CA\" , \"NF1\" , \"TP53\" , \"EGFR\" , \"IDH1\" , \"FGFR1\" , \"SPOP\" , \"TRIM11\" , \"SMARCC2\" , \"SMARCA4\" , \"SMARCAD1\" , \"ARID5B\" , \"KMT2A\" , \"KMT2D\" , \"RB1\" , \"CDKN2C\" ) oncoprint_genes_gistic <- c ( \"PDGFRA\" , \"MYC\" , \"TP53\" , \"EGFR\" , \"RB1\" , \"PTEN\" , \"CDKN2A\" ) oncoprint_genes_snv_scna <- c ( \"PDGFRA\" , \"PIK3CA\" , \"NF1\" , \"TP53\" , \"ZFHX3\" , \"EGFR\" , \"IDH1\" , \"FGFR1\" , \"SPOP\" , \"TRIM11\" , \"SMARCC2\" , \"SMARCA4\" , \"SMARCAD1\" , \"ARID5B\" , \"KMT2A\" , \"KMT2C\" , \"KMT2D\" , \"RB1\" , \"PTEN\" , \"CDKN2A\" ) Sample and Variant Annotations ## Specify colors for sample annotations ann_colors <- list ( Tumor_Morphology = c ( Astro = \"#d95f02\" , Oligo = \"#7570b3\" , Undefined = \"#1b9e77\" ), Tumor_Grade = c ( High = \"#FEB24C\" , Low = \"#FFEDA0\" ), Tumor_Location = c ( Hemispheric = \"#a6cee3\" , Cerebellar = \"#1f78b4\" , midline = \"#e31a1c\" , UN = \"#fb9a99\" ), Tissue_Archival = c ( `snap-frozen` = \"#ffcc33\" , ffpe = \"#cc0033\" ), Matched_Normal = c ( paired = \"#ffcc33\" , tumor_only = \"#cc0033\" )) ## specify colors for variant types varcall_colors <- c ( Amp = \"#006400\" , LOH = \"#FF9999\" , Del = \"#9933FF\" , Frame_Shift_Del = \"#1E90FF\" , Frame_Shift_Ins = \"#FF8C69\" , Splice_Site = \"#00CED1\" , Splice_Region = \"#00CED1\" , Translation_Start_Site = \"#CD6600\" , Nonsense_Mutation = \"#FFC100\" , Nonstop_Mutation = \"#E7B98A\" , In_Frame_Del = \"#E78A96\" , In_Frame_Ins = \"#FFC1C9\" , Missense_Mutation = \"#CD6600\" , Translation_Start_Site = \"#008B8B\" , Multi_Hit = \"#3D3D3D\" ) Fig 1A \u00b6 Somatic mutational lanscape of glioma driver genes. Based on significantly mutated genes analysis . font family 'Arial' not found If you get an error, font family 'Arial' not found in PostScript font database , either remove fonts argument from pdf or import system fonts using extrafont R package. See documentation by Gavin Simpson for details. Run extrafont::loadfonts() as detailed in Start Here . pdf ( \"F1A.pdf\" , width = 18 , height = 12 , pointsize = 12 , fonts = \"Arial\" , bg = \"white\" , compress = FALSE , useDingbats = FALSE ) fig_1A <- oncoplot ( maf = maf_nogistic , genes = oncoprint_genes , additionalFeature = c ( \"dnds_mutsig\" , \"Driver\" ), removeNonMutated = TRUE , keepGeneOrder = FALSE , writeMatrix = FALSE , sortByMutation = FALSE , fontSize = 0.9 , legendFontSize = 1.8 , annotationFontSize = 1.8 , clinicalFeatures = c ( \"Tumor_Morphology\" , \"Tumor_Grade\" , \"Tumor_Location\" ), annotationColor = ann_colors , colors = varcall_colors [ c ( levels ( maf_nogistic @ data $ Variant_Classification ), \"Multi_Hit\" ) ], logColBar = FALSE , gene_mar = 8 , bgCol = \"#ffffff\" , borderCol = \"#CCCCCC\" ) dev.off () Suppl Fig 1B \u00b6 Somatic mutational lanscape of COSMIC cancer genes. pdf ( \"SF1B.pdf\" , width = 18 , height = 12 , pointsize = 12 , fonts = \"Arial\" , bg = \"white\" , compress = FALSE , useDingbats = FALSE ) suppl_fig_1B <- oncoplot ( maf = maf_nogistic , genes = cancer_genes_maftools , additionalFeature = c ( \"dnds_mutsig\" , \"Driver\" ), removeNonMutated = FALSE , keepGeneOrder = FALSE , writeMatrix = FALSE , sortByMutation = TRUE , fontSize = 0.7 , legendFontSize = 1.2 , annotationFontSize = 1.2 , clinicalFeatures = c ( \"Tumor_Morphology\" , \"Tumor_Grade\" , \"Tumor_Location\" ), annotationColor = ann_colors , colors = varcall_colors [ c ( levels ( maf_nogistic @ data $ Variant_Classification ), \"Multi_Hit\" ) ], logColBar = FALSE , gene_mar = 7 , bgCol = \"#ffffff\" , borderCol = \"#CCCCCC\" ) dev.off () Suppl Fig 1F \u00b6 Somatic mutational lanscape, including copy-number aberrations of COSMIC cancer genes. This figure also contains somatic copy-number data which is detailed under Fig 2A . pdf ( \"SF1F.pdf\" , width = 18 , height = 12 , pointsize = 12 , bg = \"white\" , compress = FALSE , useDingbats = FALSE ) suppl_fig_1F <- oncoplot ( maf = cgp_maftools_gistic_n81 , ## adding known SCNA drivers genes = c ( cancer_genes_maftools , \"CDKN2A\" , \"PTEN\" ), additionalFeature = c ( \"dnds_mutsig\" , \"Driver\" ), removeNonMutated = FALSE , keepGeneOrder = FALSE , writeMatrix = TRUE , sortByMutation = TRUE , fontSize = 0.7 , legendFontSize = 1.2 , annotationFontSize = 1.2 , clinicalFeatures = c ( \"Tumor_Morphology\" , \"Tumor_Grade\" , \"Tumor_Location\" , \"Tissue_Archival\" , \"Matched_Normal\" ), annotationColor = ann_colors , colors = varcall_colors [ c ( levels ( cgp_maftools_gistic_n81 @ data $ Variant_Classification ), \"Multi_Hit\" ) ], logColBar = FALSE , gene_mar = 7 , bgCol = \"#ffffff\" , borderCol = \"#CCCCCC\" ) dev.off ()","title":"F1A &middot; Somatic Mutational Landscape"},{"location":"figures/F1A/#required-metadata","text":"Genes to plot Based on significantly mutated genes analysis . See also Table S2. oncoprint_genes <- c ( \"PDGFRA\" , \"PIK3CA\" , \"NF1\" , \"TP53\" , \"EGFR\" , \"IDH1\" , \"FGFR1\" , \"SPOP\" , \"TRIM11\" , \"SMARCC2\" , \"SMARCA4\" , \"SMARCAD1\" , \"ARID5B\" , \"KMT2A\" , \"KMT2D\" , \"RB1\" , \"CDKN2C\" ) oncoprint_genes_gistic <- c ( \"PDGFRA\" , \"MYC\" , \"TP53\" , \"EGFR\" , \"RB1\" , \"PTEN\" , \"CDKN2A\" ) oncoprint_genes_snv_scna <- c ( \"PDGFRA\" , \"PIK3CA\" , \"NF1\" , \"TP53\" , \"ZFHX3\" , \"EGFR\" , \"IDH1\" , \"FGFR1\" , \"SPOP\" , \"TRIM11\" , \"SMARCC2\" , \"SMARCA4\" , \"SMARCAD1\" , \"ARID5B\" , \"KMT2A\" , \"KMT2C\" , \"KMT2D\" , \"RB1\" , \"PTEN\" , \"CDKN2A\" ) Sample and Variant Annotations ## Specify colors for sample annotations ann_colors <- list ( Tumor_Morphology = c ( Astro = \"#d95f02\" , Oligo = \"#7570b3\" , Undefined = \"#1b9e77\" ), Tumor_Grade = c ( High = \"#FEB24C\" , Low = \"#FFEDA0\" ), Tumor_Location = c ( Hemispheric = \"#a6cee3\" , Cerebellar = \"#1f78b4\" , midline = \"#e31a1c\" , UN = \"#fb9a99\" ), Tissue_Archival = c ( `snap-frozen` = \"#ffcc33\" , ffpe = \"#cc0033\" ), Matched_Normal = c ( paired = \"#ffcc33\" , tumor_only = \"#cc0033\" )) ## specify colors for variant types varcall_colors <- c ( Amp = \"#006400\" , LOH = \"#FF9999\" , Del = \"#9933FF\" , Frame_Shift_Del = \"#1E90FF\" , Frame_Shift_Ins = \"#FF8C69\" , Splice_Site = \"#00CED1\" , Splice_Region = \"#00CED1\" , Translation_Start_Site = \"#CD6600\" , Nonsense_Mutation = \"#FFC100\" , Nonstop_Mutation = \"#E7B98A\" , In_Frame_Del = \"#E78A96\" , In_Frame_Ins = \"#FFC1C9\" , Missense_Mutation = \"#CD6600\" , Translation_Start_Site = \"#008B8B\" , Multi_Hit = \"#3D3D3D\" )","title":"Required metadata"},{"location":"figures/F1A/#fig-1a","text":"Somatic mutational lanscape of glioma driver genes. Based on significantly mutated genes analysis . font family 'Arial' not found If you get an error, font family 'Arial' not found in PostScript font database , either remove fonts argument from pdf or import system fonts using extrafont R package. See documentation by Gavin Simpson for details. Run extrafont::loadfonts() as detailed in Start Here . pdf ( \"F1A.pdf\" , width = 18 , height = 12 , pointsize = 12 , fonts = \"Arial\" , bg = \"white\" , compress = FALSE , useDingbats = FALSE ) fig_1A <- oncoplot ( maf = maf_nogistic , genes = oncoprint_genes , additionalFeature = c ( \"dnds_mutsig\" , \"Driver\" ), removeNonMutated = TRUE , keepGeneOrder = FALSE , writeMatrix = FALSE , sortByMutation = FALSE , fontSize = 0.9 , legendFontSize = 1.8 , annotationFontSize = 1.8 , clinicalFeatures = c ( \"Tumor_Morphology\" , \"Tumor_Grade\" , \"Tumor_Location\" ), annotationColor = ann_colors , colors = varcall_colors [ c ( levels ( maf_nogistic @ data $ Variant_Classification ), \"Multi_Hit\" ) ], logColBar = FALSE , gene_mar = 8 , bgCol = \"#ffffff\" , borderCol = \"#CCCCCC\" ) dev.off ()","title":"Fig 1A"},{"location":"figures/F1A/#suppl-fig-1b","text":"Somatic mutational lanscape of COSMIC cancer genes. pdf ( \"SF1B.pdf\" , width = 18 , height = 12 , pointsize = 12 , fonts = \"Arial\" , bg = \"white\" , compress = FALSE , useDingbats = FALSE ) suppl_fig_1B <- oncoplot ( maf = maf_nogistic , genes = cancer_genes_maftools , additionalFeature = c ( \"dnds_mutsig\" , \"Driver\" ), removeNonMutated = FALSE , keepGeneOrder = FALSE , writeMatrix = FALSE , sortByMutation = TRUE , fontSize = 0.7 , legendFontSize = 1.2 , annotationFontSize = 1.2 , clinicalFeatures = c ( \"Tumor_Morphology\" , \"Tumor_Grade\" , \"Tumor_Location\" ), annotationColor = ann_colors , colors = varcall_colors [ c ( levels ( maf_nogistic @ data $ Variant_Classification ), \"Multi_Hit\" ) ], logColBar = FALSE , gene_mar = 7 , bgCol = \"#ffffff\" , borderCol = \"#CCCCCC\" ) dev.off ()","title":"Suppl Fig 1B"},{"location":"figures/F1A/#suppl-fig-1f","text":"Somatic mutational lanscape, including copy-number aberrations of COSMIC cancer genes. This figure also contains somatic copy-number data which is detailed under Fig 2A . pdf ( \"SF1F.pdf\" , width = 18 , height = 12 , pointsize = 12 , bg = \"white\" , compress = FALSE , useDingbats = FALSE ) suppl_fig_1F <- oncoplot ( maf = cgp_maftools_gistic_n81 , ## adding known SCNA drivers genes = c ( cancer_genes_maftools , \"CDKN2A\" , \"PTEN\" ), additionalFeature = c ( \"dnds_mutsig\" , \"Driver\" ), removeNonMutated = FALSE , keepGeneOrder = FALSE , writeMatrix = TRUE , sortByMutation = TRUE , fontSize = 0.7 , legendFontSize = 1.2 , annotationFontSize = 1.2 , clinicalFeatures = c ( \"Tumor_Morphology\" , \"Tumor_Grade\" , \"Tumor_Location\" , \"Tissue_Archival\" , \"Matched_Normal\" ), annotationColor = ann_colors , colors = varcall_colors [ c ( levels ( cgp_maftools_gistic_n81 @ data $ Variant_Classification ), \"Multi_Hit\" ) ], logColBar = FALSE , gene_mar = 7 , bgCol = \"#ffffff\" , borderCol = \"#CCCCCC\" ) dev.off ()","title":"Suppl Fig 1F"},{"location":"figures/F1B/","text":"Gene lollipop plots in the manuscript were plotted using lollipops software by Jay JJ 1 . Orthologous amino acid annotations were based on Ensembl Variant Effect Predictor (VEP), v91 annotations using column, HGVSp_Short . Width of plots for IDH1 and SPOP were scaled for image clarity and it is not proportional to size of protein encoded by the respective gene. lollipops -U P42336 -legend -labels -o pik3ca.png H1047R@7 H1047L@1 E542K@1 E545K@1 lollipops -legend -labels -o idh1.png IDH1 R132C@3 lollipops -U O43791 -legend -labels -o spop.png P94R@2 Alternate code using lollipopPlot function in R package, maftools 2 pdf ( \"F1B.pdf\" , width = 18 , height = 12 , pointsize = 12 , bg = \"white\" , compress = FALSE , useDingbats = FALSE ) lollipopPlot ( maf = maf_nogistic , gene = 'PIK3CA' , AACol = 'HGVSp_Short' , showMutationRate = TRUE , labelPos = 1047 , labPosSize = 1.2 , cBioPortal = FALSE , repel = FALSE , collapsePosLabel = TRUE , legendTxtSize = 1.2 , labPosAngle = 0 , domainLabelSize = 1.0 , axisTextSize = c ( 1 , 1 ), printCount = TRUE , colors = NULL , domainColors = NULL , labelOnlyUniqueDoamins = TRUE , defaultYaxis = TRUE , titleSize = c ( 1.2 , 1 ), pointSize = 1.2 ) lollipopPlot ( maf = maf_nogistic , gene = 'IDH1' , AACol = 'HGVSp_Short' , showMutationRate = TRUE , labelPos = 132 , labPosSize = 1.2 , cBioPortal = FALSE , repel = FALSE , collapsePosLabel = TRUE , legendTxtSize = 1.2 , labPosAngle = 0 , domainLabelSize = 1.0 , axisTextSize = c ( 1 , 1 ), printCount = TRUE , colors = NULL , domainColors = NULL , labelOnlyUniqueDoamins = TRUE , defaultYaxis = TRUE , titleSize = c ( 1.2 , 1 ), pointSize = 1.2 ) lollipopPlot ( maf = maf_nogistic , gene = 'SPOP' , AACol = 'HGVSp_Short' , showMutationRate = TRUE , labelPos = 94 , labPosSize = 1.2 , cBioPortal = FALSE , repel = FALSE , collapsePosLabel = TRUE , legendTxtSize = 1.2 , labPosAngle = 0 , domainLabelSize = 1.0 , axisTextSize = c ( 1 , 1 ), printCount = TRUE , colors = NULL , domainColors = NULL , labelOnlyUniqueDoamins = TRUE , defaultYaxis = TRUE , titleSize = c ( 1.2 , 1 ), pointSize = 1.2 ) dev.off () Jay JJ, Brouwer C (2016) Lollipops in the Clinic: Information Dense Mutation Plots for Precision Medicine. PLoS ONE 11(8): e0160519. doi: 10.1371/journal.pone.0160519 . \u21a9 Mayakonda A, Lin D, Assenov Y, Plass C, Koeffler PH (2018). \u201cMaftools: efficient and comprehensive analysis of somatic variants in cancer.\u201d Genome Research. doi: 10.1101/gr.239244.118 . \u21a9","title":"F1B &middot; Somatic Recurrent Hotspot Mutations"},{"location":"figures/F1C/","text":"Cancer Hallmarks enrichment across canine, human pediatric and adult gliomas. Genes to hallmark mapping was primarily derived from SLAPenrich R package 1 . See also relevant methods for details. table_hallmark <- as.data.frame ( table ( HALLMARK $ hallmark )) %>% dplyr :: rename ( hallmark = Var1 ) ## require at least one driver event Freq_threshold = 1 CG_HALLMARK <- CG_all %>% gather ( key = sample , value = value , - gene_symbol ) %>% filter ( gene_symbol %in% HALLMARK $ gene_symbol ) %>% left_join ( HALLMARK , by = \"gene_symbol\" ) %>% dplyr :: select ( - gene_symbol ) %>% group_by ( hallmark , sample ) %>% mutate ( sum = sum ( value )) %>% dplyr :: select ( - value ) %>% ungroup () %>% distinct () %>% left_join ( table_hallmark ) %>% mutate ( alteration = ifelse ( sum >= Freq_threshold , 1 , 0 )) %>% add_count ( hallmark , name = \"n_hallmark\" ) %>% mutate ( n_hallmark = n_hallmark + 5 ) %>% add_count ( hallmark , alteration , name = \"n_alterations\" ) %>% mutate ( proportion_CG = n_alterations / n_hallmark , CG_no_alterations = n_hallmark - n_alterations ) %>% filter ( alteration != 0 ) %>% dplyr :: select ( hallmark , proportion_CG , CG_alterations = n_alterations , CG_no_alterations , CG_total = n_hallmark ) %>% distinct () Similar to CG_HALLMARK , enrichment per hallmark tables were created for molecular subtypes across human cancers, and merged in the master table, ALL_HALLMARK_v1 . ## This code block will not run as variant calls for human cancers are not ## stored in public repository. Instead, we provide ALL_HALLMARK_v1 object ## to draw figures. ALL_HALLMARK_v1 <- AG_IDHWT_HALLMARK %>% left_join ( AG_IDHMUT_CODEL_HALLMARK , by = \"hallmark\" ) %>% left_join ( AG_IDHMUT_NONCODEL_HALLMARK , by = \"hallmark\" ) %>% left_join ( PG_HGG_HALLMARK , by = \"hallmark\" ) %>% left_join ( PG_LGG_HALLMARK , by = \"hallmark\" ) %>% left_join ( CG_HALLMARK , by = \"hallmark\" ) %>% dplyr :: select ( hallmark , IDHWT = proportion_AG_IDHWT , IDHMUT_CODEL = proportion_AG_IDHMUT_CODEL , IDHMUT_NONCODEL = proportion_AG_IDHMUT_NONCODEL , PG_H3mut = proportion_PG_HGG , PG_H3wt = proportion_PG_LGG , CG = proportion_CG ) %>% gather ( key = species , value = proportion , IDHWT : CG ) %>% mutate ( species = factor ( species , levels = c ( \"CG\" , \"PG_H3wt\" , \"PG_H3mut\" , \"IDHMUT_CODEL\" , \"IDHMUT_NONCODEL\" , \"IDHWT\" ))) Fig 1C \u00b6 Subset of hallmarks as a main figure 1C. pdf ( file = \"F1C.pdf\" , height = 7 , width = 15 , bg = \"transparent\" , useDingbats = FALSE ) ALL_HALLMARK_v1 %>% filter ( hallmark %in% c ( \"Avoiding Immune Destruction\" , \"Deregulating Cellular Energetics\" , \"Epigenetic Deregulation\" , \"Genome Instability and Mutation\" , \"Resisting Cell Death\" )) %>% unite ( \"hallmark_species\" , hallmark , species , remove = F ) %>% mutate ( hallmark_species = factor ( hallmark_species , levels = c ( \"Deregulating Cellular Energetics_CG\" , \"Deregulating Cellular Energetics_PG_H3wt\" , \"Deregulating Cellular Energetics_PG_H3mut\" , \"Deregulating Cellular Energetics_IDHMUT_CODEL\" , \"Deregulating Cellular Energetics_IDHMUT_NONCODEL\" , \"Deregulating Cellular Energetics_IDHWT\" , \"Resisting Cell Death_CG\" , \"Resisting Cell Death_PG_H3wt\" , \"Resisting Cell Death_PG_H3mut\" , \"Resisting Cell Death_IDHMUT_CODEL\" , \"Resisting Cell Death_IDHMUT_NONCODEL\" , \"Resisting Cell Death_IDHWT\" , \"Genome Instability and Mutation_CG\" , \"Genome Instability and Mutation_PG_H3wt\" , \"Genome Instability and Mutation_PG_H3mut\" , \"Genome Instability and Mutation_IDHMUT_CODEL\" , \"Genome Instability and Mutation_IDHMUT_NONCODEL\" , \"Genome Instability and Mutation_IDHWT\" , \"Epigenetic Deregulation_CG\" , \"Epigenetic Deregulation_PG_H3wt\" , \"Epigenetic Deregulation_PG_H3mut\" , \"Epigenetic Deregulation_IDHMUT_CODEL\" , \"Epigenetic Deregulation_IDHMUT_NONCODEL\" , \"Epigenetic Deregulation_IDHWT\" , \"Avoiding Immune Destruction_CG\" , \"Avoiding Immune Destruction_PG_H3wt\" , \"Avoiding Immune Destruction_PG_H3mut\" , \"Avoiding Immune Destruction_IDHMUT_CODEL\" , \"Avoiding Immune Destruction_IDHMUT_NONCODEL\" , \"Avoiding Immune Destruction_IDHWT\" )), hallmark = factor ( hallmark , levels = c ( \"Deregulating Cellular Energetics\" , \"Resisting Cell Death\" , \"Genome Instability and Mutation\" , \"Epigenetic Deregulation\" , \"Avoiding Immune Destruction\" ), labels = c ( \"Deregulating Cellular Energetics\" = \"Deregulating \\nCellular Energetics\" , \"Resisting Cell Death\" = \"Resisting Cell \\nDeath\" , \"Genome Instability and Mutation\" = \"Genome \\nInstability\" , \"Epigenetic \\nDeregulation\" , \"Avoiding Immune Destruction\" = \"Avoiding Immune \\nDestruction\" ))) %>% ggplot ( aes ( x = hallmark_species , y = proportion , fill = hallmark )) + geom_bar ( stat = \"identity\" , position = \"dodge\" , width = 0.975 ) + scale_fill_brewer ( palette = \"Dark2\" , \" \" ) + labs ( x = \" \" , y = \"Proportion of patients\" ) + cowplot :: theme_cowplot ( font_size = 18 ) + theme ( legend.position = \"bottom\" , legend.text = element_text ( size = 22 ), axis.text.x = element_text ( angle = 90 , hjust = 1 , vjust = 0.5 )) + coord_cartesian ( ylim = c ( 0 , 1 )) + scale_x_discrete ( labels = c ( \"Resisting Cell Death_IDHWT\" = \"IDHwt\" , \"Resisting Cell Death_IDHMUT_CODEL\" = \"IDHmut\\ncodel\" , \"Resisting Cell Death_IDHMUT_NONCODEL\" = \"IDHmut\\nnoncodel\" , \"Resisting Cell Death_PG_H3mut\" = \"H3mut\" , \"Resisting Cell Death_PG_H3wt\" = \"H3wt\" , \"Resisting Cell Death_CG\" = \"CG\" , \"Avoiding Immune Destruction_IDHWT\" = \"IDHwt\" , \"Avoiding Immune Destruction_IDHMUT_CODEL\" = \"IDHmut\\ncodel\" , \"Avoiding Immune Destruction_IDHMUT_NONCODEL\" = \"IDHmut\\nnoncodel\" , \"Avoiding Immune Destruction_PG_H3mut\" = \"H3mut\" , \"Avoiding Immune Destruction_PG_H3wt\" = \"H3wt\" , \"Avoiding Immune Destruction_CG\" = \"CG\" , \"Deregulating Cellular Energetics_IDHWT\" = \"IDHwt\" , \"Deregulating Cellular Energetics_IDHMUT_CODEL\" = \"IDHmut\\ncodel\" , \"Deregulating Cellular Energetics_IDHMUT_NONCODEL\" = \"IDHmut\\nnoncodel\" , \"Deregulating Cellular Energetics_PG_H3mut\" = \"H3mut\" , \"Deregulating Cellular Energetics_PG_H3wt\" = \"H3wt\" , \"Deregulating Cellular Energetics_CG\" = \"CG\" , \"Epigenetic Deregulation_IDHWT\" = \"IDHwt\" , \"Epigenetic Deregulation_IDHMUT_CODEL\" = \"IDHmut\\ncodel\" , \"Epigenetic Deregulation_IDHMUT_NONCODEL\" = \"IDHmut\\nnoncodel\" , \"Epigenetic Deregulation_PG_H3mut\" = \"H3mut\" , \"Epigenetic Deregulation_PG_H3wt\" = \"H3wt\" , \"Epigenetic Deregulation_CG\" = \"CG\" , \"Genome Instability and Mutation_IDHWT\" = \"IDHwt\" , \"Genome Instability and Mutation_IDHMUT_CODEL\" = \"IDHmut\\ncodel\" , \"Genome Instability and Mutation_IDHMUT_NONCODEL\" = \"IDHmut\\nnoncodel\" , \"Genome Instability and Mutation_PG_H3mut\" = \"H3mut\" , \"Genome Instability and Mutation_PG_H3wt\" = \"H3wt\" , \"Genome Instability and Mutation_CG\" = \"CG\" )) + geom_vline ( xintercept = c ( 1.5 , 3.5 , 7.5 , 9.5 , 13.5 , 15.5 , 19.5 , 21.5 , 25.5 , 27.5 ), color = \"white\" , linetype = \"solid\" , size = 3.5 ) + geom_vline ( xintercept = c ( 6.5 , 12.5 , 18.5 , 24.5 ), color = \"black\" , linetype = \"solid\" , size = 0.5 ) dev.off () Suppl Fig 1C \u00b6 Visualize all hallmarks. barplot_all <- ALL_HALLMARK_v1 %>% ggplot ( aes ( x = species , y = proportion , fill = hallmark )) + geom_bar ( stat = \"identity\" , width = 0.975 ) + cowplot :: theme_cowplot ( font_size = 22 ) + geom_vline ( xintercept = c ( 1.5 , 3.5 ), color = \"white\" , linetype = \"solid\" , size = 4 ) + scale_fill_manual ( values = c ( \"Evading Growth Suppressors\" = \"#754200\" , \"Avoiding Immune Destruction\" = \"#D12690\" , \"Enabling Replicative Immortality\" = \"#007DB1\" , \"Tumor-Promoting Inflammation\" = \"#E17A1D\" , \"Activating Invasion and Metastasis\" = \"#221E1F\" , \"Inducing Angiogenesis\" = \"#EF3B34\" , \"Genome Instability and Mutation\" = \"#1A3D8F\" , \"Resisting Cell Death\" = \"#839098\" , \"Deregulating Cellular Energetics\" = \"#7F3F98\" , \"Sustaining Proliferative Signaling\" = \"#019E59\" , \"Epigenetic Deregulation\" = \"#777AB1\" , \"#777AB1\" , \"Other\" = \"#cdcdc1\" )) + theme ( axis.text.x = element_text ( angle = 90 , hjust = 1 , vjust = 0.5 )) + labs ( x = \" \" , y = \"Proportion of patients\" , fill = \"\" ) + facet_wrap ( ~ hallmark ) + theme ( strip.background = element_blank (), strip.text.x = element_blank ()) + scale_x_discrete ( labels = c ( \"CG\" , \"H3wt\" , \"H3mut\" , \"IDHmut-codel\" , \"IDHmut-noncodel\" , \"IDHwt\" )) pdf ( file = \"SF1C.pdf\" , height = 10 , width = 15 , bg = \"transparent\" , useDingbats = FALSE ) barplot_all dev.off () Iorio F, Garcia-Alonso L, Brammeld JS, Martincorena I, Wille DR, McDermott U, et al. Pathway-based dissection of the genomic heterogeneity of cancer hallmarks\u2019 acquisition with SLAPenrich. Sci Rep 2018;8:6713. doi: 10.1038/s41598-018-25076-6 . \u21a9","title":"F1C &middot; Comparative Pathway Analysis"},{"location":"figures/F1C/#fig-1c","text":"Subset of hallmarks as a main figure 1C. pdf ( file = \"F1C.pdf\" , height = 7 , width = 15 , bg = \"transparent\" , useDingbats = FALSE ) ALL_HALLMARK_v1 %>% filter ( hallmark %in% c ( \"Avoiding Immune Destruction\" , \"Deregulating Cellular Energetics\" , \"Epigenetic Deregulation\" , \"Genome Instability and Mutation\" , \"Resisting Cell Death\" )) %>% unite ( \"hallmark_species\" , hallmark , species , remove = F ) %>% mutate ( hallmark_species = factor ( hallmark_species , levels = c ( \"Deregulating Cellular Energetics_CG\" , \"Deregulating Cellular Energetics_PG_H3wt\" , \"Deregulating Cellular Energetics_PG_H3mut\" , \"Deregulating Cellular Energetics_IDHMUT_CODEL\" , \"Deregulating Cellular Energetics_IDHMUT_NONCODEL\" , \"Deregulating Cellular Energetics_IDHWT\" , \"Resisting Cell Death_CG\" , \"Resisting Cell Death_PG_H3wt\" , \"Resisting Cell Death_PG_H3mut\" , \"Resisting Cell Death_IDHMUT_CODEL\" , \"Resisting Cell Death_IDHMUT_NONCODEL\" , \"Resisting Cell Death_IDHWT\" , \"Genome Instability and Mutation_CG\" , \"Genome Instability and Mutation_PG_H3wt\" , \"Genome Instability and Mutation_PG_H3mut\" , \"Genome Instability and Mutation_IDHMUT_CODEL\" , \"Genome Instability and Mutation_IDHMUT_NONCODEL\" , \"Genome Instability and Mutation_IDHWT\" , \"Epigenetic Deregulation_CG\" , \"Epigenetic Deregulation_PG_H3wt\" , \"Epigenetic Deregulation_PG_H3mut\" , \"Epigenetic Deregulation_IDHMUT_CODEL\" , \"Epigenetic Deregulation_IDHMUT_NONCODEL\" , \"Epigenetic Deregulation_IDHWT\" , \"Avoiding Immune Destruction_CG\" , \"Avoiding Immune Destruction_PG_H3wt\" , \"Avoiding Immune Destruction_PG_H3mut\" , \"Avoiding Immune Destruction_IDHMUT_CODEL\" , \"Avoiding Immune Destruction_IDHMUT_NONCODEL\" , \"Avoiding Immune Destruction_IDHWT\" )), hallmark = factor ( hallmark , levels = c ( \"Deregulating Cellular Energetics\" , \"Resisting Cell Death\" , \"Genome Instability and Mutation\" , \"Epigenetic Deregulation\" , \"Avoiding Immune Destruction\" ), labels = c ( \"Deregulating Cellular Energetics\" = \"Deregulating \\nCellular Energetics\" , \"Resisting Cell Death\" = \"Resisting Cell \\nDeath\" , \"Genome Instability and Mutation\" = \"Genome \\nInstability\" , \"Epigenetic \\nDeregulation\" , \"Avoiding Immune Destruction\" = \"Avoiding Immune \\nDestruction\" ))) %>% ggplot ( aes ( x = hallmark_species , y = proportion , fill = hallmark )) + geom_bar ( stat = \"identity\" , position = \"dodge\" , width = 0.975 ) + scale_fill_brewer ( palette = \"Dark2\" , \" \" ) + labs ( x = \" \" , y = \"Proportion of patients\" ) + cowplot :: theme_cowplot ( font_size = 18 ) + theme ( legend.position = \"bottom\" , legend.text = element_text ( size = 22 ), axis.text.x = element_text ( angle = 90 , hjust = 1 , vjust = 0.5 )) + coord_cartesian ( ylim = c ( 0 , 1 )) + scale_x_discrete ( labels = c ( \"Resisting Cell Death_IDHWT\" = \"IDHwt\" , \"Resisting Cell Death_IDHMUT_CODEL\" = \"IDHmut\\ncodel\" , \"Resisting Cell Death_IDHMUT_NONCODEL\" = \"IDHmut\\nnoncodel\" , \"Resisting Cell Death_PG_H3mut\" = \"H3mut\" , \"Resisting Cell Death_PG_H3wt\" = \"H3wt\" , \"Resisting Cell Death_CG\" = \"CG\" , \"Avoiding Immune Destruction_IDHWT\" = \"IDHwt\" , \"Avoiding Immune Destruction_IDHMUT_CODEL\" = \"IDHmut\\ncodel\" , \"Avoiding Immune Destruction_IDHMUT_NONCODEL\" = \"IDHmut\\nnoncodel\" , \"Avoiding Immune Destruction_PG_H3mut\" = \"H3mut\" , \"Avoiding Immune Destruction_PG_H3wt\" = \"H3wt\" , \"Avoiding Immune Destruction_CG\" = \"CG\" , \"Deregulating Cellular Energetics_IDHWT\" = \"IDHwt\" , \"Deregulating Cellular Energetics_IDHMUT_CODEL\" = \"IDHmut\\ncodel\" , \"Deregulating Cellular Energetics_IDHMUT_NONCODEL\" = \"IDHmut\\nnoncodel\" , \"Deregulating Cellular Energetics_PG_H3mut\" = \"H3mut\" , \"Deregulating Cellular Energetics_PG_H3wt\" = \"H3wt\" , \"Deregulating Cellular Energetics_CG\" = \"CG\" , \"Epigenetic Deregulation_IDHWT\" = \"IDHwt\" , \"Epigenetic Deregulation_IDHMUT_CODEL\" = \"IDHmut\\ncodel\" , \"Epigenetic Deregulation_IDHMUT_NONCODEL\" = \"IDHmut\\nnoncodel\" , \"Epigenetic Deregulation_PG_H3mut\" = \"H3mut\" , \"Epigenetic Deregulation_PG_H3wt\" = \"H3wt\" , \"Epigenetic Deregulation_CG\" = \"CG\" , \"Genome Instability and Mutation_IDHWT\" = \"IDHwt\" , \"Genome Instability and Mutation_IDHMUT_CODEL\" = \"IDHmut\\ncodel\" , \"Genome Instability and Mutation_IDHMUT_NONCODEL\" = \"IDHmut\\nnoncodel\" , \"Genome Instability and Mutation_PG_H3mut\" = \"H3mut\" , \"Genome Instability and Mutation_PG_H3wt\" = \"H3wt\" , \"Genome Instability and Mutation_CG\" = \"CG\" )) + geom_vline ( xintercept = c ( 1.5 , 3.5 , 7.5 , 9.5 , 13.5 , 15.5 , 19.5 , 21.5 , 25.5 , 27.5 ), color = \"white\" , linetype = \"solid\" , size = 3.5 ) + geom_vline ( xintercept = c ( 6.5 , 12.5 , 18.5 , 24.5 ), color = \"black\" , linetype = \"solid\" , size = 0.5 ) dev.off ()","title":"Fig 1C"},{"location":"figures/F1C/#suppl-fig-1c","text":"Visualize all hallmarks. barplot_all <- ALL_HALLMARK_v1 %>% ggplot ( aes ( x = species , y = proportion , fill = hallmark )) + geom_bar ( stat = \"identity\" , width = 0.975 ) + cowplot :: theme_cowplot ( font_size = 22 ) + geom_vline ( xintercept = c ( 1.5 , 3.5 ), color = \"white\" , linetype = \"solid\" , size = 4 ) + scale_fill_manual ( values = c ( \"Evading Growth Suppressors\" = \"#754200\" , \"Avoiding Immune Destruction\" = \"#D12690\" , \"Enabling Replicative Immortality\" = \"#007DB1\" , \"Tumor-Promoting Inflammation\" = \"#E17A1D\" , \"Activating Invasion and Metastasis\" = \"#221E1F\" , \"Inducing Angiogenesis\" = \"#EF3B34\" , \"Genome Instability and Mutation\" = \"#1A3D8F\" , \"Resisting Cell Death\" = \"#839098\" , \"Deregulating Cellular Energetics\" = \"#7F3F98\" , \"Sustaining Proliferative Signaling\" = \"#019E59\" , \"Epigenetic Deregulation\" = \"#777AB1\" , \"#777AB1\" , \"Other\" = \"#cdcdc1\" )) + theme ( axis.text.x = element_text ( angle = 90 , hjust = 1 , vjust = 0.5 )) + labs ( x = \" \" , y = \"Proportion of patients\" , fill = \"\" ) + facet_wrap ( ~ hallmark ) + theme ( strip.background = element_blank (), strip.text.x = element_blank ()) + scale_x_discrete ( labels = c ( \"CG\" , \"H3wt\" , \"H3mut\" , \"IDHmut-codel\" , \"IDHmut-noncodel\" , \"IDHwt\" )) pdf ( file = \"SF1C.pdf\" , height = 10 , width = 15 , bg = \"transparent\" , useDingbats = FALSE ) barplot_all dev.off () Iorio F, Garcia-Alonso L, Brammeld JS, Martincorena I, Wille DR, McDermott U, et al. Pathway-based dissection of the genomic heterogeneity of cancer hallmarks\u2019 acquisition with SLAPenrich. Sci Rep 2018;8:6713. doi: 10.1038/s41598-018-25076-6 . \u21a9","title":"Suppl Fig 1C"},{"location":"figures/F1D/","text":"Fig 1D \u00b6 Plot CNS tumors. master_mutrate_table_cns_cg_who <- mutrate_table %>% mutate ( who_subtype = case_when ( cohort == \"Canine Glioma\" ~ \"Canine Glioma\" , TRUE ~ who_subtype )) %>% filter ( tumor_location == \"Brain\" , total_per_mb < 10 ) %>% mutate ( ctype = reorder ( x = who_subtype , X = total_per_mb , FUN = median )) %>% dplyr :: select ( - who_subtype ) %>% dplyr :: rename ( who_subtype = ctype ) log1py_breaks_cns = c ( 0 , 0.5 , 1 , 2 , 5 , 10 ) mutrate_plot1_cns_cg_who <- ggplot ( master_mutrate_table_cns_cg_who , aes ( x = who_subtype , y = total_per_mb )) ## color x-axis based on cohort mutrate_plot1_cns_axis_colour_cg_who <- master_mutrate_table_cns_cg_who [ match ( levels ( master_mutrate_table_cns_cg_who $ who_subtype ), master_mutrate_table_cns_cg_who $ who_subtype , nomatch = 0 ), \"cohort\" ] %>% mutate ( axis_colour = case_when ( grepl ( \"Adult\" , cohort ) ~ \"#8da0cb\" , grepl ( \"Pedia\" , cohort ) ~ \"#fc8d62\" , grepl ( \"Canine\" , cohort ) ~ \"#66c2a5\" , TRUE ~ \"#ffffff\" )) %>% pull ( axis_colour ) fig_1D <- mutrate_plot1_cns_cg_who + geom_boxplot ( aes ( fill = cohort )) + geom_jitter ( width = 0.2 ) + scale_y_continuous ( trans = \"log1p\" , breaks = log1py_breaks_cns ) + cowplot :: theme_cowplot ( font_size = 22 ) + theme ( axis.text.x = element_text ( angle = 45 , hjust = 1 , colour = mutrate_plot1_cns_axis_colour_cg_who ), legend.position = \"bottom\" , legend.key.size = unit ( 1 , \"cm\" )) + labs ( x = \"CNS cancer types across 1,443 patients\" , y = \"Total coding snvs+indels per MB in log(x+1) scale\" ) + scale_fill_manual ( values = c ( \"#66c2a5\" , \"#8da0cb\" , \"#fc8d62\" ), name = \"CNS Tumors\" , labels = c ( \"Canine\" , \"Adult GBM\" , \"Pediatric\" )) cowplot :: save_plot ( \"F1D.pdf\" , fig_1D , base_height = 12 , base_width = 16 , dpi = \"retina\" , useDingbats = FALSE ) Suppl Fig 1D \u00b6 Plot pancancer tumors unexpected , error Running code by copy-paste may result in error related to R syntax, e.g., Error: unexpected ',' in \" . If so, try to copy code first in text editor or RStudio app with lint feature. Please report bugs by submitting a GitHub issue. master_mutrate_table_cg_who <- mutrate_table %>% mutate ( who_subtype = case_when ( cohort == \"Canine Glioma\" ~ \"Canine Glioma\" , TRUE ~ who_subtype )) %>% mutate ( ctype = reorder ( x = who_subtype , X = total_per_mb , FUN = median )) %>% dplyr :: select ( - who_subtype ) %>% dplyr :: rename ( who_subtype = ctype ) log1py_breaks = c ( 0 , 0.5 , 1 , 2 , 5 , 10 , 20 , 50 , 100 , 300 , 500 ) mutrate_plot1_all_cg_who <- ggplot ( master_mutrate_table_cg_who , aes ( x = who_subtype , y = total_per_mb )) ## color x-axis based on cohort mutrate_plot1_axis_colour_cg_who <- master_mutrate_table_cg_who [ match ( levels ( master_mutrate_table_cg_who $ who_subtype ), master_mutrate_table_cg_who $ who_subtype , nomatch = 0 ), \"cohort\" ] %>% mutate ( axis_colour = case_when ( grepl ( \"Adult\" , cohort ) ~ \"#8da0cb\" , grepl ( \"Pedia\" , cohort ) ~ \"#fc8d62\" , grepl ( \"Canine\" , cohort ) ~ \"#66c2a5\" , TRUE ~ \"#ffffff\" )) %>% pull ( axis_colour ) suppl_fig_1D <- mutrate_plot1_all_cg_who + geom_boxplot ( aes ( fill = tumor_location )) + geom_jitter ( width = 0.2 ) + scale_y_continuous ( trans = \"log1p\" , breaks = log1py_breaks ) + cowplot :: theme_cowplot ( font_size = 22 ) + theme ( axis.text.x = element_text ( angle = 45 , hjust = 1 , colour = mutrate_plot1_axis_colour_cg_who ), legend.position = \"bottom\" , legend.key.size = unit ( 1 , \"cm\" )) + labs ( x = \"Cancer type across 4,840 patients\" , y = \"Total coding snvs+indels per MB in log(x+1) scale\" ) cowplot :: save_plot ( \"SF1D.pdf\" , suppl_fig_1D , base_height = 12 , base_width = 16 , dpi = \"retina\" , useDingbats = FALSE ) Suppl Fig 1E \u00b6 Comparing mutational burden across molecular subtypes. high_grade_gliomas <- cgp_suppl_sample_info_master %>% filter ( Tumor_Grade == \"High\" ) %>% pull ( Tumor_Sample_Barcode ) mutrate_table_cns_hgg_idh_classes_cg_who <- master_mutrate_table_cns_cg_who %>% filter ( grepl ( \"IDH|H3\" , who_subtype ) | ( cohort == \"Canine Glioma\" & sample %in% high_grade_gliomas )) %>% dplyr :: rename ( who_subtype_orig = who_subtype ) %>% mutate ( who_subtype_orig = if_else ( cohort == \"Canine Glioma\" , \"Canine HGG\" , as.character ( who_subtype_orig ))) %>% mutate ( who_subtype = reorder ( x = who_subtype_orig , X = total_per_mb , FUN = median )) mutrate_comparisons_idh_classes_cg_who <- list ( c ( \"Canine HGG\" , \"H3wt\" ), c ( \"Canine HGG\" , \"H3mut\" ), c ( \"H3wt\" , \"IDHmut-codel\" ), c ( \"H3mut\" , \"IDHmut-codel\" ), c ( \"H3mut\" , \"H3wt\" ), c ( \"Canine HGG\" , \"IDHwt\" ), c ( \"Canine HGG\" , \"IDHmut-non-codel\" ), c ( \"Canine HGG\" , \"IDHmut-codel\" )) suppl_fig_1E <- ggpubr :: ggboxplot ( mutrate_table_cns_hgg_idh_classes_cg_who , x = \"who_subtype\" , y = \"total_per_mb\" , add = \"jitter\" , bxp.errorbar = TRUE , notch = TRUE , font.label = list ( size = 18 , color = \"black\" ), ylab = \"Somatic Mutation Rate\\nper MB\" , xlab = \"Molecular Subtype\" , fill = c ( \"#fc8d62\" , \"#fc8d62\" , \"#66c2a5\" , \"#8da0cb\" , \"#8da0cb\" , \"#8da0cb\" )) + theme ( axis.text = element_text ( size = 18 ), axis.title = element_text ( size = 20 )) + ggpubr :: stat_compare_means ( comparisons = mutrate_comparisons_idh_classes_cg_who , method = \"wilcox.test\" ) cowplot :: save_plot ( \"SF1E.pdf\" , suppl_fig_1E , base_height = 12 , base_width = 16 , dpi = \"retina\" , useDingbats = FALSE )","title":"F1D &middot; Comparative Somatic Mutational Burden"},{"location":"figures/F1D/#fig-1d","text":"Plot CNS tumors. master_mutrate_table_cns_cg_who <- mutrate_table %>% mutate ( who_subtype = case_when ( cohort == \"Canine Glioma\" ~ \"Canine Glioma\" , TRUE ~ who_subtype )) %>% filter ( tumor_location == \"Brain\" , total_per_mb < 10 ) %>% mutate ( ctype = reorder ( x = who_subtype , X = total_per_mb , FUN = median )) %>% dplyr :: select ( - who_subtype ) %>% dplyr :: rename ( who_subtype = ctype ) log1py_breaks_cns = c ( 0 , 0.5 , 1 , 2 , 5 , 10 ) mutrate_plot1_cns_cg_who <- ggplot ( master_mutrate_table_cns_cg_who , aes ( x = who_subtype , y = total_per_mb )) ## color x-axis based on cohort mutrate_plot1_cns_axis_colour_cg_who <- master_mutrate_table_cns_cg_who [ match ( levels ( master_mutrate_table_cns_cg_who $ who_subtype ), master_mutrate_table_cns_cg_who $ who_subtype , nomatch = 0 ), \"cohort\" ] %>% mutate ( axis_colour = case_when ( grepl ( \"Adult\" , cohort ) ~ \"#8da0cb\" , grepl ( \"Pedia\" , cohort ) ~ \"#fc8d62\" , grepl ( \"Canine\" , cohort ) ~ \"#66c2a5\" , TRUE ~ \"#ffffff\" )) %>% pull ( axis_colour ) fig_1D <- mutrate_plot1_cns_cg_who + geom_boxplot ( aes ( fill = cohort )) + geom_jitter ( width = 0.2 ) + scale_y_continuous ( trans = \"log1p\" , breaks = log1py_breaks_cns ) + cowplot :: theme_cowplot ( font_size = 22 ) + theme ( axis.text.x = element_text ( angle = 45 , hjust = 1 , colour = mutrate_plot1_cns_axis_colour_cg_who ), legend.position = \"bottom\" , legend.key.size = unit ( 1 , \"cm\" )) + labs ( x = \"CNS cancer types across 1,443 patients\" , y = \"Total coding snvs+indels per MB in log(x+1) scale\" ) + scale_fill_manual ( values = c ( \"#66c2a5\" , \"#8da0cb\" , \"#fc8d62\" ), name = \"CNS Tumors\" , labels = c ( \"Canine\" , \"Adult GBM\" , \"Pediatric\" )) cowplot :: save_plot ( \"F1D.pdf\" , fig_1D , base_height = 12 , base_width = 16 , dpi = \"retina\" , useDingbats = FALSE )","title":"Fig 1D"},{"location":"figures/F1D/#suppl-fig-1d","text":"Plot pancancer tumors unexpected , error Running code by copy-paste may result in error related to R syntax, e.g., Error: unexpected ',' in \" . If so, try to copy code first in text editor or RStudio app with lint feature. Please report bugs by submitting a GitHub issue. master_mutrate_table_cg_who <- mutrate_table %>% mutate ( who_subtype = case_when ( cohort == \"Canine Glioma\" ~ \"Canine Glioma\" , TRUE ~ who_subtype )) %>% mutate ( ctype = reorder ( x = who_subtype , X = total_per_mb , FUN = median )) %>% dplyr :: select ( - who_subtype ) %>% dplyr :: rename ( who_subtype = ctype ) log1py_breaks = c ( 0 , 0.5 , 1 , 2 , 5 , 10 , 20 , 50 , 100 , 300 , 500 ) mutrate_plot1_all_cg_who <- ggplot ( master_mutrate_table_cg_who , aes ( x = who_subtype , y = total_per_mb )) ## color x-axis based on cohort mutrate_plot1_axis_colour_cg_who <- master_mutrate_table_cg_who [ match ( levels ( master_mutrate_table_cg_who $ who_subtype ), master_mutrate_table_cg_who $ who_subtype , nomatch = 0 ), \"cohort\" ] %>% mutate ( axis_colour = case_when ( grepl ( \"Adult\" , cohort ) ~ \"#8da0cb\" , grepl ( \"Pedia\" , cohort ) ~ \"#fc8d62\" , grepl ( \"Canine\" , cohort ) ~ \"#66c2a5\" , TRUE ~ \"#ffffff\" )) %>% pull ( axis_colour ) suppl_fig_1D <- mutrate_plot1_all_cg_who + geom_boxplot ( aes ( fill = tumor_location )) + geom_jitter ( width = 0.2 ) + scale_y_continuous ( trans = \"log1p\" , breaks = log1py_breaks ) + cowplot :: theme_cowplot ( font_size = 22 ) + theme ( axis.text.x = element_text ( angle = 45 , hjust = 1 , colour = mutrate_plot1_axis_colour_cg_who ), legend.position = \"bottom\" , legend.key.size = unit ( 1 , \"cm\" )) + labs ( x = \"Cancer type across 4,840 patients\" , y = \"Total coding snvs+indels per MB in log(x+1) scale\" ) cowplot :: save_plot ( \"SF1D.pdf\" , suppl_fig_1D , base_height = 12 , base_width = 16 , dpi = \"retina\" , useDingbats = FALSE )","title":"Suppl Fig 1D"},{"location":"figures/F1D/#suppl-fig-1e","text":"Comparing mutational burden across molecular subtypes. high_grade_gliomas <- cgp_suppl_sample_info_master %>% filter ( Tumor_Grade == \"High\" ) %>% pull ( Tumor_Sample_Barcode ) mutrate_table_cns_hgg_idh_classes_cg_who <- master_mutrate_table_cns_cg_who %>% filter ( grepl ( \"IDH|H3\" , who_subtype ) | ( cohort == \"Canine Glioma\" & sample %in% high_grade_gliomas )) %>% dplyr :: rename ( who_subtype_orig = who_subtype ) %>% mutate ( who_subtype_orig = if_else ( cohort == \"Canine Glioma\" , \"Canine HGG\" , as.character ( who_subtype_orig ))) %>% mutate ( who_subtype = reorder ( x = who_subtype_orig , X = total_per_mb , FUN = median )) mutrate_comparisons_idh_classes_cg_who <- list ( c ( \"Canine HGG\" , \"H3wt\" ), c ( \"Canine HGG\" , \"H3mut\" ), c ( \"H3wt\" , \"IDHmut-codel\" ), c ( \"H3mut\" , \"IDHmut-codel\" ), c ( \"H3mut\" , \"H3wt\" ), c ( \"Canine HGG\" , \"IDHwt\" ), c ( \"Canine HGG\" , \"IDHmut-non-codel\" ), c ( \"Canine HGG\" , \"IDHmut-codel\" )) suppl_fig_1E <- ggpubr :: ggboxplot ( mutrate_table_cns_hgg_idh_classes_cg_who , x = \"who_subtype\" , y = \"total_per_mb\" , add = \"jitter\" , bxp.errorbar = TRUE , notch = TRUE , font.label = list ( size = 18 , color = \"black\" ), ylab = \"Somatic Mutation Rate\\nper MB\" , xlab = \"Molecular Subtype\" , fill = c ( \"#fc8d62\" , \"#fc8d62\" , \"#66c2a5\" , \"#8da0cb\" , \"#8da0cb\" , \"#8da0cb\" )) + theme ( axis.text = element_text ( size = 18 ), axis.title = element_text ( size = 20 )) + ggpubr :: stat_compare_means ( comparisons = mutrate_comparisons_idh_classes_cg_who , method = \"wilcox.test\" ) cowplot :: save_plot ( \"SF1E.pdf\" , suppl_fig_1E , base_height = 12 , base_width = 16 , dpi = \"retina\" , useDingbats = FALSE )","title":"Suppl Fig 1E"},{"location":"figures/F2A/","text":"Fig 2A \u00b6 Somatic copy-number aberrations (SCNA) lanscape of glioma driver genes. Please run required code from Fig 1A prior to running code from this page. pdf ( \"F2A.pdf\" , width = 16 , height = 12 , pointsize = 14 , useDingbats = FALSE ) mafplot_2_scna <- oncoplot ( maf = cgp_maftools_gistic_matched , genes = oncoprint_genes_gistic , additionalFeature = c ( \"dnds_mutsig\" , \"Driver\" ), removeNonMutated = TRUE , keepGeneOrder = FALSE , writeMatrix = FALSE , sortByMutation = FALSE , fontSize = 1.6 , legendFontSize = 2 , annotationFontSize = 1.6 , clinicalFeatures = c ( \"Tumor_Morphology\" , \"Tumor_Grade\" , \"Tumor_Location\" ), annotationColor = ann_colors , colors = varcall_colors [ c ( levels ( cgp_maftools_gistic_matched @ data $ Variant_Classification ), \"Multi_Hit\" ) ], logColBar = FALSE , gene_mar = 10 , bgCol = \"#ffffff\" , borderCol = \"#CCCCCC\" ) dev.off () Somatic copy numbers were classified as follows based on GISTIC2 values. GISTIC2 value Estimated copy number Classification \\(< -1.29\\) -2 Deep deletion \\(-1.29 <> -.65\\) -1 Loss of Heterozygosity (LOH) \\(-.65 <> 2.0\\) 0-1 Copy-neutral or low-level amplification \\(>2.0\\) 2 High-level amplification","title":"F2A &middot; Somatic Copy Number Landscape"},{"location":"figures/F2A/#fig-2a","text":"Somatic copy-number aberrations (SCNA) lanscape of glioma driver genes. Please run required code from Fig 1A prior to running code from this page. pdf ( \"F2A.pdf\" , width = 16 , height = 12 , pointsize = 14 , useDingbats = FALSE ) mafplot_2_scna <- oncoplot ( maf = cgp_maftools_gistic_matched , genes = oncoprint_genes_gistic , additionalFeature = c ( \"dnds_mutsig\" , \"Driver\" ), removeNonMutated = TRUE , keepGeneOrder = FALSE , writeMatrix = FALSE , sortByMutation = FALSE , fontSize = 1.6 , legendFontSize = 2 , annotationFontSize = 1.6 , clinicalFeatures = c ( \"Tumor_Morphology\" , \"Tumor_Grade\" , \"Tumor_Location\" ), annotationColor = ann_colors , colors = varcall_colors [ c ( levels ( cgp_maftools_gistic_matched @ data $ Variant_Classification ), \"Multi_Hit\" ) ], logColBar = FALSE , gene_mar = 10 , bgCol = \"#ffffff\" , borderCol = \"#CCCCCC\" ) dev.off () Somatic copy numbers were classified as follows based on GISTIC2 values. GISTIC2 value Estimated copy number Classification \\(< -1.29\\) -2 Deep deletion \\(-1.29 <> -.65\\) -1 Loss of Heterozygosity (LOH) \\(-.65 <> 2.0\\) 0-1 Copy-neutral or low-level amplification \\(>2.0\\) 2 High-level amplification","title":"Fig 2A"},{"location":"figures/F2B/","text":"Fig 2B \u00b6 Comparative aneuploidy burden. Related code is available at the GLASS consortium marker paper code repository , namely, recapseg_postgres.sql and taylor_aneuploidy.sql 1 . fig_2B <- ggpubr :: ggboxplot ( merged_anp_scores %>% filter ( ! grepl ( \"_LGG\" , who_subtype_alt2 )) %>% mutate ( cohort = ordered ( who_subtype_alt2 , levels = c ( \"Canine Glioma\" , \"H3wt\" , \"H3mut\" , \"IDHmut-codel\" , \"IDHmut-non-codel\" , \"IDHwt\" ))), x = \"cohort\" , y = \"aneuploidy\" , add = \"jitter\" , notch = TRUE , bxp.errorbar = TRUE , xlab = \"\" , ylab = \"Fraction of genome\\nwith aneuploidy\" , fill = c ( \"#66c2a5\" , \"#fc8d62\" , \"#fc8d62\" , \"#8da0cb\" , \"#8da0cb\" , \"#8da0cb\" )) + ggpubr :: stat_compare_means ( ref.group = \"Canine Glioma\" , method = \"wilcox.test\" , label = \"p.signif\" , hide.ns = TRUE , size = 6 ) + cowplot :: theme_cowplot ( font_size = 24 ) + ## make sure that breaks and labels matches order ## defined using levels in ordered function above scale_x_discrete ( breaks = c ( \"Canine Glioma\" , \"H3wt\" , \"H3mut\" , \"IDHmut-codel\" , \"IDHmut-non-codel\" , \"IDHwt\" ), labels = c ( \"Canine\\nGlioma\" , \"H3wt\" , \"H3mut\" , \"IDHmut\\ncodel\" , \"IDHmut\\nnon-codel\" , \"IDHwt\" )) + theme ( axis.text.x = element_text ( angle = 45 , hjust = 1 ), axis.title.x = element_blank ()) cowplot :: save_plot ( \"F2B.pdf\" , fig_2B , base_height = 4 , base_width = 5 , dpi = \"retina\" , useDingbats = FALSE ) Suppl Fig 2E \u00b6 Aneuploidy vs. somatic mutation burden. p3_cgp_anp_mutrate_table <- cgp_aneuploidy_metrics_master %>% filter ( ! is.na ( adusted_coding_mutrate ), ! is.na ( aneuploidy )) %>% mutate_if ( bit64 :: is.integer64 , as.integer ) %>% mutate ( mutation_load = if_else ( ntile ( adusted_coding_mutrate , 2 ) > 1 , \"HIGH\" , \"LOW\" )) suppl_fig_2E <- ggpubr :: ggboxplot ( p3_cgp_anp_mutrate_table , \"mutation_load\" , \"aneuploidy_score\" , add = \"jitter\" , notch = TRUE , xlab = \"Coding Mutational Rate\" , ylab = \"Anueploidy Score\" , bxp.errorbar = TRUE , font.label = list ( size = 16 , color = \"black\" , face = \"bold\" )) + ggpubr :: stat_compare_means ( method = \"wilcox.test\" , size = 6 ) + cowplot :: theme_cowplot ( font_size = 24 ) save_plot ( \"SF2E.pdf\" , suppl_fig_2E , base_height = 12 , base_width = 16 , dpi = \"retina\" , useDingbats = FALSE ) Barthel FP, Johnson KC, Varn FS, Moskalik AD, Tanner G, Kocakavuk E, et al. Longitudinal molecular trajectories of diffuse glioma in adults. Nature 2019. doi: 10.1038/s41586-019-1775-1 . \u21a9","title":"F2B &middot; Comparative Aneuploidy Burden"},{"location":"figures/F2B/#fig-2b","text":"Comparative aneuploidy burden. Related code is available at the GLASS consortium marker paper code repository , namely, recapseg_postgres.sql and taylor_aneuploidy.sql 1 . fig_2B <- ggpubr :: ggboxplot ( merged_anp_scores %>% filter ( ! grepl ( \"_LGG\" , who_subtype_alt2 )) %>% mutate ( cohort = ordered ( who_subtype_alt2 , levels = c ( \"Canine Glioma\" , \"H3wt\" , \"H3mut\" , \"IDHmut-codel\" , \"IDHmut-non-codel\" , \"IDHwt\" ))), x = \"cohort\" , y = \"aneuploidy\" , add = \"jitter\" , notch = TRUE , bxp.errorbar = TRUE , xlab = \"\" , ylab = \"Fraction of genome\\nwith aneuploidy\" , fill = c ( \"#66c2a5\" , \"#fc8d62\" , \"#fc8d62\" , \"#8da0cb\" , \"#8da0cb\" , \"#8da0cb\" )) + ggpubr :: stat_compare_means ( ref.group = \"Canine Glioma\" , method = \"wilcox.test\" , label = \"p.signif\" , hide.ns = TRUE , size = 6 ) + cowplot :: theme_cowplot ( font_size = 24 ) + ## make sure that breaks and labels matches order ## defined using levels in ordered function above scale_x_discrete ( breaks = c ( \"Canine Glioma\" , \"H3wt\" , \"H3mut\" , \"IDHmut-codel\" , \"IDHmut-non-codel\" , \"IDHwt\" ), labels = c ( \"Canine\\nGlioma\" , \"H3wt\" , \"H3mut\" , \"IDHmut\\ncodel\" , \"IDHmut\\nnon-codel\" , \"IDHwt\" )) + theme ( axis.text.x = element_text ( angle = 45 , hjust = 1 ), axis.title.x = element_blank ()) cowplot :: save_plot ( \"F2B.pdf\" , fig_2B , base_height = 4 , base_width = 5 , dpi = \"retina\" , useDingbats = FALSE )","title":"Fig 2B"},{"location":"figures/F2B/#suppl-fig-2e","text":"Aneuploidy vs. somatic mutation burden. p3_cgp_anp_mutrate_table <- cgp_aneuploidy_metrics_master %>% filter ( ! is.na ( adusted_coding_mutrate ), ! is.na ( aneuploidy )) %>% mutate_if ( bit64 :: is.integer64 , as.integer ) %>% mutate ( mutation_load = if_else ( ntile ( adusted_coding_mutrate , 2 ) > 1 , \"HIGH\" , \"LOW\" )) suppl_fig_2E <- ggpubr :: ggboxplot ( p3_cgp_anp_mutrate_table , \"mutation_load\" , \"aneuploidy_score\" , add = \"jitter\" , notch = TRUE , xlab = \"Coding Mutational Rate\" , ylab = \"Anueploidy Score\" , bxp.errorbar = TRUE , font.label = list ( size = 16 , color = \"black\" , face = \"bold\" )) + ggpubr :: stat_compare_means ( method = \"wilcox.test\" , size = 6 ) + cowplot :: theme_cowplot ( font_size = 24 ) save_plot ( \"SF2E.pdf\" , suppl_fig_2E , base_height = 12 , base_width = 16 , dpi = \"retina\" , useDingbats = FALSE ) Barthel FP, Johnson KC, Varn FS, Moskalik AD, Tanner G, Kocakavuk E, et al. Longitudinal molecular trajectories of diffuse glioma in adults. Nature 2019. doi: 10.1038/s41586-019-1775-1 . \u21a9","title":"Suppl Fig 2E"},{"location":"figures/F2C/","text":"mat_aneuploidy_summary_mostvar_cgAll matrix contains proportion of patients per cohort with arm-level aneuploidy, and was based on arm-level aneuploidy metrics . Related code is available at the GLASS consortium marker paper code repository , namely, recapseg_postgres.sql and taylor_aneuploidy.sql 1 . pheatmap :: pheatmap ( mat_aneuploidy_summary_mostvar_cgAll , cluster_rows = FALSE , cluster_cols = TRUE , cellwidth = 12 , cellheight = 12 , fontsize_col = 8 , fontsize_row = 12 , labels_col = colnames ( mat_aneuploidy_summary_mostvar_cgAll ), filename = \"F2C.pdf\" , width = 12 , height = 4 , angle_col = 45 , gaps_row = c ( 1 , 4 ), useDingbats = FALSE ) Barthel FP, Johnson KC, Varn FS, Moskalik AD, Tanner G, Kocakavuk E, et al. Longitudinal molecular trajectories of diffuse glioma in adults. Nature 2019. doi: 10.1038/s41586-019-1775-1 . \u21a9","title":"F2C &middot; Comparative Shared Syntenic Aneuploidy"},{"location":"figures/F2D/","text":"Fig 2D \u00b6 Clonality of potential driver genes with respect to intra-tumor heterogeneity as measured with Shannon entropy. Error: unexpected symbol in... who_subtype ... Prefer runnning code in RStudio. This error does not appear when running code in RStudio but pops up when running on command-line R. Likely due to font ligatures and/or use of of line breaks. fig_2D <- ggplot ( merged_ccf_vaf_df %>% ## Pediatric LGG has minimal somatic ## drivers, i.e., ~ quiet genome filter ( who_subtype != \"PG_LGG\" ), aes ( x = Shannon_entropy , y = Cellular_Prevalence , label = Hugo_Symbol )) + geom_point ( alpha = 0.3 , aes ( colour = clone_type , size = VAF )) + scale_size ( range = c ( . 1 , 10 ), name = \"VAF\" ) + ggrepel :: geom_label_repel ( data = . %>% filter ( Hugo_Symbol %in% c ( oncoprint_genes_snv_scna , \"CIC\" )) %>% group_by ( who_subtype , clone_type ) %>% add_count ( Hugo_Symbol , sort = T ) %>% mutate ( Hugo_Symbol = sprintf ( \"%s (%s)\" , Hugo_Symbol , n )) %>% filter (( who_subtype != \"PG_H3wt\" & n >= 1 ) | ( who_subtype == \"PG_H3wt\" & n >= 2 )) %>% ungroup () %>% distinct ( Hugo_Symbol , .keep_all = TRUE ), nudge_x = 0.25 , direction = \"y\" , hjust = 0 , force = 2 , segment.size = 0.2 , size = 6 , seed = 1234 ) + facet_wrap ( ~ who_subtype ) + cowplot :: theme_cowplot ( font_size = 24 ) + theme ( legend.position = \"bottom\" , legend.box = \"vertical\" , legend.text = element_text ( size = 14 )) + guides ( colour = guide_legend ( override.aes = list ( size = 10 , alpha = 1 ))) cowplot :: save_plot ( \"F2D.pdf\" , fig_2D , base_height = 12 , base_width = 16 , dpi = \"retina\" , useDingbats = FALSE ) Suppl Fig 2D \u00b6 Comparative intra-tumor heterogeneity measured using Shannon entropy. suppl_fig_2D <- ggpubr :: ggboxplot ( updated_merged_entropy_df_ridges , x = \"who_subtype\" , y = \"Shannon_entropy\" , add = \"jitter\" , bxp.errorbar = TRUE , notch = FALSE , font.label = list ( size = 18 , color = \"black\" ), ylab = \"Shannon Diversity Index\" , xlab = \"Molecular Subtype\" , fill = c ( \"#8da0cb\" , \"#8da0cb\" , \"#66c2a5\" , \"#fc8d62\" , \"#fc8d62\" , \"#fc8d62\" )) + theme ( axis.text = element_text ( size = 18 ), axis.title = element_text ( size = 20 )) + ggpubr :: stat_compare_means ( ref.group = \"Canine Glioma\" , method = \"wilcox.test\" , label = \"p.format\" , hide.ns = TRUE , size = 5 , label.y = 1.1 ) save_plot ( \"SF2D.pdf\" , suppl_fig_2D , base_height = 12 , base_width = 16 , dpi = \"retina\" , useDingbats = FALSE )","title":"F2D &middot; Comparative Intratumor Heterogeneity"},{"location":"figures/F2D/#fig-2d","text":"Clonality of potential driver genes with respect to intra-tumor heterogeneity as measured with Shannon entropy. Error: unexpected symbol in... who_subtype ... Prefer runnning code in RStudio. This error does not appear when running code in RStudio but pops up when running on command-line R. Likely due to font ligatures and/or use of of line breaks. fig_2D <- ggplot ( merged_ccf_vaf_df %>% ## Pediatric LGG has minimal somatic ## drivers, i.e., ~ quiet genome filter ( who_subtype != \"PG_LGG\" ), aes ( x = Shannon_entropy , y = Cellular_Prevalence , label = Hugo_Symbol )) + geom_point ( alpha = 0.3 , aes ( colour = clone_type , size = VAF )) + scale_size ( range = c ( . 1 , 10 ), name = \"VAF\" ) + ggrepel :: geom_label_repel ( data = . %>% filter ( Hugo_Symbol %in% c ( oncoprint_genes_snv_scna , \"CIC\" )) %>% group_by ( who_subtype , clone_type ) %>% add_count ( Hugo_Symbol , sort = T ) %>% mutate ( Hugo_Symbol = sprintf ( \"%s (%s)\" , Hugo_Symbol , n )) %>% filter (( who_subtype != \"PG_H3wt\" & n >= 1 ) | ( who_subtype == \"PG_H3wt\" & n >= 2 )) %>% ungroup () %>% distinct ( Hugo_Symbol , .keep_all = TRUE ), nudge_x = 0.25 , direction = \"y\" , hjust = 0 , force = 2 , segment.size = 0.2 , size = 6 , seed = 1234 ) + facet_wrap ( ~ who_subtype ) + cowplot :: theme_cowplot ( font_size = 24 ) + theme ( legend.position = \"bottom\" , legend.box = \"vertical\" , legend.text = element_text ( size = 14 )) + guides ( colour = guide_legend ( override.aes = list ( size = 10 , alpha = 1 ))) cowplot :: save_plot ( \"F2D.pdf\" , fig_2D , base_height = 12 , base_width = 16 , dpi = \"retina\" , useDingbats = FALSE )","title":"Fig 2D"},{"location":"figures/F2D/#suppl-fig-2d","text":"Comparative intra-tumor heterogeneity measured using Shannon entropy. suppl_fig_2D <- ggpubr :: ggboxplot ( updated_merged_entropy_df_ridges , x = \"who_subtype\" , y = \"Shannon_entropy\" , add = \"jitter\" , bxp.errorbar = TRUE , notch = FALSE , font.label = list ( size = 18 , color = \"black\" ), ylab = \"Shannon Diversity Index\" , xlab = \"Molecular Subtype\" , fill = c ( \"#8da0cb\" , \"#8da0cb\" , \"#66c2a5\" , \"#fc8d62\" , \"#fc8d62\" , \"#fc8d62\" )) + theme ( axis.text = element_text ( size = 18 ), axis.title = element_text ( size = 20 )) + ggpubr :: stat_compare_means ( ref.group = \"Canine Glioma\" , method = \"wilcox.test\" , label = \"p.format\" , hide.ns = TRUE , size = 5 , label.y = 1.1 ) save_plot ( \"SF2D.pdf\" , suppl_fig_2D , base_height = 12 , base_width = 16 , dpi = \"retina\" , useDingbats = FALSE )","title":"Suppl Fig 2D"},{"location":"figures/F3A/","text":"Required metadata \u00b6 Canine glioma patients with outlier mutation profile . ## filter out missing values in mutation rate column cgp_sample_info_maftools_hypermuts <- cgp_suppl_sample_info_master %>% filter ( ! is.na ( adusted_coding_mutrate )) %>% arrange ( desc ( adusted_coding_mutrate )) outlier_model_hypermut <- lm ( adusted_coding_mutrate ~ Matched_Normal + Tissue_Archival , data = cgp_sample_info_maftools_hypermuts ) summary ( outlier_model_hypermut ) ## Hypermut outliers after correcting for archival and paired vs tonly mode hypermut_true_outliers <- car :: outlierTest ( outlier_model_hypermut , cutoff = 0.05 , labels = cgp_sample_info_maftools_hypermuts $ Tumor_Sample_Barcode ) sprintf ( \"hypermut case: %s\" , names ( hypermut_true_outliers $ rstudent )) cgp_sample_info_non_hypermut <- cgp_sample_info_maftools_hypermuts %>% filter ( ! Tumor_Sample_Barcode %in% names ( hypermut_true_outliers $ rstudent )) #### outliers in non-hypermut cases ## cases with mut rate exceeding chi sq distribution by > 95% outlier_in_non_hypermut_chisq_95 <- cgp_sample_info_non_hypermut [ outliers :: scores ( cgp_sample_info_non_hypermut $ adusted_coding_mutrate , type = \"chisq\" , prob = 0.95 ),] %>% pull ( Tumor_Sample_Barcode ) sprintf ( \"outlier among non_hypermut: %s\" , outlier_in_non_hypermut_chisq_95 ) cgp_outlier_mutant_cases <- c ( names ( hypermut_true_outliers $ rstudent ), outlier_in_non_hypermut_chisq_95 ) cgp_outlier_mutant_cases \"i_8228\" \"i_95FC\" \"i_BD58\" \"i_1C36\" \"i_502F\" \"i_D732\" \"i_6B06\" \"i_56B5\" Pick random 9/73 cases 1 without outlier mutation profile. ## nonhm_sampled <- sample(ncol(fit_res_nonhm$contribution), ## ncol(fit_res_hm$contribution), replace = FALSE) ## following cases were used in the right-side panel of fig 3A nonhm_sampled <- c ( 28 , 48 , 30 , 57 , 54 , 40 , 37 , 7 , 62 ) Deconvolute known human mutational signatures Fitted mutational signatures, i.e., fit_res , fit_res_hm and fit_res_nonhm were derived using fit_to_signatures function from MutationalPatterns R package 2 . ## mut_mat object is within /data/cgp_base_objects_v1.0.RData ## mut_mat <- MutationalPattern::mut_matrix(vcf_list = vcfs, ## ref_genome = ref_genome) fit_res <- fit_to_signatures ( mut_mat , cancer_signatures ) hypermutators <- c ( \"i_8228\" , \"i_95FC\" , \"i_BD58\" , \"i_1C36\" , \"i_502F\" , \"i_D732\" , \"i_6B06\" , \"i_56B5\" ) non_hypermutators <- colnames ( mut_mat )[ ! colnames ( mut_mat ) %in% hypermutators ] ## non-hypermutators or one without outlier mutation profile fit_res_nonhm <- fit_to_signatures ( mut_mat [, colnames ( mut_mat ) %in% non_hypermutators ], cancer_signatures ) ## hypermutators or one with outlier mutation profile fit_res_hm <- fit_to_signatures ( mut_mat [, colnames ( mut_mat ) %in% hypermutators ], cancer_signatures ) Merge signatures by proposed mechanism hm_sigs <- hm_nonhm_topsigs_tbl %>% filter ( sig_enrichment != \"NON_HM\" ) %>% pull ( sig_id ) nonhm_sigs <- hm_nonhm_topsigs_tbl %>% filter ( sig_enrichment != \"HM\" ) %>% pull ( sig_id ) fit_res_hm_merged <- as_tibble ( fit_res_hm $ contribution [ hm_sigs , ], rownames = \"sig_id\" ) %>% left_join ( hm_nonhm_topsigs_tbl %>% dplyr :: select ( sig_id , sig_group )) %>% gather ( patient_id , sig_score , starts_with ( \"i_\" )) %>% group_by ( sig_group , patient_id ) %>% mutate ( group_score = sum ( sig_score )) %>% dplyr :: select ( sig_group , group_score , patient_id , sig_id ) %>% spread ( patient_id , group_score ) %>% distinct ( sig_group , .keep_all = TRUE ) %>% ungroup () %>% dplyr :: select ( - sig_id ) %>% column_to_rownames ( \"sig_group\" ) fit_res_nonhm_merged <- as_tibble ( fit_res_nonhm $ contribution [ nonhm_sigs , ], rownames = \"sig_id\" ) %>% left_join ( hm_nonhm_topsigs_tbl %>% dplyr :: select ( sig_id , sig_group )) %>% gather ( patient_id , sig_score , starts_with ( \"i_\" )) %>% group_by ( sig_group , patient_id ) %>% mutate ( group_score = sum ( sig_score )) %>% dplyr :: select ( sig_group , group_score , patient_id , sig_id ) %>% spread ( patient_id , group_score ) %>% distinct ( sig_group , .keep_all = TRUE ) %>% ungroup () %>% dplyr :: select ( - sig_id ) %>% column_to_rownames ( \"sig_group\" ) ## group cancer signatures context proportion for HM cancer_signatures_merged <- as_tibble ( cancer_signatures , rownames = \"context\" ) %>% gather ( sig_id , sig_score , - context ) %>% left_join ( hm_nonhm_topsigs_tbl %>% dplyr :: select ( sig_id , sig_group )) %>% filter ( ! is.na ( sig_group )) %>% group_by ( sig_group , context ) %>% mutate ( group_score = sum ( sig_score )) %>% filter ( ! is.na ( group_score )) %>% ungroup () %>% dplyr :: select ( sig_group , group_score , context , sig_id ) %>% distinct ( sig_group , context , group_score , .keep_all = FALSE ) %>% spread ( sig_group , group_score ) %>% distinct ( context , .keep_all = TRUE ) %>% column_to_rownames ( \"context\" ) hm_nonhm_sig_group_colours <- hm_nonhm_topsigs_tbl %>% distinct ( sig_group , .keep_all = TRUE ) %>% pull ( colour_hex ) names ( hm_nonhm_sig_group_colours ) <- hm_nonhm_topsigs_tbl %>% distinct ( sig_group , .keep_all = TRUE ) %>% pull ( sig_group ) Function to plot signature contribution Rewrite of plot_contribution function from MutationalPatterns R package. cgp_plot_contribution <- function ( contribution , signatures , index = c (), coord_flip = FALSE , mode = \"relative\" , palette = c ()) { if ( ! ( mode == \"relative\" | mode == \"absolute\" )) stop ( \"mode parameter should be either 'relative' or 'absolute'\" ) if ( length ( index > 0 )) { contribution = contribution [, index ] } Sample = NULL Contribution = NULL Signature = NULL if ( mode == \"relative\" ) { m_contribution = data.table :: melt ( contribution , \"sig_id\" ) colnames ( m_contribution ) = c ( \"Signature\" , \"Sample\" , \"Contribution\" ) plot = ggplot ( m_contribution , aes ( x = factor ( Sample ), y = Contribution , fill = factor ( Signature ), order = Sample )) + geom_bar ( position = \"fill\" , stat = \"identity\" , colour = \"black\" ) + labs ( x = \"\" , y = \"Relative contribution\" ) + theme_bw () + theme ( panel.grid.minor.x = element_blank (), panel.grid.major.x = element_blank ()) + theme ( panel.grid.minor.y = element_blank (), panel.grid.major.y = element_blank ()) } else { if ( missing ( signatures )) stop ( paste ( \"For contribution plotting in mode 'absolute':\" , \"also provide signatures matrix\" )) total_signatures = colSums ( signatures ) abs_contribution = contribution [, -1 ] * total_signatures rownames ( abs_contribution ) = contribution %>% pull ( sig_id ) m_contribution = data.table :: melt ( abs_contribution , \"sig_id\" ) colnames ( m_contribution ) = c ( \"Signature\" , \"Sample\" , \"Contribution\" ) plot = ggplot ( m_contribution , aes ( x = factor ( Sample ), y = Contribution , fill = factor ( Signature ), order = Sample )) + geom_bar ( stat = \"identity\" , colour = \"black\" ) + labs ( x = \"\" , y = \"Absolute contribution \\n (no. mutations)\" ) + theme_bw () + theme ( panel.grid.minor.x = element_blank (), panel.grid.major.x = element_blank ()) + theme ( panel.grid.minor.y = element_blank (), panel.grid.major.y = element_blank ()) } if ( length ( palette ) > 0 ) { plot = plot + scale_fill_manual ( name = \"Signature\" , values = palette ) } else { plot = plot + scale_fill_discrete ( name = \"Signature\" ) } if ( coord_flip ) { plot = plot + coord_flip () + xlim ( rev ( levels ( factor ( m_contribution $ Sample )))) } else { plot = plot + xlim ( levels ( factor ( m_contribution $ Sample ))) } return ( plot ) } Fig 3A \u00b6 Plot deconvoluted signature contribution after grouping signatures based on proposed mechanism. ## plot canine glioma patients with outlier mutation profile plotsig_hm_rel_merged <- cgp_plot_contribution ( as_tibble ( fit_res_hm_merged , rownames = \"sig_id\" ), cancer_signatures_merged , coord_flip = FALSE , mode = \"relative\" , palette = hm_nonhm_sig_group_colours ) + theme_cowplot ( font_size = 20 ) + theme ( axis.text.x = element_blank (), legend.position = \"bottom\" , legend.text = element_text ( size = 14 )) + labs ( x = \"Canine Gliomas with outlier mutation profile\\n(n=8)\" ) + guides ( fill = guide_legend ( title = \"Known signatures grouped by\\ntheir proposed mechanism\" , title.position = \"bottom\" , label.theme = element_text ( size = 14 ), keywidth = 0.8 , keyheight = 0.8 , default.unit = \"cm\" , nrow = 2 , byrow = TRUE )) ## plot randomly sampled 9 canine patients without outlier mutation profile plotsig_nonhm_rel_sampled_merged <- cgp_plot_contribution ( as_tibble ( fit_res_nonhm_merged [ , nonhm_sampled ], rownames = \"sig_id\" ), cancer_signatures_merged , coord_flip = FALSE , mode = \"relative\" , palette = hm_nonhm_sig_group_colours ) + theme_cowplot ( font_size = 20 ) + theme ( axis.text.x = element_blank (), legend.position = \"bottom\" , legend.text = element_text ( size = 14 )) + labs ( x = \"Canine Gliomas with no outlier mutation profile\\n(9/73)\" ) + guides ( fill = guide_legend ( title = \"Signatures grouped by\\ntheir proposed mechanism\" , title.position = \"bottom\" , label.theme = element_text ( size = 14 ), keywidth = 0.8 , keyheight = 0.8 , default.unit = \"cm\" , nrow = 2 , byrow = TRUE )) ggsave ( \"F3A.pdf\" , grid.arrange ( plotsig_hm_rel_merged , plotsig_nonhm_rel_sampled_merged , ncol = 2 , widths = c ( 5 , 5 )), width = 18 , height = 12 , useDingbats = FALSE ) Suppl Fig 3A \u00b6 Plot absolute and relative contribution of dominant signatures. ## Select signatures with major contribution > 3rd Qu (2.75) summary ( rowMedians ( fit_res $ contribution )) select_high <- rownames ( fit_res $ contribution )[ which ( rowMedians ( fit_res $ contribution ) > 2.75 ) ] select_high color_lib <- c ( '#8e0152' , '#c51b7d' , '#de77ae' , '#f1b6da' , '#fde0ef' , '#f7f7f7' , '#e6f5d0' , '#b8e186' , '#7fbc41' , '#4d9221' , '#276419' ) ## Plot contribution ggsave ( \"SF3A_top_panel.pdf\" , plot_contribution ( fit_res $ contribution [ select_high , ], cancer_signatures [ , select_high ], coord_flip = FALSE , mode = \"absolute\" , palette = color_lib ) + theme ( axis.text.x = element_text ( angle = 90 )), width = 9 , height = 5 , useDingbats = FALSE ) ggsave ( \"SF3A_bottom_panel.pdf\" , plot_contribution ( fit_res $ contribution [ select_high , ], cancer_signatures [ , select_high ], coord_flip = FALSE , mode = \"relative\" , palette = color_lib ) + theme ( axis.text.x = element_text ( angle = 90 )), width = 9 , height = 5 , useDingbats = FALSE ) Suppl Fig 3B \u00b6 Boxplot comparison of genomic instability related signatures between canine glioma patients separated by outlier mutation profile. suppl_fig_3B <- ggpubr :: ggboxplot ( instability_sigs_df , x = \"hypermut\" , y = \"sig_contrib\" , add = \"jitter\" , facet.by = \"sig_group\" , scales = \"free_y\" , bxp.errorbar = TRUE , notch = TRUE , font.label = list ( size = 7 , color = \"black\" ), ylab = \"Signature contribution\" , xlab = \"Canine Gliomas separated by\\noutlier mutation profile\" ) + theme ( axis.text = element_text ( size = 11 ), axis.title = element_text ( size = 11 )) + ggpubr :: stat_compare_means ( method = \"wilcox.test\" , label.y.npc = 0.9 , na.rm = TRUE ) ggsave ( \"SF3B.pdf\" , suppl_fig_3B , width = 12 , height = 8 , useDingbats = FALSE ) Earlier version of fit_res_hm had 9 and not 8 canine glioma patients with outlier mutation profile. Therefore, 9 cases were selected at random from remaining patients without outlier mutation profile. \u21a9 Blokzijl F, Janssen R, van Boxtel R, Cuppen E. MutationalPatterns: comprehensive genome-wide analysis of mutational processes. Genome Med 2018;10:33. doi: 10.1186/s13073-018-0539-0 . \u21a9","title":"F3A &middot; Somatic Mutational Signatures - Deconvoluted"},{"location":"figures/F3A/#required-metadata","text":"Canine glioma patients with outlier mutation profile . ## filter out missing values in mutation rate column cgp_sample_info_maftools_hypermuts <- cgp_suppl_sample_info_master %>% filter ( ! is.na ( adusted_coding_mutrate )) %>% arrange ( desc ( adusted_coding_mutrate )) outlier_model_hypermut <- lm ( adusted_coding_mutrate ~ Matched_Normal + Tissue_Archival , data = cgp_sample_info_maftools_hypermuts ) summary ( outlier_model_hypermut ) ## Hypermut outliers after correcting for archival and paired vs tonly mode hypermut_true_outliers <- car :: outlierTest ( outlier_model_hypermut , cutoff = 0.05 , labels = cgp_sample_info_maftools_hypermuts $ Tumor_Sample_Barcode ) sprintf ( \"hypermut case: %s\" , names ( hypermut_true_outliers $ rstudent )) cgp_sample_info_non_hypermut <- cgp_sample_info_maftools_hypermuts %>% filter ( ! Tumor_Sample_Barcode %in% names ( hypermut_true_outliers $ rstudent )) #### outliers in non-hypermut cases ## cases with mut rate exceeding chi sq distribution by > 95% outlier_in_non_hypermut_chisq_95 <- cgp_sample_info_non_hypermut [ outliers :: scores ( cgp_sample_info_non_hypermut $ adusted_coding_mutrate , type = \"chisq\" , prob = 0.95 ),] %>% pull ( Tumor_Sample_Barcode ) sprintf ( \"outlier among non_hypermut: %s\" , outlier_in_non_hypermut_chisq_95 ) cgp_outlier_mutant_cases <- c ( names ( hypermut_true_outliers $ rstudent ), outlier_in_non_hypermut_chisq_95 ) cgp_outlier_mutant_cases \"i_8228\" \"i_95FC\" \"i_BD58\" \"i_1C36\" \"i_502F\" \"i_D732\" \"i_6B06\" \"i_56B5\" Pick random 9/73 cases 1 without outlier mutation profile. ## nonhm_sampled <- sample(ncol(fit_res_nonhm$contribution), ## ncol(fit_res_hm$contribution), replace = FALSE) ## following cases were used in the right-side panel of fig 3A nonhm_sampled <- c ( 28 , 48 , 30 , 57 , 54 , 40 , 37 , 7 , 62 ) Deconvolute known human mutational signatures Fitted mutational signatures, i.e., fit_res , fit_res_hm and fit_res_nonhm were derived using fit_to_signatures function from MutationalPatterns R package 2 . ## mut_mat object is within /data/cgp_base_objects_v1.0.RData ## mut_mat <- MutationalPattern::mut_matrix(vcf_list = vcfs, ## ref_genome = ref_genome) fit_res <- fit_to_signatures ( mut_mat , cancer_signatures ) hypermutators <- c ( \"i_8228\" , \"i_95FC\" , \"i_BD58\" , \"i_1C36\" , \"i_502F\" , \"i_D732\" , \"i_6B06\" , \"i_56B5\" ) non_hypermutators <- colnames ( mut_mat )[ ! colnames ( mut_mat ) %in% hypermutators ] ## non-hypermutators or one without outlier mutation profile fit_res_nonhm <- fit_to_signatures ( mut_mat [, colnames ( mut_mat ) %in% non_hypermutators ], cancer_signatures ) ## hypermutators or one with outlier mutation profile fit_res_hm <- fit_to_signatures ( mut_mat [, colnames ( mut_mat ) %in% hypermutators ], cancer_signatures ) Merge signatures by proposed mechanism hm_sigs <- hm_nonhm_topsigs_tbl %>% filter ( sig_enrichment != \"NON_HM\" ) %>% pull ( sig_id ) nonhm_sigs <- hm_nonhm_topsigs_tbl %>% filter ( sig_enrichment != \"HM\" ) %>% pull ( sig_id ) fit_res_hm_merged <- as_tibble ( fit_res_hm $ contribution [ hm_sigs , ], rownames = \"sig_id\" ) %>% left_join ( hm_nonhm_topsigs_tbl %>% dplyr :: select ( sig_id , sig_group )) %>% gather ( patient_id , sig_score , starts_with ( \"i_\" )) %>% group_by ( sig_group , patient_id ) %>% mutate ( group_score = sum ( sig_score )) %>% dplyr :: select ( sig_group , group_score , patient_id , sig_id ) %>% spread ( patient_id , group_score ) %>% distinct ( sig_group , .keep_all = TRUE ) %>% ungroup () %>% dplyr :: select ( - sig_id ) %>% column_to_rownames ( \"sig_group\" ) fit_res_nonhm_merged <- as_tibble ( fit_res_nonhm $ contribution [ nonhm_sigs , ], rownames = \"sig_id\" ) %>% left_join ( hm_nonhm_topsigs_tbl %>% dplyr :: select ( sig_id , sig_group )) %>% gather ( patient_id , sig_score , starts_with ( \"i_\" )) %>% group_by ( sig_group , patient_id ) %>% mutate ( group_score = sum ( sig_score )) %>% dplyr :: select ( sig_group , group_score , patient_id , sig_id ) %>% spread ( patient_id , group_score ) %>% distinct ( sig_group , .keep_all = TRUE ) %>% ungroup () %>% dplyr :: select ( - sig_id ) %>% column_to_rownames ( \"sig_group\" ) ## group cancer signatures context proportion for HM cancer_signatures_merged <- as_tibble ( cancer_signatures , rownames = \"context\" ) %>% gather ( sig_id , sig_score , - context ) %>% left_join ( hm_nonhm_topsigs_tbl %>% dplyr :: select ( sig_id , sig_group )) %>% filter ( ! is.na ( sig_group )) %>% group_by ( sig_group , context ) %>% mutate ( group_score = sum ( sig_score )) %>% filter ( ! is.na ( group_score )) %>% ungroup () %>% dplyr :: select ( sig_group , group_score , context , sig_id ) %>% distinct ( sig_group , context , group_score , .keep_all = FALSE ) %>% spread ( sig_group , group_score ) %>% distinct ( context , .keep_all = TRUE ) %>% column_to_rownames ( \"context\" ) hm_nonhm_sig_group_colours <- hm_nonhm_topsigs_tbl %>% distinct ( sig_group , .keep_all = TRUE ) %>% pull ( colour_hex ) names ( hm_nonhm_sig_group_colours ) <- hm_nonhm_topsigs_tbl %>% distinct ( sig_group , .keep_all = TRUE ) %>% pull ( sig_group ) Function to plot signature contribution Rewrite of plot_contribution function from MutationalPatterns R package. cgp_plot_contribution <- function ( contribution , signatures , index = c (), coord_flip = FALSE , mode = \"relative\" , palette = c ()) { if ( ! ( mode == \"relative\" | mode == \"absolute\" )) stop ( \"mode parameter should be either 'relative' or 'absolute'\" ) if ( length ( index > 0 )) { contribution = contribution [, index ] } Sample = NULL Contribution = NULL Signature = NULL if ( mode == \"relative\" ) { m_contribution = data.table :: melt ( contribution , \"sig_id\" ) colnames ( m_contribution ) = c ( \"Signature\" , \"Sample\" , \"Contribution\" ) plot = ggplot ( m_contribution , aes ( x = factor ( Sample ), y = Contribution , fill = factor ( Signature ), order = Sample )) + geom_bar ( position = \"fill\" , stat = \"identity\" , colour = \"black\" ) + labs ( x = \"\" , y = \"Relative contribution\" ) + theme_bw () + theme ( panel.grid.minor.x = element_blank (), panel.grid.major.x = element_blank ()) + theme ( panel.grid.minor.y = element_blank (), panel.grid.major.y = element_blank ()) } else { if ( missing ( signatures )) stop ( paste ( \"For contribution plotting in mode 'absolute':\" , \"also provide signatures matrix\" )) total_signatures = colSums ( signatures ) abs_contribution = contribution [, -1 ] * total_signatures rownames ( abs_contribution ) = contribution %>% pull ( sig_id ) m_contribution = data.table :: melt ( abs_contribution , \"sig_id\" ) colnames ( m_contribution ) = c ( \"Signature\" , \"Sample\" , \"Contribution\" ) plot = ggplot ( m_contribution , aes ( x = factor ( Sample ), y = Contribution , fill = factor ( Signature ), order = Sample )) + geom_bar ( stat = \"identity\" , colour = \"black\" ) + labs ( x = \"\" , y = \"Absolute contribution \\n (no. mutations)\" ) + theme_bw () + theme ( panel.grid.minor.x = element_blank (), panel.grid.major.x = element_blank ()) + theme ( panel.grid.minor.y = element_blank (), panel.grid.major.y = element_blank ()) } if ( length ( palette ) > 0 ) { plot = plot + scale_fill_manual ( name = \"Signature\" , values = palette ) } else { plot = plot + scale_fill_discrete ( name = \"Signature\" ) } if ( coord_flip ) { plot = plot + coord_flip () + xlim ( rev ( levels ( factor ( m_contribution $ Sample )))) } else { plot = plot + xlim ( levels ( factor ( m_contribution $ Sample ))) } return ( plot ) }","title":"Required metadata"},{"location":"figures/F3A/#fig-3a","text":"Plot deconvoluted signature contribution after grouping signatures based on proposed mechanism. ## plot canine glioma patients with outlier mutation profile plotsig_hm_rel_merged <- cgp_plot_contribution ( as_tibble ( fit_res_hm_merged , rownames = \"sig_id\" ), cancer_signatures_merged , coord_flip = FALSE , mode = \"relative\" , palette = hm_nonhm_sig_group_colours ) + theme_cowplot ( font_size = 20 ) + theme ( axis.text.x = element_blank (), legend.position = \"bottom\" , legend.text = element_text ( size = 14 )) + labs ( x = \"Canine Gliomas with outlier mutation profile\\n(n=8)\" ) + guides ( fill = guide_legend ( title = \"Known signatures grouped by\\ntheir proposed mechanism\" , title.position = \"bottom\" , label.theme = element_text ( size = 14 ), keywidth = 0.8 , keyheight = 0.8 , default.unit = \"cm\" , nrow = 2 , byrow = TRUE )) ## plot randomly sampled 9 canine patients without outlier mutation profile plotsig_nonhm_rel_sampled_merged <- cgp_plot_contribution ( as_tibble ( fit_res_nonhm_merged [ , nonhm_sampled ], rownames = \"sig_id\" ), cancer_signatures_merged , coord_flip = FALSE , mode = \"relative\" , palette = hm_nonhm_sig_group_colours ) + theme_cowplot ( font_size = 20 ) + theme ( axis.text.x = element_blank (), legend.position = \"bottom\" , legend.text = element_text ( size = 14 )) + labs ( x = \"Canine Gliomas with no outlier mutation profile\\n(9/73)\" ) + guides ( fill = guide_legend ( title = \"Signatures grouped by\\ntheir proposed mechanism\" , title.position = \"bottom\" , label.theme = element_text ( size = 14 ), keywidth = 0.8 , keyheight = 0.8 , default.unit = \"cm\" , nrow = 2 , byrow = TRUE )) ggsave ( \"F3A.pdf\" , grid.arrange ( plotsig_hm_rel_merged , plotsig_nonhm_rel_sampled_merged , ncol = 2 , widths = c ( 5 , 5 )), width = 18 , height = 12 , useDingbats = FALSE )","title":"Fig 3A"},{"location":"figures/F3A/#suppl-fig-3a","text":"Plot absolute and relative contribution of dominant signatures. ## Select signatures with major contribution > 3rd Qu (2.75) summary ( rowMedians ( fit_res $ contribution )) select_high <- rownames ( fit_res $ contribution )[ which ( rowMedians ( fit_res $ contribution ) > 2.75 ) ] select_high color_lib <- c ( '#8e0152' , '#c51b7d' , '#de77ae' , '#f1b6da' , '#fde0ef' , '#f7f7f7' , '#e6f5d0' , '#b8e186' , '#7fbc41' , '#4d9221' , '#276419' ) ## Plot contribution ggsave ( \"SF3A_top_panel.pdf\" , plot_contribution ( fit_res $ contribution [ select_high , ], cancer_signatures [ , select_high ], coord_flip = FALSE , mode = \"absolute\" , palette = color_lib ) + theme ( axis.text.x = element_text ( angle = 90 )), width = 9 , height = 5 , useDingbats = FALSE ) ggsave ( \"SF3A_bottom_panel.pdf\" , plot_contribution ( fit_res $ contribution [ select_high , ], cancer_signatures [ , select_high ], coord_flip = FALSE , mode = \"relative\" , palette = color_lib ) + theme ( axis.text.x = element_text ( angle = 90 )), width = 9 , height = 5 , useDingbats = FALSE )","title":"Suppl Fig 3A"},{"location":"figures/F3A/#suppl-fig-3b","text":"Boxplot comparison of genomic instability related signatures between canine glioma patients separated by outlier mutation profile. suppl_fig_3B <- ggpubr :: ggboxplot ( instability_sigs_df , x = \"hypermut\" , y = \"sig_contrib\" , add = \"jitter\" , facet.by = \"sig_group\" , scales = \"free_y\" , bxp.errorbar = TRUE , notch = TRUE , font.label = list ( size = 7 , color = \"black\" ), ylab = \"Signature contribution\" , xlab = \"Canine Gliomas separated by\\noutlier mutation profile\" ) + theme ( axis.text = element_text ( size = 11 ), axis.title = element_text ( size = 11 )) + ggpubr :: stat_compare_means ( method = \"wilcox.test\" , label.y.npc = 0.9 , na.rm = TRUE ) ggsave ( \"SF3B.pdf\" , suppl_fig_3B , width = 12 , height = 8 , useDingbats = FALSE ) Earlier version of fit_res_hm had 9 and not 8 canine glioma patients with outlier mutation profile. Therefore, 9 cases were selected at random from remaining patients without outlier mutation profile. \u21a9 Blokzijl F, Janssen R, van Boxtel R, Cuppen E. MutationalPatterns: comprehensive genome-wide analysis of mutational processes. Genome Med 2018;10:33. doi: 10.1186/s13073-018-0539-0 . \u21a9","title":"Suppl Fig 3B"},{"location":"figures/F3B/","text":"Fig 3B, Suppl Fig 3D \u00b6 Compare de-novo mutational signatures in canine and human pediatric and adult glioma with deconvoluted ones from Human Cancers (n=42). For each of three cohorts (canine, human pediatric and adult glioma), de-novo signatures were constructed as follows: nmf_res <- MutationalPatterns :: extract_signatures ( mut_mat , rank = 3 , nrun = 100 ) denovo_cg_sig <- as.data.frame ( t ( nmf_res $ signatures )) Resulting de-novo signatures from three cohorts were then merged into a single dataframe. ## merged_ag_pg_cg_denovo_sig is already given in cgp_base_objects_*.RData merged_ag_pg_cg_denovo_sig <- as_tibble ( ag_denovo_sig , rownames = \"sigs\" ) %>% bind_rows ( as_tibble ( pg_denovo_sig , rownames = \"sigs\" )) %>% bind_rows ( as_tibble ( transposed_denovo_cg_sig , rownames = \"sigs\" )) %>% column_to_rownames ( \"sigs\" ) Calculate cosine similarity using deconvolution_compare function in Palimpsest R package 1 . Author of Palimpsest package has provided a detailed documentation on how to run Palimpsest workflow. ## Deconvoluted signatures from human cancers alt_cancer_sig_transposed <- as.data.frame ( t ( cancer_signatures )) ## rename trinucleotide context pattern to match in de-novo dataframe colnames ( alt_cancer_sig_transposed ) <- gsub ( \"([AGCT]{1})(\\\\[)([AGCT]{1})(\\\\>)([AGCT]{1})(\\\\])([AGCT]{1})\" , \"\\\\3\\\\5_\\\\1.\\\\7\" , perl = TRUE , colnames ( alt_cancer_sig_transposed )) ## calculate cosine similarity pdf ( \"tmp_SF3D.pdf\" , width = 18 , height = 12 , pointsize = 12 , bg = \"white\" , compress = FALSE , useDingbats = FALSE ) cos_sim_denovo_cancer_sig_ag_pg_cg <- Palimpsest :: deconvolution_compare ( merged_ag_pg_cg_denovo_sig , alt_cancer_sig_transposed ) dev.off () ## Plot Suppl Fig 3D ## Fig3B is a cropped version of Suppl Fig 3D pheatmap :: pheatmap ( cos_sim_denovo_cancer_sig_ag_pg_cg , filename = \"SF3D.pdf\" , width = 12 , height = 12 , useDingbats = FALSE ) Shinde J, Bayard Q, Imbeaud S, Hirsch TZ, Liu F, Renault V, et al. Palimpsest: an R package for studying mutational and structural variant signatures along clonal evolution in cancer. Bioinformatics 2018. doi: 10.1093/bioinformatics/bty388 . \u21a9","title":"F3B &middot; Somatic Mutational Landscape - de novo"},{"location":"figures/F3B/#fig-3b-suppl-fig-3d","text":"Compare de-novo mutational signatures in canine and human pediatric and adult glioma with deconvoluted ones from Human Cancers (n=42). For each of three cohorts (canine, human pediatric and adult glioma), de-novo signatures were constructed as follows: nmf_res <- MutationalPatterns :: extract_signatures ( mut_mat , rank = 3 , nrun = 100 ) denovo_cg_sig <- as.data.frame ( t ( nmf_res $ signatures )) Resulting de-novo signatures from three cohorts were then merged into a single dataframe. ## merged_ag_pg_cg_denovo_sig is already given in cgp_base_objects_*.RData merged_ag_pg_cg_denovo_sig <- as_tibble ( ag_denovo_sig , rownames = \"sigs\" ) %>% bind_rows ( as_tibble ( pg_denovo_sig , rownames = \"sigs\" )) %>% bind_rows ( as_tibble ( transposed_denovo_cg_sig , rownames = \"sigs\" )) %>% column_to_rownames ( \"sigs\" ) Calculate cosine similarity using deconvolution_compare function in Palimpsest R package 1 . Author of Palimpsest package has provided a detailed documentation on how to run Palimpsest workflow. ## Deconvoluted signatures from human cancers alt_cancer_sig_transposed <- as.data.frame ( t ( cancer_signatures )) ## rename trinucleotide context pattern to match in de-novo dataframe colnames ( alt_cancer_sig_transposed ) <- gsub ( \"([AGCT]{1})(\\\\[)([AGCT]{1})(\\\\>)([AGCT]{1})(\\\\])([AGCT]{1})\" , \"\\\\3\\\\5_\\\\1.\\\\7\" , perl = TRUE , colnames ( alt_cancer_sig_transposed )) ## calculate cosine similarity pdf ( \"tmp_SF3D.pdf\" , width = 18 , height = 12 , pointsize = 12 , bg = \"white\" , compress = FALSE , useDingbats = FALSE ) cos_sim_denovo_cancer_sig_ag_pg_cg <- Palimpsest :: deconvolution_compare ( merged_ag_pg_cg_denovo_sig , alt_cancer_sig_transposed ) dev.off () ## Plot Suppl Fig 3D ## Fig3B is a cropped version of Suppl Fig 3D pheatmap :: pheatmap ( cos_sim_denovo_cancer_sig_ag_pg_cg , filename = \"SF3D.pdf\" , width = 12 , height = 12 , useDingbats = FALSE ) Shinde J, Bayard Q, Imbeaud S, Hirsch TZ, Liu F, Renault V, et al. Palimpsest: an R package for studying mutational and structural variant signatures along clonal evolution in cancer. Bioinformatics 2018. doi: 10.1093/bioinformatics/bty388 . \u21a9","title":"Fig 3B, Suppl Fig 3D"},{"location":"figures/F3C/","text":"Plot estimated mutational signature contribution per driver gene. ## Function to plot each of three panels of Fig 3C plot_driver_gene_signatures <- function ( df , xtitle ) { tmp_driver_vcf <- df %>% filter ( Gene_Name %in% oncoprint_genes_snv_scna ) %>% ## extract columns that have signature wise probability per somatic variant dplyr :: select ( Gene_Name , ends_with ( \"prob\" )) %>% distinct () %>% gather ( sigs , prop , - Gene_Name ) %>% mutate ( prop = if_else ( is.na ( prop ), 0 , prop )) %>% group_by ( Gene_Name ) %>% mutate ( total_prop = sum ( prop ), prop_scaled = scales :: rescale ( prop , to = c ( 0 , 1 ))) %>% ungroup () %>% filter ( ! total_prop == 0 ) %>% mutate ( sigs = sprintf ( \"S%s\" , gsub ( \"(Signature\\\\.)([0-9]{1,2})(\\\\.prob)\" , \"\\\\2\" , sigs ))) %>% left_join ( driver_sigs_groups %>% dplyr :: rename ( sigs = signature )) cols_sig_group <- c ( \"Aging\" = \"#b2182b\" , \"MMR\" = \"#fddbc7\" , \"HR defect\" = \"#ffffbf\" , \"S18_Neuroblastoma\" = \"#542788\" , \"APOBEC_AID\" = \"#ef8a62\" , \"UV\" = \"#998ec3\" , \"S16_S25\" = \"lightgray\" ) ggplot ( tmp_driver_vcf , aes ( Gene_Name , prop_scaled , fill = factor ( sig_group ))) + geom_bar ( position = \"fill\" , stat = \"identity\" ) + scale_y_continuous ( labels = scales :: percent_format ()) + coord_flip () + scale_fill_manual ( values = cols_sig_group ) + theme_cowplot ( font_size = 22 ) + labs ( x = \"Percentage contribution from signatures\" , y = xtitle , fill = \"Signatures\" ) + theme ( legend.title = element_text ( color = \"blue\" , size = 14 ), legend.text = element_text ( size = 12 )) } ## Plot Fig 3C panels plot_driver_genes_sigs_cg <- plot_driver_gene_signatures ( trimmed_cg_vcf , \"Canine\" ) plot_driver_genes_sigs_pg <- plot_driver_gene_signatures ( trimmed_pg_vcf , \"Pediatric\" ) plot_driver_genes_sigs_ag <- plot_driver_gene_signatures ( trimmed_ag_vcf , \"Adult\" ) ggsave ( \"F3C.pdf\" , grid.arrange ( plot_driver_genes_sigs_cg + theme ( legend.position = \"bottom\" ), plot_driver_genes_sigs_pg + theme ( legend.position = \"bottom\" ), plot_driver_genes_sigs_ag + theme ( legend.position = \"bottom\" ), ncol = 3 , widths = c ( 4 , 4 , 4 ), heights = c ( 8 , 8 , 8 )), width = 20 , height = 24 , useDingbats = FALSE )","title":"F3C &middot; Comparative Somatic Mutational Signatures in Driver Genes"},{"location":"figures/F3D/","text":"Winning Tables \u00b6 Make winning matrix of somatic variants in cancer driver genes (n=73) based on inferred clonality using Palimpsest R package 1 . Author of Palimpsest package has provided a detailed documentation on how to run Palimpsest workflow. ## function to trim vcfs and make winning tables mk_win_table <- function ( win_table_vcf ) { vcf_timing <- win_table_vcf %>% add_count ( Gene_Name , timing_state ) %>% mutate ( result = case_when ( grepl ( \"early_clonal\" , timing_state ) ~ 5 , grepl ( \"early_subclonal\" , timing_state ) ~ 1 , grepl ( \"late_clonal\" , timing_state ) ~ -5 , grepl ( \"late_subclonal\" , timing_state ) ~ -1 , TRUE ~ 0 )) %>% dplyr :: select ( Gene_Name , result , n ) %>% distinct () %>% dplyr :: select ( Gene_Name , result , n ) %>% ## get weighted counts by multiplying events and occurrence mutate ( weighted_result = result * n ) %>% dplyr :: rename ( freq = n ) %>% group_by ( Gene_Name ) %>% mutate ( mean_result = mean ( weighted_result )) %>% ungroup () %>% arrange ( Gene_Name , mean_result ) %>% distinct ( Gene_Name , mean_result ) %>% ## decide early vs late per driver event using ## majority vote mutate ( timing = case_when ( mean_result < 0 ~ \"LATE\" , mean_result > 0 ~ \"EARLY\" , mean_result == 0 ~ \"DRAW\" , TRUE ~ \"NONE\" )) ## let driver gene compete with one another: combination matrix wintbl_combn <- choose ( nrow ( vcf_timing ), 2 ) snv_df_wintbl <- as.data.frame ( matrix ( apply ( vcf_timing %>% dplyr :: select ( Gene_Name , mean_result ), 2 , combn , m = 2 ), nrow = wintbl_combn ), stringsAsFactors = F ) %>% tbl_df () %>% ## rename V1 and V2 to P1 and P2, respectively dplyr :: rename_at ( vars ( V1 , V2 ), ~ gsub ( \"V\" , \"P\" , . )) %>% ## where _vaf is clonality based estimate if event ## is ~clonal (early) or ~subclonal dplyr :: rename ( P1_vaf = V3 , P2_vaf = V4 ) %>% ## take a win/loss/draw call mutate ( outcome = case_when ( P1_vaf > P2_vaf ~ \"P1\" , P1_vaf < P2_vaf ~ \"P2\" , P1_vaf == P2_vaf ~ \"D\" , TRUE ~ NA_character_ )) %>% dplyr :: select ( P1 , P2 , outcome ) return ( snv_df_wintbl ) } ## Get winning tables from vcfs cg_win_table <- mk_win_table ( win_table_cg_vcf ) pg_win_table <- mk_win_table ( win_table_pg_vcf ) ag_win_table <- mk_win_table ( win_table_ag_vcf ) Fig 3D \u00b6 Run Bradley-Terry model to get estimated relative timing of somatic driver events . #### Run and plot BT model #### ## default to Canine Glioma plot_timing_btmodel <- function ( win_table = cg_win_table , plot_title = \"Canine Glioma\" , genes2plot = oncoprint_genes_snv_scna ) { library ( tidyverse ) library ( BradleyTerryScalable ) library ( igraph ) library ( ggridges ) set.seed ( 1989 ) #### Import somatic winning table #### win_table_raw <- win_table #### create btdata #### toy_data_4col <- codes_to_counts ( win_table_raw , c ( \"P1\" , \"P2\" , \"D\" )) toy_btdata <- btdata ( toy_data_4col , return_graph = TRUE ) #### fit model: btfit #### ## Prefer using MAP estimate if summary(toy_btdata) returns ## not-fully connected network: Needs to be checked manually ## and to follow warning flags print ( summary ( toy_btdata )) toy_fit_MLE <- btfit ( toy_btdata , 1 ) toy_fit_MAP <- btfit ( toy_btdata , 1.1 ) summary ( toy_fit_MLE , SE = TRUE ) summary ( toy_fit_MAP , SE = TRUE ) coef ( toy_fit_MLE ) coef ( toy_fit_MAP ) vcov ( toy_fit_MLE , ref = \"home\" ) vcov ( toy_fit_MAP , ref = \"home\" ) #### get winning prob #### fitted ( toy_fit_MLE , as_df = TRUE ) fitted ( toy_fit_MAP , as_df = TRUE ) btprob ( toy_fit_MAP , as_df = TRUE ) btprob ( toy_fit_MLE , as_df = TRUE ) toy_fit_MAP_prob <- btprob ( toy_fit_MAP ) toy_fit_map_df <- btprob ( toy_fit_MAP , as_df = TRUE ) toy_fit_map_mat <- as.data.frame ( as.matrix ( toy_fit_MAP_prob )) ## convert to rank-order df toy_fit_map_mat_ranked <- toy_fit_map_mat %>% rownames_to_column ( \"driver\" ) %>% mutate_at ( vars ( - driver ), ~ ( 1 - cume_dist ( . ))) ## probability long table toy_fit_map_mat_long_tbl <- toy_fit_map_mat %>% rownames_to_column () %>% gather ( p2 , prob , - rowname ) %>% distinct () ## rank order long table toy_fit_map_mat_ranked_long_tbl <- toy_fit_map_mat_ranked %>% gather ( p2 , rank , - driver ) %>% distinct () #### Figure 3D: Timing Plots #### toy_fit_map_mat_long_tbl <- toy_fit_map_mat %>% rownames_to_column () %>% ## select rows to plot matching genes found in ## known somatic driver genes filter ( rowname %in% genes2plot ) %>% gather ( p2 , prob , - rowname ) %>% distinct () #### export timing plots #### ggplot ( toy_fit_map_mat_long_tbl , aes ( 1 - prob , rowname , fill = ..x.. ), group = p2 ) + geom_density_ridges_gradient ( scale = 1 , rel_min_height = 0.01 ) + viridis :: scale_fill_viridis ( name = \"Probability\" , option = \"C\" ) + labs ( title = plot_title , x = \"Probability being a late event\" , y = \"Somatic Drivers\" ) + guides ( fill = guide_colorbar ( barwidth = 15 , barheight = 1.5 )) + theme_ridges ( font_size = 22 ) + theme ( legend.position = \"bottom\" ) } ## plot per-cohort relative timing probabilities of driver genes timing_plot_canine <- plot_timing_btmodel ( win_table = cg_win_table , plot_title = \"Canine Glioma\" , genes2plot = oncoprint_genes_snv_scna ) timing_plot_peds <- plot_timing_btmodel ( win_table = pg_win_table , plot_title = \"Human Pediatric Glioma\" , genes2plot = oncoprint_genes_snv_scna ) timing_plot_adult <- plot_timing_btmodel ( win_table = ag_win_table , plot_title = \"human Adult Glioma\" , genes2plot = oncoprint_genes_snv_scna ) library ( gridExtra ) ggsave ( \"F3D.pdf\" , grid.arrange ( timing_plot_canine , timing_plot_peds , timing_plot_adult , ncol = 3 , widths = c ( 4 , 4 , 4 ), heights = c ( 4 , 4 , 4 )), width = 24 , height = 24 , useDingbats = FALSE ) Shinde J, Bayard Q, Imbeaud S, Hirsch TZ, Liu F, Renault V, et al. Palimpsest: an R package for studying mutational and structural variant signatures along clonal evolution in cancer. Bioinformatics 2018. doi: 10.1093/bioinformatics/bty388 . \u21a9","title":"F3D &middot; Comparative Molecular Timing of Driver Events"},{"location":"figures/F3D/#winning-tables","text":"Make winning matrix of somatic variants in cancer driver genes (n=73) based on inferred clonality using Palimpsest R package 1 . Author of Palimpsest package has provided a detailed documentation on how to run Palimpsest workflow. ## function to trim vcfs and make winning tables mk_win_table <- function ( win_table_vcf ) { vcf_timing <- win_table_vcf %>% add_count ( Gene_Name , timing_state ) %>% mutate ( result = case_when ( grepl ( \"early_clonal\" , timing_state ) ~ 5 , grepl ( \"early_subclonal\" , timing_state ) ~ 1 , grepl ( \"late_clonal\" , timing_state ) ~ -5 , grepl ( \"late_subclonal\" , timing_state ) ~ -1 , TRUE ~ 0 )) %>% dplyr :: select ( Gene_Name , result , n ) %>% distinct () %>% dplyr :: select ( Gene_Name , result , n ) %>% ## get weighted counts by multiplying events and occurrence mutate ( weighted_result = result * n ) %>% dplyr :: rename ( freq = n ) %>% group_by ( Gene_Name ) %>% mutate ( mean_result = mean ( weighted_result )) %>% ungroup () %>% arrange ( Gene_Name , mean_result ) %>% distinct ( Gene_Name , mean_result ) %>% ## decide early vs late per driver event using ## majority vote mutate ( timing = case_when ( mean_result < 0 ~ \"LATE\" , mean_result > 0 ~ \"EARLY\" , mean_result == 0 ~ \"DRAW\" , TRUE ~ \"NONE\" )) ## let driver gene compete with one another: combination matrix wintbl_combn <- choose ( nrow ( vcf_timing ), 2 ) snv_df_wintbl <- as.data.frame ( matrix ( apply ( vcf_timing %>% dplyr :: select ( Gene_Name , mean_result ), 2 , combn , m = 2 ), nrow = wintbl_combn ), stringsAsFactors = F ) %>% tbl_df () %>% ## rename V1 and V2 to P1 and P2, respectively dplyr :: rename_at ( vars ( V1 , V2 ), ~ gsub ( \"V\" , \"P\" , . )) %>% ## where _vaf is clonality based estimate if event ## is ~clonal (early) or ~subclonal dplyr :: rename ( P1_vaf = V3 , P2_vaf = V4 ) %>% ## take a win/loss/draw call mutate ( outcome = case_when ( P1_vaf > P2_vaf ~ \"P1\" , P1_vaf < P2_vaf ~ \"P2\" , P1_vaf == P2_vaf ~ \"D\" , TRUE ~ NA_character_ )) %>% dplyr :: select ( P1 , P2 , outcome ) return ( snv_df_wintbl ) } ## Get winning tables from vcfs cg_win_table <- mk_win_table ( win_table_cg_vcf ) pg_win_table <- mk_win_table ( win_table_pg_vcf ) ag_win_table <- mk_win_table ( win_table_ag_vcf )","title":"Winning Tables"},{"location":"figures/F3D/#fig-3d","text":"Run Bradley-Terry model to get estimated relative timing of somatic driver events . #### Run and plot BT model #### ## default to Canine Glioma plot_timing_btmodel <- function ( win_table = cg_win_table , plot_title = \"Canine Glioma\" , genes2plot = oncoprint_genes_snv_scna ) { library ( tidyverse ) library ( BradleyTerryScalable ) library ( igraph ) library ( ggridges ) set.seed ( 1989 ) #### Import somatic winning table #### win_table_raw <- win_table #### create btdata #### toy_data_4col <- codes_to_counts ( win_table_raw , c ( \"P1\" , \"P2\" , \"D\" )) toy_btdata <- btdata ( toy_data_4col , return_graph = TRUE ) #### fit model: btfit #### ## Prefer using MAP estimate if summary(toy_btdata) returns ## not-fully connected network: Needs to be checked manually ## and to follow warning flags print ( summary ( toy_btdata )) toy_fit_MLE <- btfit ( toy_btdata , 1 ) toy_fit_MAP <- btfit ( toy_btdata , 1.1 ) summary ( toy_fit_MLE , SE = TRUE ) summary ( toy_fit_MAP , SE = TRUE ) coef ( toy_fit_MLE ) coef ( toy_fit_MAP ) vcov ( toy_fit_MLE , ref = \"home\" ) vcov ( toy_fit_MAP , ref = \"home\" ) #### get winning prob #### fitted ( toy_fit_MLE , as_df = TRUE ) fitted ( toy_fit_MAP , as_df = TRUE ) btprob ( toy_fit_MAP , as_df = TRUE ) btprob ( toy_fit_MLE , as_df = TRUE ) toy_fit_MAP_prob <- btprob ( toy_fit_MAP ) toy_fit_map_df <- btprob ( toy_fit_MAP , as_df = TRUE ) toy_fit_map_mat <- as.data.frame ( as.matrix ( toy_fit_MAP_prob )) ## convert to rank-order df toy_fit_map_mat_ranked <- toy_fit_map_mat %>% rownames_to_column ( \"driver\" ) %>% mutate_at ( vars ( - driver ), ~ ( 1 - cume_dist ( . ))) ## probability long table toy_fit_map_mat_long_tbl <- toy_fit_map_mat %>% rownames_to_column () %>% gather ( p2 , prob , - rowname ) %>% distinct () ## rank order long table toy_fit_map_mat_ranked_long_tbl <- toy_fit_map_mat_ranked %>% gather ( p2 , rank , - driver ) %>% distinct () #### Figure 3D: Timing Plots #### toy_fit_map_mat_long_tbl <- toy_fit_map_mat %>% rownames_to_column () %>% ## select rows to plot matching genes found in ## known somatic driver genes filter ( rowname %in% genes2plot ) %>% gather ( p2 , prob , - rowname ) %>% distinct () #### export timing plots #### ggplot ( toy_fit_map_mat_long_tbl , aes ( 1 - prob , rowname , fill = ..x.. ), group = p2 ) + geom_density_ridges_gradient ( scale = 1 , rel_min_height = 0.01 ) + viridis :: scale_fill_viridis ( name = \"Probability\" , option = \"C\" ) + labs ( title = plot_title , x = \"Probability being a late event\" , y = \"Somatic Drivers\" ) + guides ( fill = guide_colorbar ( barwidth = 15 , barheight = 1.5 )) + theme_ridges ( font_size = 22 ) + theme ( legend.position = \"bottom\" ) } ## plot per-cohort relative timing probabilities of driver genes timing_plot_canine <- plot_timing_btmodel ( win_table = cg_win_table , plot_title = \"Canine Glioma\" , genes2plot = oncoprint_genes_snv_scna ) timing_plot_peds <- plot_timing_btmodel ( win_table = pg_win_table , plot_title = \"Human Pediatric Glioma\" , genes2plot = oncoprint_genes_snv_scna ) timing_plot_adult <- plot_timing_btmodel ( win_table = ag_win_table , plot_title = \"human Adult Glioma\" , genes2plot = oncoprint_genes_snv_scna ) library ( gridExtra ) ggsave ( \"F3D.pdf\" , grid.arrange ( timing_plot_canine , timing_plot_peds , timing_plot_adult , ncol = 3 , widths = c ( 4 , 4 , 4 ), heights = c ( 4 , 4 , 4 )), width = 24 , height = 24 , useDingbats = FALSE ) Shinde J, Bayard Q, Imbeaud S, Hirsch TZ, Liu F, Renault V, et al. Palimpsest: an R package for studying mutational and structural variant signatures along clonal evolution in cancer. Bioinformatics 2018. doi: 10.1093/bioinformatics/bty388 . \u21a9","title":"Fig 3D"},{"location":"figures/F4/","text":"DNA methylation based classification of canine glioma. Preprocessing \u00b6 Format data for plotting \u00b6 library(ggplot2) library(egg) # Cluster probabilities to determine sample plot order cgp_RRBS.noNormals_ord <- hclust( dist(cgp_RRBS.noNormals_class_prediction$probabilities, method = \"euclidean\"), method = \"ward.D\" )$order cgp_RRBS.noNormals_class_prediction$probabilities <- cgp_RRBS.noNormals_class_prediction$probabilities[cgp_RRBS.noNormals_ord,] cgp_RRBS.noNormals_class_prediction$predictions <- factor(cgp_RRBS.noNormals_class_prediction$predictions[cgp_RRBS.noNormals_ord], levels = c(\"Adult-IDH_mut\",\"Adult-IDH_wt\",\"Pediatric-Tumor\")) # Reformat probabilities table for plotting cgp_RRBS.noNormals_class_probabilities <- reshape2::melt(cgp_RRBS.noNormals_class_prediction$probabilities) colnames(cgp_RRBS.noNormals_class_probabilities) <- c(\"Sample\",\"Predicted_Class\",\"Prediction_Probability\") cgp_RRBS.noNormals_class_probabilities$Sample <- factor(cgp_RRBS.noNormals_class_probabilities$Sample, levels = rownames(cgp_RRBS.noNormals_class_prediction$probabilities)[cgp_RRBS.noNormals_ord]) # Create shorthand barcode for sample text on x-axis (on mutationsFig) consisting of 4 character caseID only SampleLabel <- unlist(lapply(strsplit(rownames(cgp_RRBS.noNormals_class_prediction$probabilities)[cgp_RRBS.noNormals_ord],\"-\"), `[`, 3)) SampleLabel <- paste0(\"i_\",SampleLabel) # Create label for sample text on x-axis (on mutationsFig) to color IDHmut samples SampleLabelStyle <- rep(\"plain\",length(SampleLabel)) IDHmutsamples <- which(rownames(cgp_RRBS.noNormals_class_prediction$probabilities)[cgp_RRBS.noNormals_ord] %in% c(\"CGP-S03-E7AB-8AD9ACF7-T1-A2-J05\",\"CGP-S03-1165-177480CC-T1-A2-J05\",\"CGP-S04-1166-3C6CFE5F-T1-A1-J05\")) SampleLabelStyle[IDHmutsamples] <- \"bold\" Create table for plotting annotations \u00b6 cgp_RRBS.noNormals_class_predictions <- data.frame(Sample=rownames(cgp_RRBS.noNormals_class_prediction$probabilities), Class=cgp_RRBS.noNormals_class_prediction$predictions, Location=cgp_RRBS.noNormals_sample_info$Tumor_Location, Tumor_Grade=cgp_RRBS.noNormals_sample_info$Tumor_Grade, Histology=cgp_RRBS.noNormals_sample_info$Tumor_Morphology) cgp_RRBS.noNormals_class_predictions$Location <- factor(cgp_RRBS.noNormals_class_predictions$Location, levels = c(\"Hemispheric\",\"Cerebellar\",\"Midline\")) Labels/colors for plot \u00b6 class_probabilities_labels <- c(\"Glioma\",\"Normal\",\"IDHmut\",\"IDHmut\\n1p/19q codel\",\"IDHwt\",\"Normal\") class_probabilities_limits <- c(\"Pediatric-Tumor\",\"Pediatric-Normal\",\"Adult-IDH_mut\",\"Adult-IDH_mut,1p/19q_codel\",\"Adult-IDH_wt\",\"Adult-Normal\") class_probabilities_colors <- c(rep(\"#fc8d62\",2),rep(\"#8da0cb\",4)) # NOTE: # Label spacing for centering \"Pediatric\" over class categories: ## labs(y = \"Predicted Class\\nAdult Pediatric\") # Label spacing for centering \"Adult\" over class categories ## labs(y = \"Predicted Class\\nAdult Pediatric\") Plot probabilities and predictions data frame simultaneously \u00b6 cgp_RRBS.noNormals_class_probabilitiesFig.reformatted <- ggplot() + geom_tile(data = cgp_RRBS.noNormals_class_probabilities, mapping = aes(x = Sample, y = Predicted_Class, fill = Prediction_Probability), colour = \"grey50\") + geom_point(data = cgp_RRBS.noNormals_class_predictions, mapping = aes(x = Sample, y = Class, shape = Location, size = Tumor_Grade, colour = Histology)) + scale_colour_manual(name='Histology', values=c('Astro'='#d95f02', 'Oligo'='#7570b3', 'Undefined'='#1b9e77'), labels = c('Astro','Oligo','Undefined')) + scale_size_manual(name='Tumor Grade', values=c('High'=8, 'Low'=4), labels = c('High','Low')) + guides(colour = guide_legend(\"Histology\",override.aes=list(size = 4))) + guides(shape = guide_legend(\"Location\",override.aes=list(size = 4))) + scale_fill_gradient(name = \"Prediction\\nProbability\", low = \"white\", high = \"deepskyblue3\", limits = c(0,1)) + theme(axis.text = element_text(size = 10), axis.text.x = element_text(angle=90, face=SampleLabelStyle), axis.text.y = element_text(color = rev(class_probabilities_colors)), axis.title = element_text(size = 12, face = \"bold\"), axis.title.y = element_text(color = \"black\"), legend.title = element_text(size = 10, face = \"bold\"), legend.text = element_text(size = 8), plot.margin = margin(1, 1, 0, 1, \"cm\")) + scale_x_discrete(labels=SampleLabel) + scale_y_discrete(limits = rev(class_probabilities_limits), labels = rev(class_probabilities_labels)) + labs(x = \"Sample\", y = \"Predicted Class\\nAdult\") Add annotations for mutation rate, purity, and age \u00b6 # Age annotation ageFig <- ggplot(cgp_RRBS.noNormals_sample_info) + geom_point(aes(x = Tumor_Sample_Barcode, y = age_updated)) + geom_hline(yintercept = 2, linetype=\"dashed\", color = \"dimgray\", cex = 1) + labs(x = \"Sample\") + theme(axis.text = element_text(size = 10), axis.text.x = element_text(angle=90, face=SampleLabelStyle), axis.title = element_text(size = 12, face = \"bold\"), plot.margin = margin(0, 1, 1, 1, \"cm\")) + scale_x_discrete(labels=SampleLabel) + scale_y_continuous(name = \"Age\", breaks=seq(0,12,2), limits = c(0,13)) # Purity annotation purityFig <- ggplot(data = cgp_RRBS.noNormals_sample_info, mapping = aes(x = Tumor_Sample_Barcode, y = 1, fill = purity)) + geom_tile() + theme(axis.title.x=element_blank(), axis.text.x=element_blank(), axis.ticks.x=element_blank(), axis.title.y=element_blank(), axis.text.y=element_blank(), axis.ticks.y=element_blank(), plot.margin = margin(0, 1, 0, 1, \"cm\")) + scale_fill_gradient(name = \"Purity\", low = \"white\", high = \"seagreen\", limits = c(0,1)) + theme(legend.title=element_text(size=9, face = \"bold\"),legend.text = element_text(size=8),legend.key.height = unit(0.08, \"in\"),legend.direction = \"horizontal\") + guides(fill = guide_colourbar(title.position=\"top\", title.hjust = 0.5)) # Mutation annotation mutationsFig <- ggplot(data = cgp_RRBS.noNormals_sample_info, mapping = aes(x = Tumor_Sample_Barcode, y = 1, fill = adusted_coding_mutrate)) + geom_tile() + # scale_x_discrete(labels=SampleLabel) + theme(axis.title.x=element_blank(), axis.text.x=element_blank(), axis.ticks.x=element_blank(), axis.title.y=element_blank(), axis.text.y=element_blank(), axis.ticks.y=element_blank(), plot.margin = margin(0, 1, 0, 1, \"cm\")) + scale_fill_gradient(name = \"Mutations/Mb\", low = \"white\", high = \"red\", limits = c(0,2.6)) + theme(legend.title=element_text(size=9, face = \"bold\"),legend.text = element_text(size=8),legend.key.height = unit(0.08, \"in\"),legend.direction = \"horizontal\") + guides(fill = guide_colourbar(title.position=\"top\", title.hjust = 0.5)) Fig 4 \u00b6 ## Combine plots library(ggpubr) cgp_RRBS.noNormals_class_probabilitiesFig.reformatted.combinedVer <- cgp_RRBS.noNormals_class_probabilitiesFig.reformatted + theme(axis.title.x=element_blank(), axis.text.x=element_blank(), axis.ticks.x=element_blank()) cgp_RRBS.noNormals_class_probabilitiesFig.reformatted.w_purity_mutations_age <- ggarrange(cgp_RRBS.noNormals_class_probabilitiesFig.reformatted.combinedVer, purityFig, mutationsFig, ageFig,nrow = 4,ncol = 1, heights = c(3,0.25,0.25,0.5), padding = unit(0,\"line\")) pdf(\"F4.pdf\", width = 18, height = 12, pointsize = 12, bg = \"white\", compress = FALSE, useDingbats = FALSE) cgp_RRBS.noNormals_class_probabilitiesFig.reformatted.w_purity_mutations_age dev.off()","title":"F4 &middot; DNA Methylation based Prediction of Canine Gliomas"},{"location":"figures/F4/#preprocessing","text":"","title":"Preprocessing"},{"location":"figures/F4/#format-data-for-plotting","text":"library(ggplot2) library(egg) # Cluster probabilities to determine sample plot order cgp_RRBS.noNormals_ord <- hclust( dist(cgp_RRBS.noNormals_class_prediction$probabilities, method = \"euclidean\"), method = \"ward.D\" )$order cgp_RRBS.noNormals_class_prediction$probabilities <- cgp_RRBS.noNormals_class_prediction$probabilities[cgp_RRBS.noNormals_ord,] cgp_RRBS.noNormals_class_prediction$predictions <- factor(cgp_RRBS.noNormals_class_prediction$predictions[cgp_RRBS.noNormals_ord], levels = c(\"Adult-IDH_mut\",\"Adult-IDH_wt\",\"Pediatric-Tumor\")) # Reformat probabilities table for plotting cgp_RRBS.noNormals_class_probabilities <- reshape2::melt(cgp_RRBS.noNormals_class_prediction$probabilities) colnames(cgp_RRBS.noNormals_class_probabilities) <- c(\"Sample\",\"Predicted_Class\",\"Prediction_Probability\") cgp_RRBS.noNormals_class_probabilities$Sample <- factor(cgp_RRBS.noNormals_class_probabilities$Sample, levels = rownames(cgp_RRBS.noNormals_class_prediction$probabilities)[cgp_RRBS.noNormals_ord]) # Create shorthand barcode for sample text on x-axis (on mutationsFig) consisting of 4 character caseID only SampleLabel <- unlist(lapply(strsplit(rownames(cgp_RRBS.noNormals_class_prediction$probabilities)[cgp_RRBS.noNormals_ord],\"-\"), `[`, 3)) SampleLabel <- paste0(\"i_\",SampleLabel) # Create label for sample text on x-axis (on mutationsFig) to color IDHmut samples SampleLabelStyle <- rep(\"plain\",length(SampleLabel)) IDHmutsamples <- which(rownames(cgp_RRBS.noNormals_class_prediction$probabilities)[cgp_RRBS.noNormals_ord] %in% c(\"CGP-S03-E7AB-8AD9ACF7-T1-A2-J05\",\"CGP-S03-1165-177480CC-T1-A2-J05\",\"CGP-S04-1166-3C6CFE5F-T1-A1-J05\")) SampleLabelStyle[IDHmutsamples] <- \"bold\"","title":"Format data for plotting"},{"location":"figures/F4/#create-table-for-plotting-annotations","text":"cgp_RRBS.noNormals_class_predictions <- data.frame(Sample=rownames(cgp_RRBS.noNormals_class_prediction$probabilities), Class=cgp_RRBS.noNormals_class_prediction$predictions, Location=cgp_RRBS.noNormals_sample_info$Tumor_Location, Tumor_Grade=cgp_RRBS.noNormals_sample_info$Tumor_Grade, Histology=cgp_RRBS.noNormals_sample_info$Tumor_Morphology) cgp_RRBS.noNormals_class_predictions$Location <- factor(cgp_RRBS.noNormals_class_predictions$Location, levels = c(\"Hemispheric\",\"Cerebellar\",\"Midline\"))","title":"Create table for plotting annotations"},{"location":"figures/F4/#labelscolors-for-plot","text":"class_probabilities_labels <- c(\"Glioma\",\"Normal\",\"IDHmut\",\"IDHmut\\n1p/19q codel\",\"IDHwt\",\"Normal\") class_probabilities_limits <- c(\"Pediatric-Tumor\",\"Pediatric-Normal\",\"Adult-IDH_mut\",\"Adult-IDH_mut,1p/19q_codel\",\"Adult-IDH_wt\",\"Adult-Normal\") class_probabilities_colors <- c(rep(\"#fc8d62\",2),rep(\"#8da0cb\",4)) # NOTE: # Label spacing for centering \"Pediatric\" over class categories: ## labs(y = \"Predicted Class\\nAdult Pediatric\") # Label spacing for centering \"Adult\" over class categories ## labs(y = \"Predicted Class\\nAdult Pediatric\")","title":"Labels/colors for plot"},{"location":"figures/F4/#plot-probabilities-and-predictions-data-frame-simultaneously","text":"cgp_RRBS.noNormals_class_probabilitiesFig.reformatted <- ggplot() + geom_tile(data = cgp_RRBS.noNormals_class_probabilities, mapping = aes(x = Sample, y = Predicted_Class, fill = Prediction_Probability), colour = \"grey50\") + geom_point(data = cgp_RRBS.noNormals_class_predictions, mapping = aes(x = Sample, y = Class, shape = Location, size = Tumor_Grade, colour = Histology)) + scale_colour_manual(name='Histology', values=c('Astro'='#d95f02', 'Oligo'='#7570b3', 'Undefined'='#1b9e77'), labels = c('Astro','Oligo','Undefined')) + scale_size_manual(name='Tumor Grade', values=c('High'=8, 'Low'=4), labels = c('High','Low')) + guides(colour = guide_legend(\"Histology\",override.aes=list(size = 4))) + guides(shape = guide_legend(\"Location\",override.aes=list(size = 4))) + scale_fill_gradient(name = \"Prediction\\nProbability\", low = \"white\", high = \"deepskyblue3\", limits = c(0,1)) + theme(axis.text = element_text(size = 10), axis.text.x = element_text(angle=90, face=SampleLabelStyle), axis.text.y = element_text(color = rev(class_probabilities_colors)), axis.title = element_text(size = 12, face = \"bold\"), axis.title.y = element_text(color = \"black\"), legend.title = element_text(size = 10, face = \"bold\"), legend.text = element_text(size = 8), plot.margin = margin(1, 1, 0, 1, \"cm\")) + scale_x_discrete(labels=SampleLabel) + scale_y_discrete(limits = rev(class_probabilities_limits), labels = rev(class_probabilities_labels)) + labs(x = \"Sample\", y = \"Predicted Class\\nAdult\")","title":"Plot probabilities and predictions data frame simultaneously"},{"location":"figures/F4/#add-annotations-for-mutation-rate-purity-and-age","text":"# Age annotation ageFig <- ggplot(cgp_RRBS.noNormals_sample_info) + geom_point(aes(x = Tumor_Sample_Barcode, y = age_updated)) + geom_hline(yintercept = 2, linetype=\"dashed\", color = \"dimgray\", cex = 1) + labs(x = \"Sample\") + theme(axis.text = element_text(size = 10), axis.text.x = element_text(angle=90, face=SampleLabelStyle), axis.title = element_text(size = 12, face = \"bold\"), plot.margin = margin(0, 1, 1, 1, \"cm\")) + scale_x_discrete(labels=SampleLabel) + scale_y_continuous(name = \"Age\", breaks=seq(0,12,2), limits = c(0,13)) # Purity annotation purityFig <- ggplot(data = cgp_RRBS.noNormals_sample_info, mapping = aes(x = Tumor_Sample_Barcode, y = 1, fill = purity)) + geom_tile() + theme(axis.title.x=element_blank(), axis.text.x=element_blank(), axis.ticks.x=element_blank(), axis.title.y=element_blank(), axis.text.y=element_blank(), axis.ticks.y=element_blank(), plot.margin = margin(0, 1, 0, 1, \"cm\")) + scale_fill_gradient(name = \"Purity\", low = \"white\", high = \"seagreen\", limits = c(0,1)) + theme(legend.title=element_text(size=9, face = \"bold\"),legend.text = element_text(size=8),legend.key.height = unit(0.08, \"in\"),legend.direction = \"horizontal\") + guides(fill = guide_colourbar(title.position=\"top\", title.hjust = 0.5)) # Mutation annotation mutationsFig <- ggplot(data = cgp_RRBS.noNormals_sample_info, mapping = aes(x = Tumor_Sample_Barcode, y = 1, fill = adusted_coding_mutrate)) + geom_tile() + # scale_x_discrete(labels=SampleLabel) + theme(axis.title.x=element_blank(), axis.text.x=element_blank(), axis.ticks.x=element_blank(), axis.title.y=element_blank(), axis.text.y=element_blank(), axis.ticks.y=element_blank(), plot.margin = margin(0, 1, 0, 1, \"cm\")) + scale_fill_gradient(name = \"Mutations/Mb\", low = \"white\", high = \"red\", limits = c(0,2.6)) + theme(legend.title=element_text(size=9, face = \"bold\"),legend.text = element_text(size=8),legend.key.height = unit(0.08, \"in\"),legend.direction = \"horizontal\") + guides(fill = guide_colourbar(title.position=\"top\", title.hjust = 0.5))","title":"Add annotations for mutation rate, purity, and age"},{"location":"figures/F4/#fig-4","text":"## Combine plots library(ggpubr) cgp_RRBS.noNormals_class_probabilitiesFig.reformatted.combinedVer <- cgp_RRBS.noNormals_class_probabilitiesFig.reformatted + theme(axis.title.x=element_blank(), axis.text.x=element_blank(), axis.ticks.x=element_blank()) cgp_RRBS.noNormals_class_probabilitiesFig.reformatted.w_purity_mutations_age <- ggarrange(cgp_RRBS.noNormals_class_probabilitiesFig.reformatted.combinedVer, purityFig, mutationsFig, ageFig,nrow = 4,ncol = 1, heights = c(3,0.25,0.25,0.5), padding = unit(0,\"line\")) pdf(\"F4.pdf\", width = 18, height = 12, pointsize = 12, bg = \"white\", compress = FALSE, useDingbats = FALSE) cgp_RRBS.noNormals_class_probabilitiesFig.reformatted.w_purity_mutations_age dev.off()","title":"Fig 4"},{"location":"figures/F5/","text":"View R Markdown generated report by James P. Long. Required metadata \u00b6 library ( ggplot2 ) library ( tidyr ) library ( knitr ) dat <- fig5b_dat type_map <- c ( Ped = \"Pediatric\" , Dog = \"Canine\" , Adult = \"Adult\" ) dat $ type <- type_map [ dat $ type ] ## rename Low -> Low Grade, High -> High Grade grade_rename <- c ( \"Low\" = \"Low Grade\" , \"High\" = \"High Grade\" ) dat $ Grade <- grade_rename [ dat $ Grade ] ## create mapping from sample name to type temp <- table ( dat $ type , dat $ Sample.Name ) samp_type <- apply ( temp , 2 , function ( x ){ which ( x > 0 )}) samp_type [] <- rownames ( temp )[ samp_type ] ## create mapping from sample name to grade temp <- table ( dat $ Grade , dat $ Sample.Name ) samp_grade <- apply ( temp , 2 , function ( x ){ which ( x > 0 )}) samp_grade [] <- rownames ( temp )[ samp_grade ] ## Summary of Data Set n <- nrow ( dat ) row_miss <- rowSums ( is.na ( dat [, 5 : 8 ])) dat <- dat [ row_miss < 0.5 ,] There were n total fields measured and sum(row_miss > 0.5) fields with missing data. Fields with missing positivies were removed from further analysis. Number of fields by marker kable ( table ( dat $ marker ), col.names = c ( \"Marker\" , \"# Fields\" )) Counts of number of fields by marker for each sample: tab <- table ( dat $ Sample.Name , dat $ marker ) tab <- cbind ( Type = samp_type [ rownames ( tab )], Grade = samp_grade [ rownames ( tab )], tab ) tab <- tab [ order ( tab [, 1 ]),] kable ( tab , align = \"c\" ) Counts of different types of samples (ped, adult, or breed): temp <- table ( dat $ Breed , dat $ Sample.Name ) samp_breed <- apply ( temp , 2 , function ( x ){ which ( x > 0 )}) samp_breed [] <- rownames ( temp )[ samp_breed ] kable ( table ( samp_breed ), col.names = c ( \"Sample Type\" , \"Number\" )) Marker Distributions For each field, the \"1+\", \"2+\", and \"3+\" columns positivity are summed to create a new variable Positivity. The mean of the Positivity is computed across all fields for a given sample and marker. The means are shown in the table below. ## create response, sum of percentage positivities dat $ percent_sum <- dat $ X1. + dat $ X2. + dat $ X3. dat $ percent_sum <- 100 * dat $ percent_sum dat_sum <- aggregate ( dat $ percent_sum , by = list ( dat $ Sample.Name , dat $ marker ), FUN = mean ) colnames ( dat_sum ) <- c ( \"Sample.Name\" , \"marker\" , \"percent_sum\" ) dat_sum <- data.frame ( dat_sum , \"type\" = samp_type [ dat_sum $ Sample.Name ], \"Grade\" = samp_grade [ dat_sum $ Sample.Name ], stringsAsFactors = FALSE ) dat_sum_wide <- pivot_wider ( dat_sum , names_from = marker , values_from = percent_sum ) ords <- order ( dat_sum_wide $ type , dat_sum_wide $ Sample.Name ) kable ( dat_sum_wide [ ords ,], digits = 1 ) Fig 5B \u00b6 The violin plots below show the distribution of percentage positivity. The violins are constructed using all the fields. The points are subject means. The markers CD14, CD3, and CD79A are low across grade and subject type. cols <- c ( Canine = \"#66c2a5\" , Pediatric = \"#fc8d62\" , Adult = \"#8da0cb\" ) ps <- ggplot ( dat , aes ( x = Grade , y = percent_sum )) + geom_violin ( aes ( fill = type ), position = position_dodge ( width = 0.75 ), alpha = . 3 , color = 'grey' ) + geom_dotplot ( aes ( fill = type ), data = dat_sum , binaxis = 'y' , stackdir = 'center' , dotsize = 1 , position = position_dodge ( width = 0.75 ), col = \"black\" ) + ylab ( \"Percentage Positivity\" ) + scale_fill_manual ( values = cols ) + xlab ( \"\" ) + theme_classic () + labs ( fill = \"\" ) + coord_cartesian ( xlim = c ( 1.15 , 1.85 )) library ( cowplot ) ps <- ps + facet_wrap ( ~ marker , nrow = 2 ) ps <- ps + theme ( legend.position = c ( 0.75 , 0.15 ), legend.background = element_rect ( fill = \"white\" , colour = NA ), axis.text.x = element_text ( size = 15 , angle = 0 , vjust = . 5 ), axis.text.y = element_text ( size = 15 , angle = 0 , vjust = . 5 ), axis.title.y = element_text ( size = 20 ), legend.title = element_text ( size = 20 ), legend.text = element_text ( size = 20 ), strip.text = element_text ( size = 20 )) ps + theme_cowplot ( font_size = 24 ) + theme ( legend.position = c ( 0.75 , 0.15 )) plot ( ps ) pdf ( file = \"F5B.pdf\" , useDingbats = FALSE , width = 20 , colormodel = \"srgb\" , compress = FALSE ) plot ( ps ) dev.off () p-values \u00b6 For CD163 and IBA1, mean percentage positivities are compared across sample types (Pediatric, Adult, Canine) within high grade patients. Specifically a Wilcoxon two sample p--value is computed for Pediatric vs. Canine subject means and Pediatric vs. Adult subject means. dat_sum <- dat_sum [ dat_sum $ Grade == \"High Grade\" ,] out <- data.frame ( Marker = rep ( NA_character_ , 4 ), \"Group 1\" = rep ( \"Pediatric\" , 4 ), \"Group 2\" = rep ( NA_character_ , 4 ), \"p-value\" = rep ( NA_real_ , 4 ), stringsAsFactors = FALSE , check.names = FALSE ) marker <- \"IBA1\" comp <- \"Canine\" dat_sum_sub <- dat_sum [ dat_sum $ marker == marker ,] p <- wilcox.test ( dat_sum_sub [ dat_sum_sub $ type == \"Pediatric\" , \"percent_sum\" ], dat_sum_sub [ dat_sum_sub $ type == comp , \"percent_sum\" ]) $ p.value out [ 1 , 1 ] <- marker out [ 1 , 3 ] <- comp out [ 1 , 4 ] <- p comp <- \"Adult\" p <- wilcox.test ( dat_sum_sub [ dat_sum_sub $ type == \"Pediatric\" , \"percent_sum\" ], dat_sum_sub [ dat_sum_sub $ type == comp , \"percent_sum\" ]) $ p.value out [ 2 , 1 ] <- marker out [ 2 , 3 ] <- comp out [ 2 , 4 ] <- p marker <- \"CD163\" comp <- \"Canine\" dat_sum_sub <- dat_sum [ dat_sum $ marker == marker ,] p <- wilcox.test ( dat_sum_sub [ dat_sum_sub $ type == \"Pediatric\" , \"percent_sum\" ], dat_sum_sub [ dat_sum_sub $ type == comp , \"percent_sum\" ]) $ p.value out [ 3 , 1 ] <- marker out [ 3 , 3 ] <- comp out [ 3 , 4 ] <- p comp <- \"Adult\" p <- wilcox.test ( dat_sum_sub [ dat_sum_sub $ type == \"Pediatric\" , \"percent_sum\" ], dat_sum_sub [ dat_sum_sub $ type == comp , \"percent_sum\" ]) $ p.value out [ 4 , 1 ] <- marker out [ 4 , 3 ] <- comp out [ 4 , 4 ] <- p kable ( out , digit = 4 )","title":"F5B &middot; Comparative Immunohistochemistry - Quantitative"},{"location":"figures/F5/#required-metadata","text":"library ( ggplot2 ) library ( tidyr ) library ( knitr ) dat <- fig5b_dat type_map <- c ( Ped = \"Pediatric\" , Dog = \"Canine\" , Adult = \"Adult\" ) dat $ type <- type_map [ dat $ type ] ## rename Low -> Low Grade, High -> High Grade grade_rename <- c ( \"Low\" = \"Low Grade\" , \"High\" = \"High Grade\" ) dat $ Grade <- grade_rename [ dat $ Grade ] ## create mapping from sample name to type temp <- table ( dat $ type , dat $ Sample.Name ) samp_type <- apply ( temp , 2 , function ( x ){ which ( x > 0 )}) samp_type [] <- rownames ( temp )[ samp_type ] ## create mapping from sample name to grade temp <- table ( dat $ Grade , dat $ Sample.Name ) samp_grade <- apply ( temp , 2 , function ( x ){ which ( x > 0 )}) samp_grade [] <- rownames ( temp )[ samp_grade ] ## Summary of Data Set n <- nrow ( dat ) row_miss <- rowSums ( is.na ( dat [, 5 : 8 ])) dat <- dat [ row_miss < 0.5 ,] There were n total fields measured and sum(row_miss > 0.5) fields with missing data. Fields with missing positivies were removed from further analysis. Number of fields by marker kable ( table ( dat $ marker ), col.names = c ( \"Marker\" , \"# Fields\" )) Counts of number of fields by marker for each sample: tab <- table ( dat $ Sample.Name , dat $ marker ) tab <- cbind ( Type = samp_type [ rownames ( tab )], Grade = samp_grade [ rownames ( tab )], tab ) tab <- tab [ order ( tab [, 1 ]),] kable ( tab , align = \"c\" ) Counts of different types of samples (ped, adult, or breed): temp <- table ( dat $ Breed , dat $ Sample.Name ) samp_breed <- apply ( temp , 2 , function ( x ){ which ( x > 0 )}) samp_breed [] <- rownames ( temp )[ samp_breed ] kable ( table ( samp_breed ), col.names = c ( \"Sample Type\" , \"Number\" )) Marker Distributions For each field, the \"1+\", \"2+\", and \"3+\" columns positivity are summed to create a new variable Positivity. The mean of the Positivity is computed across all fields for a given sample and marker. The means are shown in the table below. ## create response, sum of percentage positivities dat $ percent_sum <- dat $ X1. + dat $ X2. + dat $ X3. dat $ percent_sum <- 100 * dat $ percent_sum dat_sum <- aggregate ( dat $ percent_sum , by = list ( dat $ Sample.Name , dat $ marker ), FUN = mean ) colnames ( dat_sum ) <- c ( \"Sample.Name\" , \"marker\" , \"percent_sum\" ) dat_sum <- data.frame ( dat_sum , \"type\" = samp_type [ dat_sum $ Sample.Name ], \"Grade\" = samp_grade [ dat_sum $ Sample.Name ], stringsAsFactors = FALSE ) dat_sum_wide <- pivot_wider ( dat_sum , names_from = marker , values_from = percent_sum ) ords <- order ( dat_sum_wide $ type , dat_sum_wide $ Sample.Name ) kable ( dat_sum_wide [ ords ,], digits = 1 )","title":"Required metadata"},{"location":"figures/F5/#fig-5b","text":"The violin plots below show the distribution of percentage positivity. The violins are constructed using all the fields. The points are subject means. The markers CD14, CD3, and CD79A are low across grade and subject type. cols <- c ( Canine = \"#66c2a5\" , Pediatric = \"#fc8d62\" , Adult = \"#8da0cb\" ) ps <- ggplot ( dat , aes ( x = Grade , y = percent_sum )) + geom_violin ( aes ( fill = type ), position = position_dodge ( width = 0.75 ), alpha = . 3 , color = 'grey' ) + geom_dotplot ( aes ( fill = type ), data = dat_sum , binaxis = 'y' , stackdir = 'center' , dotsize = 1 , position = position_dodge ( width = 0.75 ), col = \"black\" ) + ylab ( \"Percentage Positivity\" ) + scale_fill_manual ( values = cols ) + xlab ( \"\" ) + theme_classic () + labs ( fill = \"\" ) + coord_cartesian ( xlim = c ( 1.15 , 1.85 )) library ( cowplot ) ps <- ps + facet_wrap ( ~ marker , nrow = 2 ) ps <- ps + theme ( legend.position = c ( 0.75 , 0.15 ), legend.background = element_rect ( fill = \"white\" , colour = NA ), axis.text.x = element_text ( size = 15 , angle = 0 , vjust = . 5 ), axis.text.y = element_text ( size = 15 , angle = 0 , vjust = . 5 ), axis.title.y = element_text ( size = 20 ), legend.title = element_text ( size = 20 ), legend.text = element_text ( size = 20 ), strip.text = element_text ( size = 20 )) ps + theme_cowplot ( font_size = 24 ) + theme ( legend.position = c ( 0.75 , 0.15 )) plot ( ps ) pdf ( file = \"F5B.pdf\" , useDingbats = FALSE , width = 20 , colormodel = \"srgb\" , compress = FALSE ) plot ( ps ) dev.off ()","title":"Fig 5B"},{"location":"figures/F5/#p-values","text":"For CD163 and IBA1, mean percentage positivities are compared across sample types (Pediatric, Adult, Canine) within high grade patients. Specifically a Wilcoxon two sample p--value is computed for Pediatric vs. Canine subject means and Pediatric vs. Adult subject means. dat_sum <- dat_sum [ dat_sum $ Grade == \"High Grade\" ,] out <- data.frame ( Marker = rep ( NA_character_ , 4 ), \"Group 1\" = rep ( \"Pediatric\" , 4 ), \"Group 2\" = rep ( NA_character_ , 4 ), \"p-value\" = rep ( NA_real_ , 4 ), stringsAsFactors = FALSE , check.names = FALSE ) marker <- \"IBA1\" comp <- \"Canine\" dat_sum_sub <- dat_sum [ dat_sum $ marker == marker ,] p <- wilcox.test ( dat_sum_sub [ dat_sum_sub $ type == \"Pediatric\" , \"percent_sum\" ], dat_sum_sub [ dat_sum_sub $ type == comp , \"percent_sum\" ]) $ p.value out [ 1 , 1 ] <- marker out [ 1 , 3 ] <- comp out [ 1 , 4 ] <- p comp <- \"Adult\" p <- wilcox.test ( dat_sum_sub [ dat_sum_sub $ type == \"Pediatric\" , \"percent_sum\" ], dat_sum_sub [ dat_sum_sub $ type == comp , \"percent_sum\" ]) $ p.value out [ 2 , 1 ] <- marker out [ 2 , 3 ] <- comp out [ 2 , 4 ] <- p marker <- \"CD163\" comp <- \"Canine\" dat_sum_sub <- dat_sum [ dat_sum $ marker == marker ,] p <- wilcox.test ( dat_sum_sub [ dat_sum_sub $ type == \"Pediatric\" , \"percent_sum\" ], dat_sum_sub [ dat_sum_sub $ type == comp , \"percent_sum\" ]) $ p.value out [ 3 , 1 ] <- marker out [ 3 , 3 ] <- comp out [ 3 , 4 ] <- p comp <- \"Adult\" p <- wilcox.test ( dat_sum_sub [ dat_sum_sub $ type == \"Pediatric\" , \"percent_sum\" ], dat_sum_sub [ dat_sum_sub $ type == comp , \"percent_sum\" ]) $ p.value out [ 4 , 1 ] <- marker out [ 4 , 3 ] <- comp out [ 4 , 4 ] <- p kable ( out , digit = 4 )","title":"p-values"},{"location":"figures/S1/","text":"DNA fingerprinting of whole genome and exome samples from canine glioma patients was performed using NGSCheckMate 1 . Details #!/bin/bash ## Run NGSCheckMate Fingerprint ## https://github.com/parklab/NGSCheckMate ## @sbamin NGSCM_EXE = \"/projects/verhaak-lab/verhaak_env/verhaak_apps/NGSCheckMate/ncm.py\" OUTDIR = \"/fastscratch/foo/cgp/ngs_checkmate\" ## dbsnp file DBSNP = \"Canis_familiaris_dbsnp_protein_coding_cds_exons_canonical.bed\" REF_FASTA = \"CanFam3_1.fa\" BAMLIST = \" ${ HOME } /pipelines/cgp_qc/runner/fingerprint/cgp_bams.tsv\" ## Number of parallel bcftools THREADS = 12 mkdir -p \" ${ OUTDIR } \" /vcfs mkdir -p \" ${ OUTDIR } \" /results export NGSCM_EXE OUTDIR DBSNP REF_FASTA BAMLIST source \" ${ RVPYTHON } \" /v4.2.0/bin/activate base && \\ echo \"switched to python2 legacy env; using samtools, bcftools, htslib 1.9\" command -v python && \\ command -v samtools && \\ command -v bcftools ## load ngs_checkmate module load rvngscheckmate/1.3.0 ## Run mpileup and get per-bam vcf for DBSNP regions mpileup_fn () { MYBAM = \" $1 \" if [[ ! -f \" $MYBAM \" ]] ; then echo \"ERROR: BAM file at $MYBAM does not exitst\" > & 2 exit 1 fi VCFID = $( printf \"%s/vcfs/fingerprint_%s.vcf\" \" $OUTDIR \" \" $( basename \" $MYBAM \" .bam ) \" ) echo -e \"\\n\\nGetting mpileup...\\nfrom: $MYBAM \\nto: $VCFID \\nBED: $DBSNP \\n\" sleep 2 set -euo pipefail if [[ ! -s \" ${ VCFID } \" ]] ; then bcftools mpileup -Ou -f \" ${ REF_FASTA } \" -R \" ${ DBSNP } \" \" ${ MYBAM } \" | \\ bcftools call -Ou -mv | \\ bcftools filter -s LowQual -e '%QUAL<20 || DP>100' > \" $VCFID \" else echo -e \"\\n\\nSKIP: $VCFID is present - skipping mpileup\\n\\n\" > & 2 fi } export -f mpileup_fn ############# Run mpileup in parallel ######################### THREADS = \" ${ THREADS :- 2 } \" echo \"Running $THREADS parallel bcftools mpileups\" cat \" $BAMLIST \" | parallel -j \" ${ THREADS } \" mpileup_fn {} ############################################################### echo \"Running NGSCheckMate\" sleep 2 python \" ${ NGSCM_EXE } \" -V -d \" ${ OUTDIR } \" /vcfs -O \" ${ OUTDIR } \" /results -N cgp_fingerprint_ngscheckmate_v2 -bed \" ${ DBSNP } \" -nz exitstat = $? echo \"ending NGSCheckMate with exit: $exitstat \" Lee S, Lee S, Ouellette S, Park W-Y, Lee EA, Park PJ. NGSCheckMate: software for validating sample identity in next-generation sequencing studies within and across data types. Nucleic Acids Res 2017;45:e103. doi: 10.1093/nar/gkx193 \u21a9","title":"S1A &middot; DNA fingerprinting"},{"location":"figures/S2/","text":"Suppl Figures 2A, 2B, and 2C were plotted in Integrative Genomics Viewer 1 using somatic copy-number segmented data . Robinson JT, Thorvaldsd\u00f3ttir H, Winckler W, Guttman M, Lander ES, Getz G, et al. Integrative genomics viewer. Nat Biotechnol 2011;29:24\u20136. doi: 10.1038/nbt.1754 . \u21a9","title":"S2 &middot; IGV Plots"},{"location":"figures/S3/","text":"Suppl Figures 3C was plotted in Integrative Genomics Viewer 1 using somatic variant data . Suppl Figures 3E was plotted using palimpsest_plotTumorHistories and palimpsest_DissectSigs functions in Palimpsest R package 2 . Author of Palimpsest package has provided a detailed documentation on how to run Palimpsest workflow. Robinson JT, Thorvaldsd\u00f3ttir H, Winckler W, Guttman M, Lander ES, Getz G, et al. Integrative genomics viewer. Nat Biotechnol 2011;29:24\u20136. doi: 10.1038/nbt.1754 . \u21a9 Shinde J, Bayard Q, Imbeaud S, Hirsch TZ, Liu F, Renault V, et al. Palimpsest: an R package for studying mutational and structural variant signatures along clonal evolution in cancer. Bioinformatics 2018. doi: 10.1093/bioinformatics/bty388 . \u21a9","title":"S3 &middot; Suppl Figures"},{"location":"figures/S4/","text":"Suppl Fig 4A \u00b6 Somatic mutational lanscape, including copy-number aberrations of COSMIC cancer genes, grouped by DNA methylation classification . ## Keep sample info for cases with RRBS data cgp_methylation_cases <- cgp_suppl_sample_info_master %>% filter ( ! is.na ( Methylation_Predicted_Class ), WGS == \"YES\" ) %>% tbl_df () %>% arrange ( Methylation_Predicted_Class ) %>% dplyr :: select ( Tumor_Sample_Barcode , Methylation_Predicted_Class , Methylation_Prediction_Probability , everything ()) cgp_methylation_cases_peds <- cgp_methylation_cases %>% filter ( Methylation_Predicted_Class == \"Pediatric-Tumor\" ) cgp_methylation_cases_adult <- cgp_methylation_cases %>% filter ( grepl ( \"IDH\" , Methylation_Predicted_Class )) ## subset MAF object based on methylation classification cgp_maftools_gistic_methy_peds <- subsetMaf ( cgp_maftools_gistic_methy , tsb = cgp_methylation_cases_peds $ Tumor_Sample_Barcode ) cgp_maftools_gistic_methy_adult <- subsetMaf ( cgp_maftools_gistic_methy , tsb = cgp_methylation_cases_adult $ Tumor_Sample_Barcode ) ## Specify colors for sample annotations ann_colors_methy <- list ( Tumor_Morphology = c ( Astro = \"#d95f02\" , Oligo = \"#7570b3\" , Undefined = \"#1b9e77\" ), Tumor_Grade = c ( High = \"#FEB24C\" , Low = \"#FFEDA0\" ), Tumor_Location = c ( Hemispheric = \"#a6cee3\" , Cerebellar = \"#1f78b4\" , midline = \"#e31a1c\" , UN = \"#fb9a99\" ), Methylation_Predicted_Class = c ( `Adult-IDH_mut` = \"#a6cee3\" , `Adult-IDH_wt` = \"#1f78b4\" , `Pediatric-Tumor` = \"#e31a1c\" )) ## Suppl Fig 4A pdf ( \"SF4A.pdf\" , width = 18 , height = 12 , pointsize = 12 , fonts = \"Arial\" , bg = \"white\" , compress = FALSE , useDingbats = FALSE ) suppl_fig_4A <- coOncoplot ( m1 = cgp_maftools_gistic_methy_peds , m2 = cgp_maftools_gistic_methy_adult , m1Name = 'Pediatric-like' , m2Name = 'Adult-like' , genes = oncoprint_genes_snv_scna , removeNonMutated = FALSE , additionalFeature1 = c ( \"dnds_mutsig\" , \"Driver\" ), additionalFeature2 = c ( \"dnds_mutsig\" , \"Driver\" ), clinicalFeatures1 = c ( \"Methylation_Predicted_Class\" , \"Tumor_Morphology\" , \"Tumor_Grade\" , \"Tumor_Location\" ), clinicalFeatures2 = c ( \"Methylation_Predicted_Class\" , \"Tumor_Morphology\" , \"Tumor_Grade\" , \"Tumor_Location\" ), sortByAnnotation2 = TRUE , legendFontSize = 1.2 , annotationFontSize = 1.2 , annotationColor1 = ann_colors_methy , annotationColor2 = ann_colors_methy , colors = varcall_colors [ c ( levels ( cgp_maftools_gistic_methy_peds @ data $ Variant_Classification ), \"Multi_Hit\" ) ], bgCol = \"#ffffff\" , borderCol = \"#CCCCCC\" , sepwd_genes1 = 0.8 , sepwd_genes2 = 0.8 ) dev.off () Suppl Fig 4B \u00b6 DNA methylation age of human and canine glioma. Updating...","title":"S4 &middot; Suppl Figure 4"},{"location":"figures/S4/#suppl-fig-4a","text":"Somatic mutational lanscape, including copy-number aberrations of COSMIC cancer genes, grouped by DNA methylation classification . ## Keep sample info for cases with RRBS data cgp_methylation_cases <- cgp_suppl_sample_info_master %>% filter ( ! is.na ( Methylation_Predicted_Class ), WGS == \"YES\" ) %>% tbl_df () %>% arrange ( Methylation_Predicted_Class ) %>% dplyr :: select ( Tumor_Sample_Barcode , Methylation_Predicted_Class , Methylation_Prediction_Probability , everything ()) cgp_methylation_cases_peds <- cgp_methylation_cases %>% filter ( Methylation_Predicted_Class == \"Pediatric-Tumor\" ) cgp_methylation_cases_adult <- cgp_methylation_cases %>% filter ( grepl ( \"IDH\" , Methylation_Predicted_Class )) ## subset MAF object based on methylation classification cgp_maftools_gistic_methy_peds <- subsetMaf ( cgp_maftools_gistic_methy , tsb = cgp_methylation_cases_peds $ Tumor_Sample_Barcode ) cgp_maftools_gistic_methy_adult <- subsetMaf ( cgp_maftools_gistic_methy , tsb = cgp_methylation_cases_adult $ Tumor_Sample_Barcode ) ## Specify colors for sample annotations ann_colors_methy <- list ( Tumor_Morphology = c ( Astro = \"#d95f02\" , Oligo = \"#7570b3\" , Undefined = \"#1b9e77\" ), Tumor_Grade = c ( High = \"#FEB24C\" , Low = \"#FFEDA0\" ), Tumor_Location = c ( Hemispheric = \"#a6cee3\" , Cerebellar = \"#1f78b4\" , midline = \"#e31a1c\" , UN = \"#fb9a99\" ), Methylation_Predicted_Class = c ( `Adult-IDH_mut` = \"#a6cee3\" , `Adult-IDH_wt` = \"#1f78b4\" , `Pediatric-Tumor` = \"#e31a1c\" )) ## Suppl Fig 4A pdf ( \"SF4A.pdf\" , width = 18 , height = 12 , pointsize = 12 , fonts = \"Arial\" , bg = \"white\" , compress = FALSE , useDingbats = FALSE ) suppl_fig_4A <- coOncoplot ( m1 = cgp_maftools_gistic_methy_peds , m2 = cgp_maftools_gistic_methy_adult , m1Name = 'Pediatric-like' , m2Name = 'Adult-like' , genes = oncoprint_genes_snv_scna , removeNonMutated = FALSE , additionalFeature1 = c ( \"dnds_mutsig\" , \"Driver\" ), additionalFeature2 = c ( \"dnds_mutsig\" , \"Driver\" ), clinicalFeatures1 = c ( \"Methylation_Predicted_Class\" , \"Tumor_Morphology\" , \"Tumor_Grade\" , \"Tumor_Location\" ), clinicalFeatures2 = c ( \"Methylation_Predicted_Class\" , \"Tumor_Morphology\" , \"Tumor_Grade\" , \"Tumor_Location\" ), sortByAnnotation2 = TRUE , legendFontSize = 1.2 , annotationFontSize = 1.2 , annotationColor1 = ann_colors_methy , annotationColor2 = ann_colors_methy , colors = varcall_colors [ c ( levels ( cgp_maftools_gistic_methy_peds @ data $ Variant_Classification ), \"Multi_Hit\" ) ], bgCol = \"#ffffff\" , borderCol = \"#CCCCCC\" , sepwd_genes1 = 0.8 , sepwd_genes2 = 0.8 ) dev.off ()","title":"Suppl Fig 4A"},{"location":"figures/S4/#suppl-fig-4b","text":"DNA methylation age of human and canine glioma. Updating...","title":"Suppl Fig 4B"},{"location":"figures/S5/","text":"CIBERSORT based deconvolution of immune microenvironment in human and canine glioma. Required metadata \u00b6 library ( tidyverse ) library ( RColorBrewer ) #Clean up cgp info #Streamline sample barcode, tumor grades (high vs low) #Only keep 40 cases where we have rnaseq for tumors #rnaseq cgp_info [ which ( cgp_info [, \"tumor_grade\" ] == \"GBM\" ), \"tumor_grade\" ] <- \"High\" cgp_info <- cgp_info [ - which ( is.na ( cgp_info [, \"tumor_grade\" ])),] #Clean up TCGA info grade_class <- rep ( \"\" , nrow ( tcga_info )) grade_class [ which ( tcga_info [, \"neoplasm_histologic_grade\" ] == \"g2\" )] <- \"Low\" grade_class [ which ( tcga_info [, \"neoplasm_histologic_grade\" ] == \"g3\" | tcga_info [, \"revised_histology\" ] == \"glioblastoma\" )] <- \"High\" tcga_info [, \"grade_class\" ] <- grade_class tcga_info <- tcga_info [ - which ( tcga_info [, \"grade_class\" ] == \"\" ),] cgp_cell_fractions <- cgp_cibersort [, 1 : 22 ] tcga_cell_fractions <- tcga_cibersort [, 1 : 22 ] ped_cell_fractions <- ped_cibersort [, 1 : 22 ] tcga_cell_fractions <- tcga_cell_fractions [ grep ( \"-01A-\" , rownames ( tcga_cell_fractions )),] ## May need to change to A or B #-------------------------------------- #Histology based splitting #Clean data in canines cgp_fraction_holder <- rownames ( cgp_cell_fractions ) cgp_fraction_holder <- strsplit ( cgp_fraction_holder , \"-\" ) cgp_fraction_holder <- sapply ( cgp_fraction_holder , function ( x ) paste ( x [ 1 ], x [ 2 ], x [ 3 ], sep = \"-\" )) rownames ( cgp_cell_fractions ) <- cgp_fraction_holder cgp_comxx <- intersect ( rownames ( cgp_info ), rownames ( cgp_cell_fractions )) cgp_cell_fractions <- cgp_cell_fractions [ cgp_comxx ,] cgp_info <- cgp_info [ cgp_comxx ,] cgp_grade <- cgp_info [, \"tumor_grade\" ] cgp_grade_fractions <- aggregate ( cgp_cell_fractions , by = list ( Grade = cgp_grade ), FUN = mean ) #Clean data in TCGA tcga_fraction_holder <- rownames ( tcga_cell_fractions ) tcga_fraction_holder <- strsplit ( tcga_fraction_holder , \"__\" ) tcga_fraction_holder <- sapply ( tcga_fraction_holder , function ( x ) x [ 2 ]) tcga_fraction_holder <- strsplit ( tcga_fraction_holder , \"-\" ) tcga_fraction_holder <- sapply ( tcga_fraction_holder , function ( x ) paste ( x [ 1 ], x [ 2 ], x [ 3 ], sep = \"-\" )) rownames ( tcga_cell_fractions ) <- tcga_fraction_holder tcga_comxx <- intersect ( rownames ( tcga_info ), rownames ( tcga_cell_fractions )) tcga_cell_fractions <- tcga_cell_fractions [ tcga_comxx ,] tcga_info <- tcga_info [ tcga_comxx ,] tcga_grade <- tcga_info [, \"grade_class\" ] tcga_grade_fractions <- aggregate ( tcga_cell_fractions , by = list ( Grade = tcga_grade ), FUN = mean ) #Prepare ped data ped_grade <- rep ( \"\" , nrow ( ped_cell_fractions )) ped_grade [ grep ( \"HGG\" , rownames ( ped_cell_fractions ))] <- \"High\" ped_grade [ grep ( \"LGG\" , rownames ( ped_cell_fractions ))] <- \"Low\" ped_grade_fractions <- aggregate ( ped_cell_fractions , by = list ( Grade = ped_grade ), FUN = mean ) grade_labels <- c ( \"High\" , \"Low\" ) #What is left: collapse the histology tables and draw the figures cgp_grade_fractions <- cgp_grade_fractions [, -1 ] tcga_grade_fractions <- tcga_grade_fractions [, -1 ] ped_grade_fractions <- ped_grade_fractions [, -1 ] cgp_grade_fractions <- t ( cgp_grade_fractions ) tcga_grade_fractions <- t ( tcga_grade_fractions ) ped_grade_fractions <- t ( ped_grade_fractions ) colnames ( cgp_grade_fractions ) <- paste ( \"cgp_\" , grade_labels , sep = \"\" ) colnames ( tcga_grade_fractions ) <- paste ( \"TCGA_\" , grade_labels , sep = \"\" ) colnames ( ped_grade_fractions ) <- paste ( \"ped_\" , grade_labels , sep = \"\" ) grade_fractions_full <- data.frame ( cgp_grade_fractions , tcga_grade_fractions , ped_grade_fractions ) collapsed_cells <- c ( \"B cells\" , \"PCs\" , \"CD8\" , \"CD4\" , \"gd T cells\" , \"NKs\" , \"Mono/MP\" , \"DCs\" , \"MCs\" , \"Eos\" , \"PMN cells\" ) collapsed_grade_fractions <- matrix ( 0 , nrow = length ( collapsed_cells ), ncol = 6 ) rownames ( collapsed_grade_fractions ) <- collapsed_cells colnames ( collapsed_grade_fractions ) <- colnames ( grade_fractions_full ) collapsed_grade_fractions [ \"B cells\" ,] <- apply ( grade_fractions_full [ grep ( \"B.cells\" , rownames ( grade_fractions_full )),], 2 , sum ) collapsed_grade_fractions [ \"PCs\" ,] <- apply ( grade_fractions_full [ grep ( \"Plasma.cells\" , rownames ( grade_fractions_full )),], 2 , sum ) collapsed_grade_fractions [ \"CD8\" ,] <- apply ( grade_fractions_full [ grep ( \"T.cells.CD8\" , rownames ( grade_fractions_full )),], 2 , sum ) collapsed_grade_fractions [ \"CD4\" ,] <- apply ( grade_fractions_full [ grep ( \"T.cells.CD4|T.cells.follicular|T.ce..s.regulatory\" , rownames ( grade_fractions_full )),], 2 , sum ) collapsed_grade_fractions [ \"gd T cells\" ,] <- apply ( grade_fractions_full [ grep ( \"T.cells.gamma\" , rownames ( grade_fractions_full )),], 2 , sum ) collapsed_grade_fractions [ \"NKs\" ,] <- apply ( grade_fractions_full [ grep ( \"NK.cells\" , rownames ( grade_fractions_full )),], 2 , sum ) collapsed_grade_fractions [ \"Mono/MP\" ,] <- apply ( grade_fractions_full [ grep ( \"Monocytes|Macrophages\" , rownames ( grade_fractions_full )),], 2 , sum ) collapsed_grade_fractions [ \"DCs\" ,] <- apply ( grade_fractions_full [ grep ( \"Dendritic.cells\" , rownames ( grade_fractions_full )),], 2 , sum ) collapsed_grade_fractions [ \"MCs\" ,] <- apply ( grade_fractions_full [ grep ( \"Mast.cells\" , rownames ( grade_fractions_full )),], 2 , sum ) collapsed_grade_fractions [ \"Eos\" ,] <- apply ( grade_fractions_full [ grep ( \"Eosinophils\" , rownames ( grade_fractions_full )),], 2 , sum ) collapsed_grade_fractions [ \"PMN cells\" ,] <- apply ( grade_fractions_full [ grep ( \"Neutrophils\" , rownames ( grade_fractions_full )),], 2 , sum ) collapsed_grade_label <- as.factor ( c ( rep ( \"Canine\" , 22 ), rep ( \"Adult\" , 22 ), rep ( \"Pediatric\" , 22 ))) collapsed_grade <- rep ( rep ( c ( \"High grade\" , \"Low grade\" ), each = 11 ), 3 ) collapsed_grade_fraction <- as.numeric ( collapsed_grade_fractions [, 1 : 6 ]) cell <- rep ( collapsed_cells , 6 ) cell <- factor ( cell , levels = unique ( cell )) collapsed_grade_plot_result <- data.frame ( collapsed_grade_fraction , cell , collapsed_grade_label , collapsed_grade ) collapsed_grade_plot_result [, \"collapsed_grade_label\" ] <- factor ( collapsed_grade_plot_result [, \"collapsed_grade_label\" ], levels = c ( \"Canine\" , \"Adult\" , \"Pediatric\" )) collapsed_grade_plot_result [, \"collapsed_grade\" ] <- factor ( collapsed_grade_plot_result [, \"collapsed_grade\" ], levels = c ( \"Low grade\" , \"High grade\" )) colors <- c ( \"#4aac8b\" , \"#a45dcf\" , \"#64ac48\" , \"#c563b0\" , \"#9a963f\" , \"#686cc5\" , \"#c78543\" , \"#6b9ad5\" , \"#cd5136\" , \"#c26b7e\" , \"#cd3c6d\" ) #colors <- sample(colors,replace=F) colors <- c ( \"#cd5136\" , \"#c78543\" , \"#c563b0\" , \"#c26b7e\" , \"#686cc5\" , \"#4aac8b\" , \"#6b9ad5\" , \"#cd3c6d\" , \"#9a963f\" , \"#64ac48\" , \"#a45dcf\" ) Fig S5 \u00b6 pdf ( \"SF5.pdf\" , width = 5 , height = 5 , useDingbats = FALSE ) suppl_fig_S5 <- ggplot ( collapsed_grade_plot_result , aes ( y = collapsed_grade_fraction , x = collapsed_grade , fill = cell )) + geom_bar ( stat = \"identity\" , width = 1 , colour = \"black\" , size = 0.15 ) + facet_wrap ( ~ collapsed_grade_label ) + scale_fill_manual ( values = colors ) + theme ( legend.title = element_blank (), legend.text = element_text ( size = 7 ), legend.key.size = unit ( 0.35 , \"cm\" ), panel.grid.major = element_blank (), panel.grid.minor = element_blank (), plot.background = element_blank (), axis.text.x = element_text ( angle = 45 , hjust = 1 ), axis.title = element_blank ()) + scale_x_discrete ( expand = c ( 0 , 0 )) + scale_y_continuous ( limits = c ( 0 , 1.0001 ), expand = c ( 0 , 0 )) suppl_fig_S5 dev.off ()","title":"S5 &middot; Suppl Figure 5"},{"location":"figures/S5/#required-metadata","text":"library ( tidyverse ) library ( RColorBrewer ) #Clean up cgp info #Streamline sample barcode, tumor grades (high vs low) #Only keep 40 cases where we have rnaseq for tumors #rnaseq cgp_info [ which ( cgp_info [, \"tumor_grade\" ] == \"GBM\" ), \"tumor_grade\" ] <- \"High\" cgp_info <- cgp_info [ - which ( is.na ( cgp_info [, \"tumor_grade\" ])),] #Clean up TCGA info grade_class <- rep ( \"\" , nrow ( tcga_info )) grade_class [ which ( tcga_info [, \"neoplasm_histologic_grade\" ] == \"g2\" )] <- \"Low\" grade_class [ which ( tcga_info [, \"neoplasm_histologic_grade\" ] == \"g3\" | tcga_info [, \"revised_histology\" ] == \"glioblastoma\" )] <- \"High\" tcga_info [, \"grade_class\" ] <- grade_class tcga_info <- tcga_info [ - which ( tcga_info [, \"grade_class\" ] == \"\" ),] cgp_cell_fractions <- cgp_cibersort [, 1 : 22 ] tcga_cell_fractions <- tcga_cibersort [, 1 : 22 ] ped_cell_fractions <- ped_cibersort [, 1 : 22 ] tcga_cell_fractions <- tcga_cell_fractions [ grep ( \"-01A-\" , rownames ( tcga_cell_fractions )),] ## May need to change to A or B #-------------------------------------- #Histology based splitting #Clean data in canines cgp_fraction_holder <- rownames ( cgp_cell_fractions ) cgp_fraction_holder <- strsplit ( cgp_fraction_holder , \"-\" ) cgp_fraction_holder <- sapply ( cgp_fraction_holder , function ( x ) paste ( x [ 1 ], x [ 2 ], x [ 3 ], sep = \"-\" )) rownames ( cgp_cell_fractions ) <- cgp_fraction_holder cgp_comxx <- intersect ( rownames ( cgp_info ), rownames ( cgp_cell_fractions )) cgp_cell_fractions <- cgp_cell_fractions [ cgp_comxx ,] cgp_info <- cgp_info [ cgp_comxx ,] cgp_grade <- cgp_info [, \"tumor_grade\" ] cgp_grade_fractions <- aggregate ( cgp_cell_fractions , by = list ( Grade = cgp_grade ), FUN = mean ) #Clean data in TCGA tcga_fraction_holder <- rownames ( tcga_cell_fractions ) tcga_fraction_holder <- strsplit ( tcga_fraction_holder , \"__\" ) tcga_fraction_holder <- sapply ( tcga_fraction_holder , function ( x ) x [ 2 ]) tcga_fraction_holder <- strsplit ( tcga_fraction_holder , \"-\" ) tcga_fraction_holder <- sapply ( tcga_fraction_holder , function ( x ) paste ( x [ 1 ], x [ 2 ], x [ 3 ], sep = \"-\" )) rownames ( tcga_cell_fractions ) <- tcga_fraction_holder tcga_comxx <- intersect ( rownames ( tcga_info ), rownames ( tcga_cell_fractions )) tcga_cell_fractions <- tcga_cell_fractions [ tcga_comxx ,] tcga_info <- tcga_info [ tcga_comxx ,] tcga_grade <- tcga_info [, \"grade_class\" ] tcga_grade_fractions <- aggregate ( tcga_cell_fractions , by = list ( Grade = tcga_grade ), FUN = mean ) #Prepare ped data ped_grade <- rep ( \"\" , nrow ( ped_cell_fractions )) ped_grade [ grep ( \"HGG\" , rownames ( ped_cell_fractions ))] <- \"High\" ped_grade [ grep ( \"LGG\" , rownames ( ped_cell_fractions ))] <- \"Low\" ped_grade_fractions <- aggregate ( ped_cell_fractions , by = list ( Grade = ped_grade ), FUN = mean ) grade_labels <- c ( \"High\" , \"Low\" ) #What is left: collapse the histology tables and draw the figures cgp_grade_fractions <- cgp_grade_fractions [, -1 ] tcga_grade_fractions <- tcga_grade_fractions [, -1 ] ped_grade_fractions <- ped_grade_fractions [, -1 ] cgp_grade_fractions <- t ( cgp_grade_fractions ) tcga_grade_fractions <- t ( tcga_grade_fractions ) ped_grade_fractions <- t ( ped_grade_fractions ) colnames ( cgp_grade_fractions ) <- paste ( \"cgp_\" , grade_labels , sep = \"\" ) colnames ( tcga_grade_fractions ) <- paste ( \"TCGA_\" , grade_labels , sep = \"\" ) colnames ( ped_grade_fractions ) <- paste ( \"ped_\" , grade_labels , sep = \"\" ) grade_fractions_full <- data.frame ( cgp_grade_fractions , tcga_grade_fractions , ped_grade_fractions ) collapsed_cells <- c ( \"B cells\" , \"PCs\" , \"CD8\" , \"CD4\" , \"gd T cells\" , \"NKs\" , \"Mono/MP\" , \"DCs\" , \"MCs\" , \"Eos\" , \"PMN cells\" ) collapsed_grade_fractions <- matrix ( 0 , nrow = length ( collapsed_cells ), ncol = 6 ) rownames ( collapsed_grade_fractions ) <- collapsed_cells colnames ( collapsed_grade_fractions ) <- colnames ( grade_fractions_full ) collapsed_grade_fractions [ \"B cells\" ,] <- apply ( grade_fractions_full [ grep ( \"B.cells\" , rownames ( grade_fractions_full )),], 2 , sum ) collapsed_grade_fractions [ \"PCs\" ,] <- apply ( grade_fractions_full [ grep ( \"Plasma.cells\" , rownames ( grade_fractions_full )),], 2 , sum ) collapsed_grade_fractions [ \"CD8\" ,] <- apply ( grade_fractions_full [ grep ( \"T.cells.CD8\" , rownames ( grade_fractions_full )),], 2 , sum ) collapsed_grade_fractions [ \"CD4\" ,] <- apply ( grade_fractions_full [ grep ( \"T.cells.CD4|T.cells.follicular|T.ce..s.regulatory\" , rownames ( grade_fractions_full )),], 2 , sum ) collapsed_grade_fractions [ \"gd T cells\" ,] <- apply ( grade_fractions_full [ grep ( \"T.cells.gamma\" , rownames ( grade_fractions_full )),], 2 , sum ) collapsed_grade_fractions [ \"NKs\" ,] <- apply ( grade_fractions_full [ grep ( \"NK.cells\" , rownames ( grade_fractions_full )),], 2 , sum ) collapsed_grade_fractions [ \"Mono/MP\" ,] <- apply ( grade_fractions_full [ grep ( \"Monocytes|Macrophages\" , rownames ( grade_fractions_full )),], 2 , sum ) collapsed_grade_fractions [ \"DCs\" ,] <- apply ( grade_fractions_full [ grep ( \"Dendritic.cells\" , rownames ( grade_fractions_full )),], 2 , sum ) collapsed_grade_fractions [ \"MCs\" ,] <- apply ( grade_fractions_full [ grep ( \"Mast.cells\" , rownames ( grade_fractions_full )),], 2 , sum ) collapsed_grade_fractions [ \"Eos\" ,] <- apply ( grade_fractions_full [ grep ( \"Eosinophils\" , rownames ( grade_fractions_full )),], 2 , sum ) collapsed_grade_fractions [ \"PMN cells\" ,] <- apply ( grade_fractions_full [ grep ( \"Neutrophils\" , rownames ( grade_fractions_full )),], 2 , sum ) collapsed_grade_label <- as.factor ( c ( rep ( \"Canine\" , 22 ), rep ( \"Adult\" , 22 ), rep ( \"Pediatric\" , 22 ))) collapsed_grade <- rep ( rep ( c ( \"High grade\" , \"Low grade\" ), each = 11 ), 3 ) collapsed_grade_fraction <- as.numeric ( collapsed_grade_fractions [, 1 : 6 ]) cell <- rep ( collapsed_cells , 6 ) cell <- factor ( cell , levels = unique ( cell )) collapsed_grade_plot_result <- data.frame ( collapsed_grade_fraction , cell , collapsed_grade_label , collapsed_grade ) collapsed_grade_plot_result [, \"collapsed_grade_label\" ] <- factor ( collapsed_grade_plot_result [, \"collapsed_grade_label\" ], levels = c ( \"Canine\" , \"Adult\" , \"Pediatric\" )) collapsed_grade_plot_result [, \"collapsed_grade\" ] <- factor ( collapsed_grade_plot_result [, \"collapsed_grade\" ], levels = c ( \"Low grade\" , \"High grade\" )) colors <- c ( \"#4aac8b\" , \"#a45dcf\" , \"#64ac48\" , \"#c563b0\" , \"#9a963f\" , \"#686cc5\" , \"#c78543\" , \"#6b9ad5\" , \"#cd5136\" , \"#c26b7e\" , \"#cd3c6d\" ) #colors <- sample(colors,replace=F) colors <- c ( \"#cd5136\" , \"#c78543\" , \"#c563b0\" , \"#c26b7e\" , \"#686cc5\" , \"#4aac8b\" , \"#6b9ad5\" , \"#cd3c6d\" , \"#9a963f\" , \"#64ac48\" , \"#a45dcf\" )","title":"Required metadata"},{"location":"figures/S5/#fig-s5","text":"pdf ( \"SF5.pdf\" , width = 5 , height = 5 , useDingbats = FALSE ) suppl_fig_S5 <- ggplot ( collapsed_grade_plot_result , aes ( y = collapsed_grade_fraction , x = collapsed_grade , fill = cell )) + geom_bar ( stat = \"identity\" , width = 1 , colour = \"black\" , size = 0.15 ) + facet_wrap ( ~ collapsed_grade_label ) + scale_fill_manual ( values = colors ) + theme ( legend.title = element_blank (), legend.text = element_text ( size = 7 ), legend.key.size = unit ( 0.35 , \"cm\" ), panel.grid.major = element_blank (), panel.grid.minor = element_blank (), plot.background = element_blank (), axis.text.x = element_text ( angle = 45 , hjust = 1 ), axis.title = element_blank ()) + scale_x_discrete ( expand = c ( 0 , 0 )) + scale_y_continuous ( limits = c ( 0 , 1.0001 ), expand = c ( 0 , 0 )) suppl_fig_S5 dev.off ()","title":"Fig S5"},{"location":"methods/S01_samples/","text":"Tissue samples from canine patients with gliomas were acquired with material transfer agreements from Auburn University College of Veterinary Medicine, Colorado State University, Texas A&M College of Veterinary Medicine & Biomedical Sciences, UC Davis School of Veterinary Medicine and Virginia-MD College of Veterinary Medicine. Tissue samples from resected tumor (n=83) and matched normal tissue (n=67 or paired cases) were collected at the surgical treatment or immediately following euthanasia. There were also four additional dog patients where we had adequate DNA and RNA for methylation (n=48) and RNA-seq (n=40) profiling but unable to do WGS/Exome sequencing because of failed library preparation (Table S1). Matched normal tissue were from post-necropsy sample of contra-lateral healthy brain tissue (n=38), white blood cells (n=13), and remaining 17 samples from other tissues. Samples were archived in snap-frozen (n=37/67 paired cases; n=8/16 tumor-only cases) and Formalin-Fixed Paraffin-Embedded (FFPE, n=30/67 paired cases; n=8/16 tumor-only cases) state. Samples were then shipped to sequencing core facilities for sample preparation, quality control and sequencing (see Methods below).","title":"Samples"},{"location":"methods/S02_data_sources/","text":"For comparison to human glioma, we downloaded both - raw sequencing data and processed tables for human pediatric and adult gliomas with appropriate controlled-data access agreements where needed. We used published mutation rates (Figure 1D) and mutational signatures (Figure 3) from pan-cancer datasets from adults (n=3,281) and pediatric (n=961) cohorts (Alexandrov et al., 2013; Bailey et al., 2018; Gr\u00f6bner et al., 2018). For aneuploidy and molecular life history analysis (details below), we downloaded raw sequencing data and analyzed whole genomes from 53 pediatric gliomas (Ma et al., 2018; St. Jude Cloud Pediatric Cancer Genome Project, https://pecan.stjude.cloud ), SNP6 data from adult gliomas \u2013 IDHwt (n=517), IDHmut-codel (n=171), and IDHmut-noncodel (n=281) cases (Ceccarelli et al., 2016), as well as whole genomes from 23 adult GBMs (Brennan et al., 2013). For coding mutation rate calculation, we used a subset of TCGA glioma set where exome/whole genome based variant calls were available: IDHwt (n=371), IDHmut-non-codel (n=268), and IDHmut-codel (n=169).","title":"Data Sources"},{"location":"methods/S03_sample_prep/","text":"DNA/RNA extraction \u00b6 Genomic DNA and total RNA of fresh frozen tissue and FFPE tissue from paraffin scrolls were were extracted simultaneously using AllPrep DNA/RNA Mini Kit (Qiagen) and AllPrep DNA/RNA FFPE Kit (Qiagen) according to the manufacturer\u2019s instructions, respectively. Additional DNase treatment was performed on-column for RNA purification. WGS sample preparation \u00b6 200-400ng of DNA was sheared to 400bp using a LE220 focused-ultrasonicator (Covaris) and size selected using Ampure XP beads (Beckman Coulter). The fragments were treated with end-repair, A-tailing, and ligation of Illumina compatible adapters (Integrated DNA Technologies) using the KAPA Hyper Prep Kit (Illumina) (KAPA Biosystems/ Roche). For FFPE samples, 5 to 10 cycles of PCR amplification were performed. Quantification of libraries were performed using real-time qPCR (Thermo Fisher). Libraries were sequenced paired end reads of 151bp on Illumina Hiseq X-Ten (Novogene). WES sample preparation \u00b6 Sample were prepared as described above in the WGS sample preparation, targeting 200bp with PCR amplification. Target capture was performed using SeqCap EZ Canine Exome Custom Design (canine 140702_canFam3_exomeplus_BB_EZ_HX1 probe set) (Broeckx et al., 2015) (Roche Nimblegen). Briefly, WGS libraries were hybridized with capture probes using Nimblegen SepCap EZ Kit (Roche Nimblegen) according to manufacturer\u2019s instruction. Captured fragments were PCR amplified and purified using Ampure XP beads. Quantification of libraries were performed using real-time qPCR (Thermo Fisher). Libraries were sequenced paired end of 76bp on Hiseq4000 (Illumina). RNA-seq sample preparation \u00b6 RNA-seq libraries were prepared with KAPA Stranded mRNA-Seq kit (Kapa Biosystem/ Roche) according to manufacturer\u2019s instruction. First, poly A RNA was isolated from 300ng total RNA using oligo-dT magnetic beads. Purified RNA was then fragmented at 85\u00b0C for 6 mins, targeting fragments range 250-300bp. Fragmented RNA is reverse-transcribed with an incubation of 25\u00b0C for 10mins, 42\u00b0C for 15 mins and an inactivation step at 70\u00b0C for 15mins. This was followed by second strand synthesis at 16\u00b0C, 60 mins. Double stranded cDNA (dscDNA) fragments were purified using Ampure XP beads (Beckman). The dscDNA were then A-tailed, and ligated with illumina compatible adaptors (IDT). Adaptor-ligated DNA was purified using Ampure XP beads. This is followed by 10 cycles of PCR amplification. The final library was cleaned up using AMpure XP beads. Quantification of libraries were performed using real-time qPCR (Thermo Fisher). Sequencing was performed on Hiseq4000 (Illumina) generating paired end reads of 75bp. Reduced Representation Bisulfite Sequencing (RRBS) sample preparation \u00b6 Library preparation for RRBS was performed using Premium RRBS Kit (Diagenode) according to manufacturer\u2019s instructions. Briefly, 100ng of DNA was used for each sample, which was enzymatically digested, end-repaired and ligated with an adaptor. Subsequently, 8 samples with different adaptors were pooled together and subjected to bisulfite treatment. After purification steps following bisulfite conversion, the pooled DNA was amplified with 9-14 cycles of PCR and then cleaned up with Ampure XP beads. Quantification of libraries were performed using real-time qPCR (Thermo Fisher). Libraries were sequenced single end 101bp on Hiseq2500 (Illumina).","title":"Sample Preparations"},{"location":"methods/S03_sample_prep/#dnarna-extraction","text":"Genomic DNA and total RNA of fresh frozen tissue and FFPE tissue from paraffin scrolls were were extracted simultaneously using AllPrep DNA/RNA Mini Kit (Qiagen) and AllPrep DNA/RNA FFPE Kit (Qiagen) according to the manufacturer\u2019s instructions, respectively. Additional DNase treatment was performed on-column for RNA purification.","title":"DNA/RNA extraction"},{"location":"methods/S03_sample_prep/#wgs-sample-preparation","text":"200-400ng of DNA was sheared to 400bp using a LE220 focused-ultrasonicator (Covaris) and size selected using Ampure XP beads (Beckman Coulter). The fragments were treated with end-repair, A-tailing, and ligation of Illumina compatible adapters (Integrated DNA Technologies) using the KAPA Hyper Prep Kit (Illumina) (KAPA Biosystems/ Roche). For FFPE samples, 5 to 10 cycles of PCR amplification were performed. Quantification of libraries were performed using real-time qPCR (Thermo Fisher). Libraries were sequenced paired end reads of 151bp on Illumina Hiseq X-Ten (Novogene).","title":"WGS sample preparation"},{"location":"methods/S03_sample_prep/#wes-sample-preparation","text":"Sample were prepared as described above in the WGS sample preparation, targeting 200bp with PCR amplification. Target capture was performed using SeqCap EZ Canine Exome Custom Design (canine 140702_canFam3_exomeplus_BB_EZ_HX1 probe set) (Broeckx et al., 2015) (Roche Nimblegen). Briefly, WGS libraries were hybridized with capture probes using Nimblegen SepCap EZ Kit (Roche Nimblegen) according to manufacturer\u2019s instruction. Captured fragments were PCR amplified and purified using Ampure XP beads. Quantification of libraries were performed using real-time qPCR (Thermo Fisher). Libraries were sequenced paired end of 76bp on Hiseq4000 (Illumina).","title":"WES sample preparation"},{"location":"methods/S03_sample_prep/#rna-seq-sample-preparation","text":"RNA-seq libraries were prepared with KAPA Stranded mRNA-Seq kit (Kapa Biosystem/ Roche) according to manufacturer\u2019s instruction. First, poly A RNA was isolated from 300ng total RNA using oligo-dT magnetic beads. Purified RNA was then fragmented at 85\u00b0C for 6 mins, targeting fragments range 250-300bp. Fragmented RNA is reverse-transcribed with an incubation of 25\u00b0C for 10mins, 42\u00b0C for 15 mins and an inactivation step at 70\u00b0C for 15mins. This was followed by second strand synthesis at 16\u00b0C, 60 mins. Double stranded cDNA (dscDNA) fragments were purified using Ampure XP beads (Beckman). The dscDNA were then A-tailed, and ligated with illumina compatible adaptors (IDT). Adaptor-ligated DNA was purified using Ampure XP beads. This is followed by 10 cycles of PCR amplification. The final library was cleaned up using AMpure XP beads. Quantification of libraries were performed using real-time qPCR (Thermo Fisher). Sequencing was performed on Hiseq4000 (Illumina) generating paired end reads of 75bp.","title":"RNA-seq sample preparation"},{"location":"methods/S03_sample_prep/#reduced-representation-bisulfite-sequencing-rrbs-sample-preparation","text":"Library preparation for RRBS was performed using Premium RRBS Kit (Diagenode) according to manufacturer\u2019s instructions. Briefly, 100ng of DNA was used for each sample, which was enzymatically digested, end-repaired and ligated with an adaptor. Subsequently, 8 samples with different adaptors were pooled together and subjected to bisulfite treatment. After purification steps following bisulfite conversion, the pooled DNA was amplified with 9-14 cycles of PCR and then cleaned up with Ampure XP beads. Quantification of libraries were performed using real-time qPCR (Thermo Fisher). Libraries were sequenced single end 101bp on Hiseq2500 (Illumina).","title":"Reduced Representation Bisulfite Sequencing (RRBS) sample preparation"},{"location":"methods/S04_alignments_fprint/","text":"DNA alignments \u00b6 DNA alignments for whole genome (WGS) and exome sequencing was done using bwa-mem (version 0.7.15-r1140) (Fleshner and Chernett, 1997) with -M -t 12 argument and against CanFam3.1 reference genome from UCSC, https://genome.ucsc.edu/cgi-bin/hgGateway?db=canFam3 (md5: 112bc809596d22c896d7e9bcbe68ede6). For each sample, fastq files were aligned per read group and then merged using Picard tools (v2.18.0, http://broadinstitute.github.io/picard ) SortSam command to make an interim bam file. Final, analysis-ready bam file per sample \u2013 tumor and normal bam, if available \u2013 was created by series of steps following best practices guidelines from GATK4 (version 4.0.8.1) (DePristo et al., 2011), namely MarkDuplicates, Indel Realignment, and Base Quality Score Recalibration (BQSR). Alignment QC metrics were calculated using GATK4 DepthOfCoverage (for WGS) and CollectHSMetrics (for exome) as well as Qualimap (version 2.2.1) (Okonechnikov et al., 2016) bamqc for merged bam files. Coverage statistics were also based on regions of interest (ROIs) which consisted of exonic region-level annotations for biotypes: protein-coding gene, microrna, lincrna, and pseudogene from Ensembl gene annotations for canine genome (v91 and higher). We flagged samples as failed QC if merged bam file has a genome-wide coverage of < 30% or > 75% of ROIs have 30% or lesser coverage. Accordingly, three samples (of three cases) failed QC step and they were removed from all analyses. Note that 77 cases in patient tissues and samples section represent all cases which passed QC at WGS, exome, RNA-seq, and methylation level data preprocessing. RNA alignments \u00b6 Raw fastq files from paired-end RNA-seq assay for 41 tumor samples and 3 matched normal tissue samples were first preprocessed through fastp (version 0.19.5) (Chen et al., 2018) to perform read-based quality pruning, including adapter trimming. Resulting fastq files were then used as input for kallisto quant (version 0.45.0) \u2013 a pseudoalignment based method to quantify RNA abundance at transcript-level in transcripts per million (TPM) counts format. We then used sleuth R package (version 0.30.0) (Pimentel et al., 2017) to output model-based, gene-level normalized TPM matrix which was also corrected for potential batch effects due to RNA-seq data derived from two sequencing core facilities and tissue archival (snap-frozen vs FFPE). Detailed workflow, including command-line parameters for model fitting are under code/rnaseq directory. RRBS alignments \u00b6 Raw fastq files from RRBS assay for 45 tumor samples were processed through FastQC (version 0.11.7, https://www.bioinformatics.babraham.ac.uk/projects/fastqc ) and Trim Galore (version 0.5.0, FelixKrueger/TrimGalore ) for quality control, filtering low quality base calls, and adapter trimming. Trimmed reads were then mapped to a bisulfite converted reference genome (canFam3.1, obtained from Ensembl release 85) using the Bismark Bisulfite Mapper (v0.19.1) with the Bowtie2 short read aligner (v2.2.3) (Krueger and Andrews, 2011), allowing for one non-bisulfite mismatch per read. Cytosine methylation calls were made for the mapped reads using the Bismark methylation extractor (version 0.19). The resulting methylation values were obtained as \\(\\beta\\) -values, calculated as the ratio of methylated to total reads at a given CpG site. DNA fingerprinting \u00b6 DNA fingerprinting for each of WGS and exome tumor-normal and tumor-only bam files was done using NGSCheckMate tool (version 1.0.0) (Lee et al., 2017). Germline snps in protein-coding regions was used as a variant reference panel to allow simultaneous fingerprinting of WGS and exome libraries. NGSCheckMate does sample pairing QC based on shared germline variants found in samples (tumor and normal tissue from the same patient) and also model difference between samples (or libraries) based on sequencing depth-dependent variation in allelic fraction of reference variants. Fingerprint results for WGS and exome samples from 77 canine glioma did not show mixture of tumor-normal or cross-patient sample contamination (See Figure S1A).","title":"Alignments"},{"location":"methods/S04_alignments_fprint/#dna-alignments","text":"DNA alignments for whole genome (WGS) and exome sequencing was done using bwa-mem (version 0.7.15-r1140) (Fleshner and Chernett, 1997) with -M -t 12 argument and against CanFam3.1 reference genome from UCSC, https://genome.ucsc.edu/cgi-bin/hgGateway?db=canFam3 (md5: 112bc809596d22c896d7e9bcbe68ede6). For each sample, fastq files were aligned per read group and then merged using Picard tools (v2.18.0, http://broadinstitute.github.io/picard ) SortSam command to make an interim bam file. Final, analysis-ready bam file per sample \u2013 tumor and normal bam, if available \u2013 was created by series of steps following best practices guidelines from GATK4 (version 4.0.8.1) (DePristo et al., 2011), namely MarkDuplicates, Indel Realignment, and Base Quality Score Recalibration (BQSR). Alignment QC metrics were calculated using GATK4 DepthOfCoverage (for WGS) and CollectHSMetrics (for exome) as well as Qualimap (version 2.2.1) (Okonechnikov et al., 2016) bamqc for merged bam files. Coverage statistics were also based on regions of interest (ROIs) which consisted of exonic region-level annotations for biotypes: protein-coding gene, microrna, lincrna, and pseudogene from Ensembl gene annotations for canine genome (v91 and higher). We flagged samples as failed QC if merged bam file has a genome-wide coverage of < 30% or > 75% of ROIs have 30% or lesser coverage. Accordingly, three samples (of three cases) failed QC step and they were removed from all analyses. Note that 77 cases in patient tissues and samples section represent all cases which passed QC at WGS, exome, RNA-seq, and methylation level data preprocessing.","title":"DNA alignments"},{"location":"methods/S04_alignments_fprint/#rna-alignments","text":"Raw fastq files from paired-end RNA-seq assay for 41 tumor samples and 3 matched normal tissue samples were first preprocessed through fastp (version 0.19.5) (Chen et al., 2018) to perform read-based quality pruning, including adapter trimming. Resulting fastq files were then used as input for kallisto quant (version 0.45.0) \u2013 a pseudoalignment based method to quantify RNA abundance at transcript-level in transcripts per million (TPM) counts format. We then used sleuth R package (version 0.30.0) (Pimentel et al., 2017) to output model-based, gene-level normalized TPM matrix which was also corrected for potential batch effects due to RNA-seq data derived from two sequencing core facilities and tissue archival (snap-frozen vs FFPE). Detailed workflow, including command-line parameters for model fitting are under code/rnaseq directory.","title":"RNA alignments"},{"location":"methods/S04_alignments_fprint/#rrbs-alignments","text":"Raw fastq files from RRBS assay for 45 tumor samples were processed through FastQC (version 0.11.7, https://www.bioinformatics.babraham.ac.uk/projects/fastqc ) and Trim Galore (version 0.5.0, FelixKrueger/TrimGalore ) for quality control, filtering low quality base calls, and adapter trimming. Trimmed reads were then mapped to a bisulfite converted reference genome (canFam3.1, obtained from Ensembl release 85) using the Bismark Bisulfite Mapper (v0.19.1) with the Bowtie2 short read aligner (v2.2.3) (Krueger and Andrews, 2011), allowing for one non-bisulfite mismatch per read. Cytosine methylation calls were made for the mapped reads using the Bismark methylation extractor (version 0.19). The resulting methylation values were obtained as \\(\\beta\\) -values, calculated as the ratio of methylated to total reads at a given CpG site.","title":"RRBS alignments"},{"location":"methods/S04_alignments_fprint/#dna-fingerprinting","text":"DNA fingerprinting for each of WGS and exome tumor-normal and tumor-only bam files was done using NGSCheckMate tool (version 1.0.0) (Lee et al., 2017). Germline snps in protein-coding regions was used as a variant reference panel to allow simultaneous fingerprinting of WGS and exome libraries. NGSCheckMate does sample pairing QC based on shared germline variants found in samples (tumor and normal tissue from the same patient) and also model difference between samples (or libraries) based on sequencing depth-dependent variation in allelic fraction of reference variants. Fingerprint results for WGS and exome samples from 77 canine glioma did not show mixture of tumor-normal or cross-patient sample contamination (See Figure S1A).","title":"DNA fingerprinting"},{"location":"methods/S05_somatic_variants/","text":"Somatic callers \u00b6 Somatic variant calls were called on the merged whole genome and exome bam files using three callers: GATK4 (version 4.0.8.1) (McKenna et al., 2010) Mutect2 (Cibulskis et al., 2013), VarScan2 (version 2.4.2), and LoFreq (version 2.1.3.1) (Wilm et al., 2012). Matching and fingerprint validated WGS and exome files per sample were merged using Picard tools (v2.18.0, http://broadinstitute.github.io/picard ), MergeSamFiles command. Three somatic callers were then run in either paired tumor \u2013 matched normal (n=67) or tumor-only (n=14) mode. Mutect2 \u00b6 Mutect2 was first run in panel-of-normals (PON) mode using 57 matched normal samples. Resulting PON file was used for calling somatic variant calls using Mutect2 in both, paired and tumor-only mode along with options: --germline-resources 58indiv.unifiedgenotyper.recalibrated_95.5_filtered.pass_snp.fill_tags.vcf.gz \u2013af-of-alleles-not-in-resource 0 .008621 Tumor-only Mutect2 mode was run using default arguments and paired Mutect2 calls had following arguments: --initial-tumor-lod 2 .0 --normal-lod 2 .2 --tumor-lod-to-emit 3 .0 --pcr-indel-model CONSERVATIVE Throughout the process of using GATK4 based tools, including Mutect2, we followed best practices guidelines (DePristo et al., 2011) where practical for canine genome, e.g., in contrast to human genome, population level resources are limited for canine genome. VarScan2 \u00b6 VarScan2 paired mode was run with a command: somatic and arguments: --min-coverage 8 --min-coverage-normal 6 --min-coverage-tumor 8 --min-reads2 2 --min-avg-qual 15 --min-var-freq 0 .08 --min-freq-for-hom 0 .75 --tumor-purity 1 .0 --strand-filter 1 --somatic-p-value 0 .05 --output-vcf 1 VarScan2 tumor-only mode was run using command: mpileup2cns and arguments: --min-coverage 8 --min-reads2 2 --min-avg-qual 15 --min-var-freq 0 .08 --min-freq-for-hom 0 .75 --strand-filter 1 --p-value 0 .05 --variants --output-vcf 1 LoFreq \u00b6 LoFreq paired mode was run using command: somatic and arguments: --threads 4 --call-indels --min-cov 7 \u2013verbose and tumor-only mode was run using command: call and arguments: --call-indels --sig 0 .05 --min-cov 7 --verbose -s Filtering \u00b6 Resulting raw somatic calls - single nucleotide variants (SNV) and small insertions and/or deletions (Indels) - from three callers were then subject to filtering based on caller-specific filters and hard filters. Briefly, Mutect2 calls were subject to extensive filtering based on germline risk, artifacts arising due to sequencing platforms, tissue archival (FFPE), repeat regions, etc. Filtering parameters are in code/snv_filters directory, and were based upon suggestions from GATK website . VarScan2 somatic filters were applied as per developer\u2019s guidelines (Koboldt et al., 2013). Hard filters were based upon filtering out variants present in dbSNP and PONs created via GATK4 Mutect2. Filtered somatic calls from three callers (in VCF version 4.2 format) were then subject to consensus somatic calls using SomaticSeq (version 3.1.0) (Fang et al., 2015) in majority voting mode with priority given to Mutect2 filtered (PASS) calls followed by consensus voting based on calls present in VarScan2 and LoFreq filtered calls. Resulting consensus VCF file for 81 cases were finally converted to Variant Effect Predictor (VEP version 91) (McLaren et al., 2016) annotated vcfs and Mutation Annotation Format (MAF, https://docs.gdc.cancer.gov/Data/File_Formats/MAF_Format ) using vcf2maf utility ( mskcc/vcf2maf ). Annotated VCFs and MAFs were used for all of downstream analyses. Sample-wise VCFs \u00b6 sample wise vcfs from multisample vcf.gz was generated using GATK SelectVariant command. #!/bin/bash ## Get individual vcf from multisample vcf ## @sbamin VCF = \"/fastscratch/amins/icdc/consensus_variants/glioma01_somaticseq_consensus_v20190902.vcf.gz\" echo \"md5 of consensus VCF file\" md5sum \" ${ VCF } \" ## load GATK module load s7gatk/4.1.8.1 ## output dir OUTDIR = \"/fastscratch/amins/icdc/consensus_variants/sample_vcfs\" mkdir -p \" ${ OUTDIR } \" mkdir -p \" ${ OUTDIR } \" /logs export OUTDIR VCF get_sample_vcf () { _sample = \" $1 \" echo \"############################## Extracting ${ _sample } ###############################\" gatk SelectVariants \\ --reference /projects/verhaak-lab/DogWGSReference/CanFam3_1.fa \\ --variant \" ${ VCF } \" \\ -sn \" ${ _sample } \" \\ --output \" ${ OUTDIR } \" /glioma01_somaticseq_ \" ${ _sample } \" .vcf.gz \\ --create-output-variant-md5 true \\ --create-output-variant-index true > | \" ${ OUTDIR } \" /logs/glioma01_somaticseq_ \" ${ _sample } \" .log 2 > & 1 _exitstat = $? printf \"%s\\t%s\\n\" \" ${ _sample } \" \" ${ _exitstat } \" >> \" ${ OUTDIR } \" /logs/gatk_selectvariant_summary.log unset _sample _exitstat } export -f get_sample_vcf echo \"Number of samples in ${ VCF } \" bcftools query -l \" ${ VCF } \" | wc -l ## run parsing 20 samples in parallel bcftools query -l \" ${ VCF } \" | parallel -j20 get_sample_vcf {} echo -e \"Job done\\nCheck log under ${ OUTDIR } /logs/ for errors, if any.\"","title":"Somatic SNVs and Indels"},{"location":"methods/S05_somatic_variants/#somatic-callers","text":"Somatic variant calls were called on the merged whole genome and exome bam files using three callers: GATK4 (version 4.0.8.1) (McKenna et al., 2010) Mutect2 (Cibulskis et al., 2013), VarScan2 (version 2.4.2), and LoFreq (version 2.1.3.1) (Wilm et al., 2012). Matching and fingerprint validated WGS and exome files per sample were merged using Picard tools (v2.18.0, http://broadinstitute.github.io/picard ), MergeSamFiles command. Three somatic callers were then run in either paired tumor \u2013 matched normal (n=67) or tumor-only (n=14) mode.","title":"Somatic callers"},{"location":"methods/S05_somatic_variants/#mutect2","text":"Mutect2 was first run in panel-of-normals (PON) mode using 57 matched normal samples. Resulting PON file was used for calling somatic variant calls using Mutect2 in both, paired and tumor-only mode along with options: --germline-resources 58indiv.unifiedgenotyper.recalibrated_95.5_filtered.pass_snp.fill_tags.vcf.gz \u2013af-of-alleles-not-in-resource 0 .008621 Tumor-only Mutect2 mode was run using default arguments and paired Mutect2 calls had following arguments: --initial-tumor-lod 2 .0 --normal-lod 2 .2 --tumor-lod-to-emit 3 .0 --pcr-indel-model CONSERVATIVE Throughout the process of using GATK4 based tools, including Mutect2, we followed best practices guidelines (DePristo et al., 2011) where practical for canine genome, e.g., in contrast to human genome, population level resources are limited for canine genome.","title":"Mutect2"},{"location":"methods/S05_somatic_variants/#varscan2","text":"VarScan2 paired mode was run with a command: somatic and arguments: --min-coverage 8 --min-coverage-normal 6 --min-coverage-tumor 8 --min-reads2 2 --min-avg-qual 15 --min-var-freq 0 .08 --min-freq-for-hom 0 .75 --tumor-purity 1 .0 --strand-filter 1 --somatic-p-value 0 .05 --output-vcf 1 VarScan2 tumor-only mode was run using command: mpileup2cns and arguments: --min-coverage 8 --min-reads2 2 --min-avg-qual 15 --min-var-freq 0 .08 --min-freq-for-hom 0 .75 --strand-filter 1 --p-value 0 .05 --variants --output-vcf 1","title":"VarScan2"},{"location":"methods/S05_somatic_variants/#lofreq","text":"LoFreq paired mode was run using command: somatic and arguments: --threads 4 --call-indels --min-cov 7 \u2013verbose and tumor-only mode was run using command: call and arguments: --call-indels --sig 0 .05 --min-cov 7 --verbose -s","title":"LoFreq"},{"location":"methods/S05_somatic_variants/#filtering","text":"Resulting raw somatic calls - single nucleotide variants (SNV) and small insertions and/or deletions (Indels) - from three callers were then subject to filtering based on caller-specific filters and hard filters. Briefly, Mutect2 calls were subject to extensive filtering based on germline risk, artifacts arising due to sequencing platforms, tissue archival (FFPE), repeat regions, etc. Filtering parameters are in code/snv_filters directory, and were based upon suggestions from GATK website . VarScan2 somatic filters were applied as per developer\u2019s guidelines (Koboldt et al., 2013). Hard filters were based upon filtering out variants present in dbSNP and PONs created via GATK4 Mutect2. Filtered somatic calls from three callers (in VCF version 4.2 format) were then subject to consensus somatic calls using SomaticSeq (version 3.1.0) (Fang et al., 2015) in majority voting mode with priority given to Mutect2 filtered (PASS) calls followed by consensus voting based on calls present in VarScan2 and LoFreq filtered calls. Resulting consensus VCF file for 81 cases were finally converted to Variant Effect Predictor (VEP version 91) (McLaren et al., 2016) annotated vcfs and Mutation Annotation Format (MAF, https://docs.gdc.cancer.gov/Data/File_Formats/MAF_Format ) using vcf2maf utility ( mskcc/vcf2maf ). Annotated VCFs and MAFs were used for all of downstream analyses.","title":"Filtering"},{"location":"methods/S05_somatic_variants/#sample-wise-vcfs","text":"sample wise vcfs from multisample vcf.gz was generated using GATK SelectVariant command. #!/bin/bash ## Get individual vcf from multisample vcf ## @sbamin VCF = \"/fastscratch/amins/icdc/consensus_variants/glioma01_somaticseq_consensus_v20190902.vcf.gz\" echo \"md5 of consensus VCF file\" md5sum \" ${ VCF } \" ## load GATK module load s7gatk/4.1.8.1 ## output dir OUTDIR = \"/fastscratch/amins/icdc/consensus_variants/sample_vcfs\" mkdir -p \" ${ OUTDIR } \" mkdir -p \" ${ OUTDIR } \" /logs export OUTDIR VCF get_sample_vcf () { _sample = \" $1 \" echo \"############################## Extracting ${ _sample } ###############################\" gatk SelectVariants \\ --reference /projects/verhaak-lab/DogWGSReference/CanFam3_1.fa \\ --variant \" ${ VCF } \" \\ -sn \" ${ _sample } \" \\ --output \" ${ OUTDIR } \" /glioma01_somaticseq_ \" ${ _sample } \" .vcf.gz \\ --create-output-variant-md5 true \\ --create-output-variant-index true > | \" ${ OUTDIR } \" /logs/glioma01_somaticseq_ \" ${ _sample } \" .log 2 > & 1 _exitstat = $? printf \"%s\\t%s\\n\" \" ${ _sample } \" \" ${ _exitstat } \" >> \" ${ OUTDIR } \" /logs/gatk_selectvariant_summary.log unset _sample _exitstat } export -f get_sample_vcf echo \"Number of samples in ${ VCF } \" bcftools query -l \" ${ VCF } \" | wc -l ## run parsing 20 samples in parallel bcftools query -l \" ${ VCF } \" | parallel -j20 get_sample_vcf {} echo -e \"Job done\\nCheck log under ${ OUTDIR } /logs/ for errors, if any.\"","title":"Sample-wise VCFs"},{"location":"methods/S06_smgs/","text":"SMG analysis in canine gliomas (Figure 1A, 1C, 2A) with paired tumor-normal samples (n=67) was performed using dNdS (Martincorena et al., 2017) and MuSiC2 (version 0.2) (Dees et al., 2012). We excluded tumor-only cases for being conservative in SMG analysis and minimize false-positives. Also, MuSiC2 required matched normal tissue required matched normal tissue for SMG analysis. Detailed output from both methods are in Table S2. dnds \u00b6 Please refer to dnds github issue #9 for details on how to run dnds for canine genome, CanFam3.1 , specifically this comment by I\u00f1igo Martinkorena and related conversation. MuSiC2 \u00b6 Calculate ROI-wise coverage: Get coverage over regions of interest (ROI), i.e., protein-coding gene regions in canonical canine chromosomes. music2 bmr calc-covg-helper \\ --normal-tumor-bam-pair = \"donor1 /path/to/donor1_normal.bam /path/to/donor1_tumor.bam\" \\ --roi-file = CanFam3_1_85_new_RNA_rois_pcg_canonicalchrs.bed \\ --reference-sequence = DogWGSReference/CanFam3_1.fa \\ --output-file = mutsigs/music2/s1_calc_covg/roi_covgs/donor1.covg \\ --normal-min-depth = 6 \\ --tumor-min-depth = 8 \\ --min-mapq = 20 \\ --bp-class-types = AT,CpG,CG Calculate gene-level coverage music2 bmr calc-covg \\ --bam-list music2/ingest/bam_list.tsv \\ --output-dir mutsigs/music2/s1_calc_covg/ \\ --reference-sequence DogWGSReference/CanFam3_1.fa \\ --roi-file CanFam3_1_85_new_RNA_rois_pcg_canonicalchrs.bed \\ --tumor-min-depth 8 \\ --normal-min-depth 6 Calculate BMR music2 bmr calc-bmr \\ --bam-list music2/ingest/bam_list.tsv \\ --maf-file \" $M2MAF \" \\ --output-dir mutsigs/music2/s1_calc_covg/ \\ --reference-sequence DogWGSReference/CanFam3_1.fa \\ --roi-file CanFam3_1_85_new_RNA_rois_pcg_canonicalchrs.bed \\ --genes-to-ignore ENSCAFG00000002057,ENSCAFG00000011212 \\ --bmr-groups 2 \\ --show-skipped \\ --bp-class-types AT,CpG,CG Infer MuSiC2 SMGs music2 smg \\ --gene-mr-file = gene_mrs \\ --output-file = smgs \\ --max-fdr = 0 .1 \\ --processors = 20","title":"Significantly Mutated Genes"},{"location":"methods/S06_smgs/#dnds","text":"Please refer to dnds github issue #9 for details on how to run dnds for canine genome, CanFam3.1 , specifically this comment by I\u00f1igo Martinkorena and related conversation.","title":"dnds"},{"location":"methods/S06_smgs/#music2","text":"Calculate ROI-wise coverage: Get coverage over regions of interest (ROI), i.e., protein-coding gene regions in canonical canine chromosomes. music2 bmr calc-covg-helper \\ --normal-tumor-bam-pair = \"donor1 /path/to/donor1_normal.bam /path/to/donor1_tumor.bam\" \\ --roi-file = CanFam3_1_85_new_RNA_rois_pcg_canonicalchrs.bed \\ --reference-sequence = DogWGSReference/CanFam3_1.fa \\ --output-file = mutsigs/music2/s1_calc_covg/roi_covgs/donor1.covg \\ --normal-min-depth = 6 \\ --tumor-min-depth = 8 \\ --min-mapq = 20 \\ --bp-class-types = AT,CpG,CG Calculate gene-level coverage music2 bmr calc-covg \\ --bam-list music2/ingest/bam_list.tsv \\ --output-dir mutsigs/music2/s1_calc_covg/ \\ --reference-sequence DogWGSReference/CanFam3_1.fa \\ --roi-file CanFam3_1_85_new_RNA_rois_pcg_canonicalchrs.bed \\ --tumor-min-depth 8 \\ --normal-min-depth 6 Calculate BMR music2 bmr calc-bmr \\ --bam-list music2/ingest/bam_list.tsv \\ --maf-file \" $M2MAF \" \\ --output-dir mutsigs/music2/s1_calc_covg/ \\ --reference-sequence DogWGSReference/CanFam3_1.fa \\ --roi-file CanFam3_1_85_new_RNA_rois_pcg_canonicalchrs.bed \\ --genes-to-ignore ENSCAFG00000002057,ENSCAFG00000011212 \\ --bmr-groups 2 \\ --show-skipped \\ --bp-class-types AT,CpG,CG Infer MuSiC2 SMGs music2 smg \\ --gene-mr-file = gene_mrs \\ --output-file = smgs \\ --max-fdr = 0 .1 \\ --processors = 20","title":"MuSiC2"},{"location":"methods/S07_hallmarks/","text":"Cancer hallmarks were defined according to published ten hallmarks (Hanahan and Weinberg, 2011) and one additional hallmark, i.e. epigenetic (Imielinski et al., 2012). A pool of 268 known glioma (Ceccarelli et al., 2016; Mackay et al., 2017) and pan-cancer driver genes (Gr\u00f6bner et al., 2018; Bailey et al. 2018) were mapped to hallmarks following a previously published computer-assisted manual curation method (Table S4) (Iorio et al., 2018). Based on WHO molecular classification of brain tumors, somatic SNV and copy-number data from patients with human adult gliomas (AG) (Ceccarelli et al., 2016) were stratified into IDHwt (n=373), IDHmut-codel (n=169) and IDHmut-noncodel (n=268) subgroups while corresponding data from patients with human pediatric glioma (PG) (Mackay et al., 2017) were subgrouped based on mutations in Histone H3 gene, namely H3mut (n=200) and high-grade H3wt (n=126). For canine patients with glioma (CG), we used somatic mutations and copy-number calls from 67 cases with paired tumor-normal samples. For each of the six cohorts coding mutations were mapped to eleven hallmarks and coverage adjusted relative proportions of patients harboring an alteration in a given hallmark were calculated. For comparisons between cohorts a two-sided Fisher\u2019s exact test was applied (Table S4).","title":"Cancer Hallmarks"},{"location":"methods/S09_mutation_rate/","text":"Somatic mutations (SNVs and Indels) rate was estimated within coding genes and adjusted based on relative per-base coverage with minimum coverage of 30X in coding regions (Figure 1D). Coding mutation rates for human pediatric (n=961) and adult cancers (n=3,800, includes 811 adult gliomas) were taken from published studies (Ceccarelli et al., 2016; Gr\u00f6bner et al., 2018; Ma et al., 2018a).","title":"Somatic Mutation Rate"},{"location":"methods/S10_SCNA/","text":"Segmentation and Significant Peaks \u00b6 Somatic copy-numbers were called for paired tumor-normal cases (n=67) using HMMCopy tool (version 1.22.0) using author\u2019s recommendations. In brief, GC counts and mappability files for CanFam3.1 genome were generated with 1000 bp window size. Read counts for each of tumor and normal bam files were generated using 1000 bp window size. Resulting count, mappability and count files were feed into HMMCopy algorithm ( http://bioconductor.org/packages/release/bioc/html/HMMcopy.html ) and segmentations were called using Viterbi algorithm. Segmented copy number calls were used to generate Integrated Genome Viewer (IGV) copy-number plots and GISTIC2 (version 2.0.22) based somatic copy number significance (Mermel et al., 2011), including calling gene-level deep deletions, loss-of-heterozygosity (LOH), and amplifications (Figure 2A) as well as inferring aneuploidy metrics (Figure 2B, 2C, 2D). Segmented copy number for pediatric gliomas (n=53) were called by using cloud-based TitanCNA workflow ( https://dxapp.verhaaklab.com/dnanexus_ngsapp ). Segmented copy number for adult gliomas were derived from SNP6 based platform from the TCGA Broad Firehose platform (version stddata__2016_01_28) with following download urls: http://gdac.broadinstitute.org/runs/stddata__2016_01_28/data/GBM/20160128/gdac.broadinstitute.org_GBM.Merge_snp__genome_wide_snp_6__broad_mit_edu__Level_3__segmented_scna_minus_germline_cnv_hg19__seg.Level_3.2016012800.0.0.tar.gz http://gdac.broadinstitute.org/runs/stddata__2016_01_28/data/LGG/20160128/gdac.broadinstitute.org_LGG.Merge_snp__genome_wide_snp_6__broad_mit_edu__Level_3__segmented_scna_minus_germline_cnv_hg19__seg.Level_3.2016012800.0.0.tar.gz Only primary tumor cases from TCGA GBM (n=577) and TCGA LGG (n=513) cohort were used for downstream analyses, i.e., pathway analysis (Figure 1C) and aneuploidy metrics (Figure 2B, 2C, 2D). Allele-specific SCNA \u00b6 We derived allele-specific copy numbers and copy-number based clonality inference (including purity and ploidy estimates) using TitanCNA algorithm (version 1.19.1) (Ha et al., 2014). Snakemake (version 5.2.1) based workflow(Koster and Rahmann, 2018) was implemented using default arguments and genome-specific germline dbSNP resource for WGS paired tumor-normal samples from 67 canine patients. Detailed parameters used in Snakemake workflow are under code/titancna directory. For pediatric gliomas (n=53) and adult gbms with WGS data (n=23), allele-specific copy-number calls were used from TitanCNA workflow. Allele-specific copy-numbers were used for mutational signature and molecular timing analysis (Figure 3).","title":"Somatic Copy Number Aberrations"},{"location":"methods/S10_SCNA/#segmentation-and-significant-peaks","text":"Somatic copy-numbers were called for paired tumor-normal cases (n=67) using HMMCopy tool (version 1.22.0) using author\u2019s recommendations. In brief, GC counts and mappability files for CanFam3.1 genome were generated with 1000 bp window size. Read counts for each of tumor and normal bam files were generated using 1000 bp window size. Resulting count, mappability and count files were feed into HMMCopy algorithm ( http://bioconductor.org/packages/release/bioc/html/HMMcopy.html ) and segmentations were called using Viterbi algorithm. Segmented copy number calls were used to generate Integrated Genome Viewer (IGV) copy-number plots and GISTIC2 (version 2.0.22) based somatic copy number significance (Mermel et al., 2011), including calling gene-level deep deletions, loss-of-heterozygosity (LOH), and amplifications (Figure 2A) as well as inferring aneuploidy metrics (Figure 2B, 2C, 2D). Segmented copy number for pediatric gliomas (n=53) were called by using cloud-based TitanCNA workflow ( https://dxapp.verhaaklab.com/dnanexus_ngsapp ). Segmented copy number for adult gliomas were derived from SNP6 based platform from the TCGA Broad Firehose platform (version stddata__2016_01_28) with following download urls: http://gdac.broadinstitute.org/runs/stddata__2016_01_28/data/GBM/20160128/gdac.broadinstitute.org_GBM.Merge_snp__genome_wide_snp_6__broad_mit_edu__Level_3__segmented_scna_minus_germline_cnv_hg19__seg.Level_3.2016012800.0.0.tar.gz http://gdac.broadinstitute.org/runs/stddata__2016_01_28/data/LGG/20160128/gdac.broadinstitute.org_LGG.Merge_snp__genome_wide_snp_6__broad_mit_edu__Level_3__segmented_scna_minus_germline_cnv_hg19__seg.Level_3.2016012800.0.0.tar.gz Only primary tumor cases from TCGA GBM (n=577) and TCGA LGG (n=513) cohort were used for downstream analyses, i.e., pathway analysis (Figure 1C) and aneuploidy metrics (Figure 2B, 2C, 2D).","title":"Segmentation and Significant Peaks"},{"location":"methods/S10_SCNA/#allele-specific-scna","text":"We derived allele-specific copy numbers and copy-number based clonality inference (including purity and ploidy estimates) using TitanCNA algorithm (version 1.19.1) (Ha et al., 2014). Snakemake (version 5.2.1) based workflow(Koster and Rahmann, 2018) was implemented using default arguments and genome-specific germline dbSNP resource for WGS paired tumor-normal samples from 67 canine patients. Detailed parameters used in Snakemake workflow are under code/titancna directory. For pediatric gliomas (n=53) and adult gbms with WGS data (n=23), allele-specific copy-number calls were used from TitanCNA workflow. Allele-specific copy-numbers were used for mutational signature and molecular timing analysis (Figure 3).","title":"Allele-specific SCNA"},{"location":"methods/S11_aneuploidy/","text":"The simplest metric of aneuploidy was computed by taking the size of all non-neutral segments divided by the size of all segments. The resulting aneuploidy value indicates the proportion of the segmented genome that is non-diploid. In parallel, an arm-level aneuploidy score modeled after a previously described method was computed (Taylor et al., 2018). Briefly, adjacent segments with identical arm-level calls (-1, 0 or 1) were merged into a single segment with a single call. For each merged/reduced segment, the proportion of the chromosome arm it spans was calculated. Segments spanning greater than 80% of the arm length resulted in a call of either -1 (loss), 0 (neutral) or +1 (gain) to the entire arm, or NA if no contiguous segment spanned at least 80% of the arm's length. For each sample the number of arms with a non-neutral event was finally counted. The resulting aneuploidy score is a positive integer with a minimum value of 0 (no chromosomal arm-level events detected) and a maximum value of 38 (total number of autosomal chromosome arms \u2013 given all of canine chromosomes are either acrocentric or telocentric). Clustering based on shared syntenic regions \u00b6 Shared syntenic regions between CanFam3.1 and hg19 reference genome were downloaded from Ensembl BioMart (version 94) database using orthologous mapped Ensembl gene ids. Arm-level synteny was based on arm-level aneuploidy scores of shared syntenic regions in the respective, canine and human genomes. Hierarchical clustering of proportion of patients per molecular subtype having syntenic arm-level aneuploidy was then carried out for each of canine, human pediatric and adult cohort (Figure 2C).","title":"Aneuploidy Metrics"},{"location":"methods/S11_aneuploidy/#clustering-based-on-shared-syntenic-regions","text":"Shared syntenic regions between CanFam3.1 and hg19 reference genome were downloaded from Ensembl BioMart (version 94) database using orthologous mapped Ensembl gene ids. Arm-level synteny was based on arm-level aneuploidy scores of shared syntenic regions in the respective, canine and human genomes. Hierarchical clustering of proportion of patients per molecular subtype having syntenic arm-level aneuploidy was then carried out for each of canine, human pediatric and adult cohort (Figure 2C).","title":"Clustering based on shared syntenic regions"},{"location":"methods/S12_ith/","text":"We estimated patient-level ITH based on whole-genome derived subclonal structure and number of somatic variants in each of these subclones. Subclonal structure and cellular prevalence or cancer cell fraction of each tumor subclone (and underlying somatic variants) was derived using TITAN allele-specific copy number calls. Since accuracy of inferred subclonal structure depends largely on sequencing read depth and number of somatic variants per inferred subclone, we limited estimation of subclonal structure for maximum five subclones per patient given a minimum sequencing read depth of 30X for whole genome data we had across all three cohorts. Shannon entropy was then calculated using entropy function in the R package: entropy 1 by taking number of somatic variants per subclone per patient as a vector. A resulting Shannon entropy value was used to plot figures along with cancer cell fraction and number of clones derived per patient. We acknowledge that our estimation of ITH and resolving subclonal structure can be improved with higher depth of sequencing (100X or more) to detect subclonal structures (number of clones) (Deshwar et al., 2015). Jean Hausser and Korbinian Strimmer. Entropy Inference and the James-Stein Estimator, with Application to Nonlinear Gene Association Networks. J. Mach. Learn. Res.* 10: 1469-1484 (2009) . \u21a9","title":"Intratumor Heterogeneity"},{"location":"methods/S13_mut_sigs/","text":"Mutational signature analysis was performed in two-parts. De-novo signatures \u00b6 First, de-novo signatures (Figure 3B) were constructed for canine (n=81), human pediatric (n=53) and adult cohort (n=23) using somatic snvs from whole-genome data. Signatures were constructed using non-negative matrix factorization (nmf R package, version 0.21.0) with brunet approach and 100 iterations with expected range of signatures between 2 to 10. Optimal signatures were then selected using nmfEstimateRank function to match number of de-novo signatures (clusters) \u2013 1 where inflection point for cophenetic correlation coefficient was observed. Accordingly, three de-novo signatures were found in canine and human pediatric gliomas while five in adult glioblastoma cohort. Known human signatures \u00b6 In the second part, known human mutational signatures from COSMIC (v2, n=30) and published pediatric cancer signature from two studies, T1 to T11 (Mansour et al., 2018) and P1 (Gr\u00f6bner et al., 2018) were pooled together and used to deconvolute (MutationalPattern R package, version 1.6.2) mutational trinucleotide context (n=96) from somatic snvs in each of three cohorts. Somatic ultra-hypermutation cases from pediatric (n=3) and adult cohort (n=1) were excluded from signature analysis. Cosine similarities of known signatures with de-novo signatures was then calculated and clustered using hierarchical clustering (Figure 3B). Absolute and relative contribution of known signatures per sample was then quantified using fit_to_signatures function which finds the linear combination of signatures that closely resembles 96 context based mutational matrix by solving the nonnegative least-squares constraints problem. We then selected top contributing signatures per cohort based on signatures which contributed per sample to higher than 3 rd quartile of median value of each signature\u2019s contribution (rowMedian) per cohort (Figure S3A). Top contributing signatures were further calculated using outlier profling on canine patients showing highest mutational load (>3 rd quartile of median coding mutation rate per megabase) and plotted in Figure 3A. Outlier sample detection was done using car::outlierTest function in R to label true outliers from entire cohort (2 cases) while correcting for confounding effects due to type of tissue archival (snap-frozen vs ffpe) and analysis type (tumor-matched normal versus tumor-only somatic variant calling). This was followed by second run of outlier by first excluding true outliers (2 cases), and then labelling outliers (six cases) based on chi-squared statistics using outliers::scores function in R. Signatures contributing to driver mutations (Figure 3C) were calculated based on first getting relative proportion of trinucleotide context per snv and then finding known signatures with maximum value for the same trinucleotide context. Known signatures were combined to a single group where they are shown in literature as potential underlying process, e.g., aging group is associated with COSMIC signature 1 and 5, and show significant cosine similarity (> 0.9) with pediatric signatures T1 and T4, respectively. Table S5 provides mapping between signature and known/proposed mechanisms, if any.","title":"Mutational Signatures"},{"location":"methods/S13_mut_sigs/#de-novo-signatures","text":"First, de-novo signatures (Figure 3B) were constructed for canine (n=81), human pediatric (n=53) and adult cohort (n=23) using somatic snvs from whole-genome data. Signatures were constructed using non-negative matrix factorization (nmf R package, version 0.21.0) with brunet approach and 100 iterations with expected range of signatures between 2 to 10. Optimal signatures were then selected using nmfEstimateRank function to match number of de-novo signatures (clusters) \u2013 1 where inflection point for cophenetic correlation coefficient was observed. Accordingly, three de-novo signatures were found in canine and human pediatric gliomas while five in adult glioblastoma cohort.","title":"De-novo signatures"},{"location":"methods/S13_mut_sigs/#known-human-signatures","text":"In the second part, known human mutational signatures from COSMIC (v2, n=30) and published pediatric cancer signature from two studies, T1 to T11 (Mansour et al., 2018) and P1 (Gr\u00f6bner et al., 2018) were pooled together and used to deconvolute (MutationalPattern R package, version 1.6.2) mutational trinucleotide context (n=96) from somatic snvs in each of three cohorts. Somatic ultra-hypermutation cases from pediatric (n=3) and adult cohort (n=1) were excluded from signature analysis. Cosine similarities of known signatures with de-novo signatures was then calculated and clustered using hierarchical clustering (Figure 3B). Absolute and relative contribution of known signatures per sample was then quantified using fit_to_signatures function which finds the linear combination of signatures that closely resembles 96 context based mutational matrix by solving the nonnegative least-squares constraints problem. We then selected top contributing signatures per cohort based on signatures which contributed per sample to higher than 3 rd quartile of median value of each signature\u2019s contribution (rowMedian) per cohort (Figure S3A). Top contributing signatures were further calculated using outlier profling on canine patients showing highest mutational load (>3 rd quartile of median coding mutation rate per megabase) and plotted in Figure 3A. Outlier sample detection was done using car::outlierTest function in R to label true outliers from entire cohort (2 cases) while correcting for confounding effects due to type of tissue archival (snap-frozen vs ffpe) and analysis type (tumor-matched normal versus tumor-only somatic variant calling). This was followed by second run of outlier by first excluding true outliers (2 cases), and then labelling outliers (six cases) based on chi-squared statistics using outliers::scores function in R. Signatures contributing to driver mutations (Figure 3C) were calculated based on first getting relative proportion of trinucleotide context per snv and then finding known signatures with maximum value for the same trinucleotide context. Known signatures were combined to a single group where they are shown in literature as potential underlying process, e.g., aging group is associated with COSMIC signature 1 and 5, and show significant cosine similarity (> 0.9) with pediatric signatures T1 and T4, respectively. Table S5 provides mapping between signature and known/proposed mechanisms, if any.","title":"Known human signatures"},{"location":"methods/S14_mut_timing/","text":"Probabilistic estimation of relative timing of driver mutations (among 73 observed somatic snvs in cancer driver genes) was based on existing methods (Gerstung et al., 2017; Jolly and Van Loo, 2018) with several steps carried out using Palimpsest R package (version 1.0.0; FunGeST/Palimpsest ) (Shinde et al., 2018) and custom R scripts based on published approach(McGranahan et al., 2015): First step involved categorizing somatic drivers into clonal vs subclonal events using estimated cancer cell fraction (CCF) which is estimated fraction of cancer cells with a somatic snv. CCF per somatic snv was a product of variant allelic fraction (VAF) of a somatic snv, adjusted by local copy number of gene locus and whole tumor sample (ploidy) as well as purity estimate (tumor cell content) inferred from TitanCNA algorithm (Detailed under copy number estimation section above). A clonal (early) vs subclonal (late) mutation was then classified based on upper boundary of CCF was above 0.95 (clonal) or not (subclonal). Second, we timed copy number gain and copy-neutral LOH regions based on VAF of somatic snvs in these copy regions, i.e., early mutations prior to copy gain will have higher VAF relative to VAF of late mutations after copy gain. Third, we ordered mutations in four sequential categories: early clonal, early subclonal, late clonal, and late subclonal. We note here that early subclonal and late clonal categories are result of underlying parallel and/or convergent evolution of multiple clones (Venkatesan and Swanton, 2016) and/or a technical limitation (given ~60X depth of merged bam files and lack of spatial sequencing data) in resolving polyclonal structure of a tumor sample (Deshwar et al., 2015). We then tally frequency of each of these four categories per somatic driver mutation and get the average frequency of each category per driver mutation at cohort (canine, pediatric, adult) level. These average frequencies are converted to winning tables, similar to sports statistics where each driver mutation competes with remaining driver mutations with winning being an early somatic event based on order of events using clonality (Jolly and Van Loo, 2018) (step 3). Finally, a winning table is then passed to Bradley-Terry model ( BradleyTerryScalable R package, version 0.1.0.9000; https://cran.r-project.org/web/packages/BradleyTerryScalable/vignettes/BradleyTerryScalable.html ) to estimate winning probability (driver event being an early event) based on a Bayesian maximum a posteriori probability (MAP) estimate. Resulting winning probability per driver mutation is subtracted from 1 to plot multiple density plots (ggridges R package, version: 0.5.1.9000) with X-axis now showing a probability of event being a late event (Figure 3D). We note that density plots are based on kernel density estimates and thus, may extend their tails (probability distribution) beyond 1 or less than zero ( https://serialmentor.com/dataviz/histograms-density-plots.html ).","title":"Molecular Timing of Somatic Drivers"},{"location":"methods/S15_class_predict_methy/","text":"To compare the methylation patterns of human and canine glioma, the LIBLINEAR library was used to fit an L2-regularized logistic regression classifier. Model training and validation was performed on the human glioma samples and normal controls in the GSE109381 dataset (Capper et al., 2018), with the methylation status of CpGs located in regions of the human genome orthologous to canine CpG islands used to predict DNA methylation-based subtypes of glioma. The methylation categories designated as regression outcome variables were derived from the World Health Organization classification of gliomas: IDH-wildtype adult glioma, IDH-mutant, 1p/19q-intact adult glioma, IDH-mutant, 1p/19q-codeleted adult glioma, adult normal control, pediatric glioma, and pediatric normal control. After model fitting, the logistic regression classifier was applied to the canine samples, using the \uf062-values of CpGs orthologous to the selected 11,495 Illumina 450K probes as input data. For classifier CpG sites in the canine samples with no methylation observations, \\(\\beta\\) -values were predicted using the DNA module of the DeepCpG algorithm, a deep learning algorithm that predicts methylation state based on local DNA sequence context (Angermueller et al., 2017). The logistic regression classifier outputs the probability that a sample matches a given methylation category. Category probabilities were calculated for the canine samples, and these probabilities were compared with sample age, anatomical location, tumor grade, tumor purity, and mutation rate (Figure 4).","title":"Class Prediction using methylation classifier"},{"location":"methods/S16_expression_immune/","text":"Immunohistochemistry \u00b6 Hematoxylin & Eosin staining was used to classify glioma grade and lineage. The immunohistochemistry panel included those antibodies that have been documented to work in canine tissues and include myeloid microglia/macrophages (IBA1), monocytes (CD14) and their M2 skew subtype (CD163), and lymphoid T cells (CD3) and B cells (CD79a). Slides with 5um sections, were deparaffinized and rehydrated in a dry incubator (60\u00b0C for 1 hour), xylene, and histological grade ethanol. Antigen retrieval was performed using citrate buffer and a pressure cooker at 120\u00b0C23 for 12 minutes. Quenching for endogenous peroxidase was performed with 3% H2O2 for 15 minutes at room temperature. Non-specific binding was minimized using ready-to-use protein blocker (Dako) applied for 15 minutes before the application of the primary antibody overnight at 4\u00b0C. All the washing was done using 1x T-PBS buffer mixed with 0.1% Tween 20. The biotinylated secondary antibody was applied for 30 minutes at room temperature followed by three washes with buffer for 5 minutes each. Color development was performed using the DAKO DAB kit and color change was monitored until an appropriate detectable level was achieved (10-60 sec depending on the antibody). Slides were counterstained with hematoxylin (25 seconds) and bluing buffer, then rehydrated and cover-slipped with long lasting mounting solution. The immunohistochemistry quantification were done blindly relative to the tumor pathology. Scanning and tissue segmentation \u00b6 Scanning and analysis were performed using the PerkinElmer Vectra Automated Quantitative Pathology Imaging System and the inForm Cell Analysis software (ver 2.4). Slides were scanned twice on low- and high-power fields as follows: the first scan was of the whole slide on low power field (10x) for manual tissue segmentation to identify three tumor regions/categories as necrotic center, tumor and invasive edge under the neuropathologist\u2019s supervision/direction. For each region, every fourth field was imaged (25%) on high-power field (20x) and resulted in 21 to 274 fields per slide, which varies according to the size of the tissue and presence or absence of necrosis. For the training set, heterogeneous fields were randomly selected to include tissue, non-tissue and damaged areas. Hematoxylin and DAB was used to identify the nuclei. Positive and negative cells were distinguished visually and three optical densities (OD) thresholds were set accordingly. The thresholds allowed 4-bin (0 = negative, +1 = weak positive, +2 = intermediate, +3 = strong positive) sorting of cells depending on the positivity and its intensity. The intermediate positivity threshold was calculated as the midpoint after setting the lower and higher threshold. The algorithm of the training set was applied for all the high-power fields captured. The results were inspected and the nonspecific and defective fields were removed before compiling the dataset. The same process was applied for all seven markers. CIBERSORT based expression analysis \u00b6 Processed RNA-seq expression matrices from canine (n=40; 25 HGG, 14 LGG, 1 unknown grade), adult (n=703; 529 LGG, 174 GBM), and pediatric glioma (n=92; 42 LGG, 50 HGG) were each run as separate jobs into the CIBERSORT webserver ( https://cibersort.stanford.edu ) and processed in relative mode using the following parameters: Signature Genes: LM22 CIBERSORT default, Permutations run: 100, Quantile normalization disabled (Newman et al., 2015). The resulting cellular fraction tables were then collapsed from 22 cell types into 11 based on lineage, using groupings from a prior publication (Gentles et al., 2015).","title":"Immune Microenvironment Analysis"},{"location":"methods/S16_expression_immune/#immunohistochemistry","text":"Hematoxylin & Eosin staining was used to classify glioma grade and lineage. The immunohistochemistry panel included those antibodies that have been documented to work in canine tissues and include myeloid microglia/macrophages (IBA1), monocytes (CD14) and their M2 skew subtype (CD163), and lymphoid T cells (CD3) and B cells (CD79a). Slides with 5um sections, were deparaffinized and rehydrated in a dry incubator (60\u00b0C for 1 hour), xylene, and histological grade ethanol. Antigen retrieval was performed using citrate buffer and a pressure cooker at 120\u00b0C23 for 12 minutes. Quenching for endogenous peroxidase was performed with 3% H2O2 for 15 minutes at room temperature. Non-specific binding was minimized using ready-to-use protein blocker (Dako) applied for 15 minutes before the application of the primary antibody overnight at 4\u00b0C. All the washing was done using 1x T-PBS buffer mixed with 0.1% Tween 20. The biotinylated secondary antibody was applied for 30 minutes at room temperature followed by three washes with buffer for 5 minutes each. Color development was performed using the DAKO DAB kit and color change was monitored until an appropriate detectable level was achieved (10-60 sec depending on the antibody). Slides were counterstained with hematoxylin (25 seconds) and bluing buffer, then rehydrated and cover-slipped with long lasting mounting solution. The immunohistochemistry quantification were done blindly relative to the tumor pathology.","title":"Immunohistochemistry"},{"location":"methods/S16_expression_immune/#scanning-and-tissue-segmentation","text":"Scanning and analysis were performed using the PerkinElmer Vectra Automated Quantitative Pathology Imaging System and the inForm Cell Analysis software (ver 2.4). Slides were scanned twice on low- and high-power fields as follows: the first scan was of the whole slide on low power field (10x) for manual tissue segmentation to identify three tumor regions/categories as necrotic center, tumor and invasive edge under the neuropathologist\u2019s supervision/direction. For each region, every fourth field was imaged (25%) on high-power field (20x) and resulted in 21 to 274 fields per slide, which varies according to the size of the tissue and presence or absence of necrosis. For the training set, heterogeneous fields were randomly selected to include tissue, non-tissue and damaged areas. Hematoxylin and DAB was used to identify the nuclei. Positive and negative cells were distinguished visually and three optical densities (OD) thresholds were set accordingly. The thresholds allowed 4-bin (0 = negative, +1 = weak positive, +2 = intermediate, +3 = strong positive) sorting of cells depending on the positivity and its intensity. The intermediate positivity threshold was calculated as the midpoint after setting the lower and higher threshold. The algorithm of the training set was applied for all the high-power fields captured. The results were inspected and the nonspecific and defective fields were removed before compiling the dataset. The same process was applied for all seven markers.","title":"Scanning and tissue segmentation"},{"location":"methods/S16_expression_immune/#cibersort-based-expression-analysis","text":"Processed RNA-seq expression matrices from canine (n=40; 25 HGG, 14 LGG, 1 unknown grade), adult (n=703; 529 LGG, 174 GBM), and pediatric glioma (n=92; 42 LGG, 50 HGG) were each run as separate jobs into the CIBERSORT webserver ( https://cibersort.stanford.edu ) and processed in relative mode using the following parameters: Signature Genes: LM22 CIBERSORT default, Permutations run: 100, Quantile normalization disabled (Newman et al., 2015). The resulting cellular fraction tables were then collapsed from 22 cell types into 11 based on lineage, using groupings from a prior publication (Gentles et al., 2015).","title":"CIBERSORT based expression analysis"},{"location":"run_code/","text":"To reproduce figures in Amin et al. Cancer Cell 2020, please clone code repository , and then start a RStudio project: run_code.Rproj under /docs/run_code/ . Install required R packages , open file: run_all.Rmd , and run knit markdown from the menu, preferably with html output. Figures will be saved as individual pdf files in run_code directory. Runtime: ~10 minutes (Macbook Pro)","title":"How-To"},{"location":"run_code/run_all/","text":"Comparative molecular life history of spontaneous canine and human gliomas \u00b6 Amin et al., Comparative Molecular Life History of Spontaneous Canine and Human Gliomas, Cancer Cell (2020). DOI: 10.1016/j.ccell.2020.01.004 Feb 10, 2020. Set Env \u00b6 library ( knitr ) opts_chunk $ set ( comment = NA , fig.width = 18 , fig.height = 12 , message = TRUE , cache = FALSE , echo = FALSE ) Load R packages \u00b6 Warning: replacing previous import 'NMF::entropy' by 'lsa::entropy' when loading 'Palimpsest' Warning: replacing previous import 'NMF::dispersion' by 'plotrix::dispersion' when loading 'Palimpsest' Warning: replacing previous import 'gplots::plotCI' by 'plotrix::plotCI' when loading 'Palimpsest' Load R objects \u00b6 Work directory is /Users/samin1/Dropbox (Personal)/acad/scripts/HOURGLASS/cgp_keystone/canineglioma/docs/run_code Loading base objects... List objects [1] \"ALL_HALLMARK_v1\" [2] \"cancer_genes_maftools\" [3] \"cancer_signatures\" [4] \"CG_all\" [5] \"cgp_aneuploidy_metrics_master\" [6] \"cgp_cibersort\" [7] \"cgp_info\" [8] \"cgp_maftools_gistic_matched\" [9] \"cgp_maftools_gistic_methy\" [10] \"cgp_maftools_gistic_n81\" [11] \"cgp_RRBS.noNormals_class_prediction\" [12] \"cgp_RRBS.noNormals_sample_info\" [13] \"cgp_suppl_sample_info_master\" [14] \"driver_sigs_groups\" [15] \"fig5b_dat\" [16] \"fit_res_hm\" [17] \"fit_res_nonhm\" [18] \"HALLMARK\" [19] \"hm_nonhm_topsigs_tbl\" [20] \"instability_sigs_df\" [21] \"maf_nogistic\" [22] \"mat_aneuploidy_summary_mostvar_cgAll\" [23] \"merged_ag_pg_cg_denovo_sig\" [24] \"merged_anp_scores\" [25] \"merged_ccf_vaf_df\" [26] \"mut_mat\" [27] \"mutrate_table\" [28] \"ped_cibersort\" [29] \"tcga_cibersort\" [30] \"tcga_info\" [31] \"trimmed_ag_vcf\" [32] \"trimmed_cg_vcf\" [33] \"trimmed_pg_vcf\" [34] \"updated_merged_entropy_df_ridges\" [35] \"win_table_ag_vcf\" [36] \"win_table_cg_vcf\" [37] \"win_table_pg_vcf\" Fig 1A \u00b6 Required metadata \u00b6 Genes to plot Based on significantly mutated genes analysis . See also Table S2. Sample and Variant Annotations Plot Fig 1A \u00b6 Somatic mutational lanscape of glioma driver genes. Based on significantly mutated genes analysis . font family 'Arial' not found If you get an error, font family 'Arial' not found in PostScript font database , either remove fonts argument from pdf or import system fonts using extrafont R package. See documentation by Gavin Simpson for details. Run extrafont::loadfonts() as detailed in Start Here . quartz_off_screen 2 Suppl Fig 1B \u00b6 Somatic mutational lanscape of COSMIC cancer genes. quartz_off_screen 2 Suppl Fig 1F \u00b6 Somatic mutational lanscape, including copy-number aberrations of COSMIC cancer genes. This figure also contains somatic copy-number data which is detailed under Fig 2A . quartz_off_screen 2 Fig 1B \u00b6 Alternate code using lollipopPlot function in R package, maftools pos conv count Variant_Classification 1: 88 R88Q 1 Missense_Mutation 2: 542 E542K 1 Missense_Mutation 3: 545 E545K 1 Missense_Mutation 4: 1047 H1047R 7 Missense_Mutation 5: 1047 H1047L 1 Missense_Mutation pos conv count Variant_Classification 1: 132 R132C 3 Missense_Mutation 6 transcripts available. Use arguments refSeqID or proteinID to manually specify tx name. HGNC refseq.ID protein.ID aa.length 1: SPOP NM_001007227 NP_001007228 374 2: SPOP NM_001007228 NP_001007229 374 3: SPOP NM_001007229 NP_001007230 374 4: SPOP NM_001007230 NP_001007231 374 5: SPOP NM_001007226 NP_001007227 374 6: SPOP NM_003563 NP_003554 374 Using longer transcript NM_001007227 for now. pos conv count Variant_Classification 1: 94 P94R 2 Missense_Mutation quartz_off_screen 2 Fig 1C \u00b6 Cancer Hallmarks enrichment across canine, human pediatric and adult gliomas. Genes to hallmark mapping was primarily derived from SLAPenrich R package. See also relevant methods for details. Joining, by = \"hallmark\" Warning: Column `hallmark` joining character vector and factor, coercing into character vector Similar to CG_HALLMARK , enrichment per hallmark tables were created for molecular subtypes across human cancers, and merged in the master table, ALL_HALLMARK_v1 . Fig 1C \u00b6 Subset of hallmarks as a main figure 1C. quartz_off_screen 2 Suppl Fig 1C \u00b6 Visualize all hallmarks. quartz_off_screen 2 Fig 1D \u00b6 Plot CNS tumors. Suppl Fig 1D \u00b6 Plot pancancer tumors unexpected , error Running code by copy-paste may result in error related to R syntax, e.g., Error: unexpected ',' in \" . If so, try to copy code first in text editor or RStudio app with lint feature. Please report bugs by submitting a GitHub issue. Suppl Fig 1E \u00b6 Comparing mutational burden across molecular subtypes. Warning in if (fill %in% names(data) & is.null(add.params$fill)) add.params$fill <- fill: the condition has length > 1 and only the first element will be used F2A \u00b6 Somatic copy-number aberrations (SCNA) lanscape of glioma driver genes. Please run required code from Fig 1A prior to running code from this page. quartz_off_screen 2 Somatic copy numbers were classified as follows based on GISTIC2 values. GISTIC2 value Estimated copy number Classification \\(< -1.29\\) -2 Deep deletion \\(-1.29 <> -.65\\) -1 Loss of Heterozygosity (LOH) \\(-.65 <> 2.0\\) 0-1 Copy-neutral or low-level amplification \\(>2.0\\) 2 High-level amplification Fig 2B \u00b6 Comparative aneuploidy burden. Related code is available at the GLASS consortium marker paper code repository , namely, recapseg_postgres.sql and taylor_aneuploidy.sql . Warning in if (fill %in% names(data) & is.null(add.params$fill)) add.params$fill <- fill: the condition has length > 1 and only the first element will be used notch went outside hinges. Try setting notch=FALSE. notch went outside hinges. Try setting notch=FALSE. Suppl Fig 2E \u00b6 Aneuploidy vs. somatic mutation burden. Fig 2C \u00b6 mat_aneuploidy_summary_mostvar_cgAll matrix contains proportion of patients per cohort with arm-level aneuploidy, and was based on arm-level aneuploidy metrics . Related code is available at the GLASS consortium marker paper code repository , namely, recapseg_postgres.sql and taylor_aneuploidy.sql . Fig 2D \u00b6 Clonality of potential driver genes with respect to intra-tumor heterogeneity as measured with Shannon entropy. Error: unexpected symbol in... who_subtype ... Prefer runnning code in RStudio. This error does not appear when running code in RStudio but pops up when running on command-line R. Likely due to font ligatures and/or use of of line breaks. Suppl Fig 2D \u00b6 Comparative intra-tumor heterogeneity measured using Shannon entropy. Warning in if (fill %in% names(data) & is.null(add.params$fill)) add.params$fill <- fill: the condition has length > 1 and only the first element will be used Fig 3A \u00b6 Required metadata \u00b6 Canine glioma patients with outlier mutation profile . Call: lm(formula = adusted_coding_mutrate ~ Matched_Normal + Tissue_Archival, data = cgp_sample_info_maftools_hypermuts) Residuals: Min 1Q Median 3Q Max -1.4620 -0.2753 -0.1240 0.1106 6.0669 Coefficients: Estimate Std. Error t value Pr(>|t|) (Intercept) 0.36934 0.14806 2.495 0.0148 * Matched_Normaltumor_only 1.49685 0.24842 6.025 5.62e-08 *** Tissue_Archivalsnap-frozen 0.05463 0.19010 0.287 0.7746 --- Signif. codes: 0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 Residual standard error: 0.8392 on 76 degrees of freedom Multiple R-squared: 0.3238, Adjusted R-squared: 0.306 F-statistic: 18.2 on 2 and 76 DF, p-value: 3.492e-07 [1] \"hypermut case: i_8228\" \"hypermut case: i_95FC\" [1] \"outlier among non_hypermut: i_BD58\" \"outlier among non_hypermut: i_1C36\" [3] \"outlier among non_hypermut: i_502F\" \"outlier among non_hypermut: i_D732\" [5] \"outlier among non_hypermut: i_6B06\" \"outlier among non_hypermut: i_56B5\" [1] \"i_8228\" \"i_95FC\" \"i_BD58\" \"i_1C36\" \"i_502F\" \"i_D732\" \"i_6B06\" \"i_56B5\" \"i_8228\" \"i_95FC\" \"i_BD58\" \"i_1C36\" \"i_502F\" \"i_D732\" \"i_6B06\" \"i_56B5\" Pick random 9/73 cases without outlier mutation profile. Deconvolute known human mutational signatures Fitted mutational signatures, i.e., fit_res , fit_res_hm and fit_res_nonhm were derived using fit_to_signatures function from MutationalPatterns R package. Merge signatures by proposed mechanism Joining, by = \"sig_id\" Joining, by = \"sig_id\" Joining, by = \"sig_id\" Function to plot signature contribution Rewrite of plot_contribution function from MutationalPatterns R package. Fig 3A \u00b6 Plot deconvoluted signature contribution after grouping signatures based on proposed mechanism. Suppl Fig 3A \u00b6 Plot absolute and relative contribution of dominant signatures. Min. 1st Qu. Median Mean 3rd Qu. Max. 0.000 0.000 0.000 3.282 2.750 35.465 [1] \"Signature 1\" \"Signature 2\" \"Signature 8\" \"Signature 9\" [5] \"Signature 11\" \"Signature 15\" \"Signature 27\" \"Signature T-1\" [9] \"Signature T-3\" \"Signature T-10\" \"Signature T-11\" Suppl Fig 3B \u00b6 Boxplot comparison of genomic instability related signatures between canine glioma patients separated by outlier mutation profile. notch went outside hinges. Try setting notch=FALSE. notch went outside hinges. Try setting notch=FALSE. notch went outside hinges. Try setting notch=FALSE. notch went outside hinges. Try setting notch=FALSE. notch went outside hinges. Try setting notch=FALSE. Fig 3B \u00b6 Compare de-novo mutational signatures in canine and human pediatric and adult glioma with deconvoluted ones from Human Cancers (n=42). For each of three cohorts (canine, human pediatric and adult glioma), de-novo signatures were constructed as follows: Resulting de-novo signatures from three cohorts were then merged into a single dataframe. Calculate cosine similarity using deconvolution_compare function in Palimpsest R package. Author of Palimpsest package has provided a detailed documentation on how to run Palimpsest workflow. quartz_off_screen 2 Fig 3C \u00b6 Plot estimated mutational signature contribution per driver gene. Joining, by = \"sigs\" Joining, by = \"sigs\" Joining, by = \"sigs\" Winning Tables \u00b6 Make winning matrix of somatic variants in cancer driver genes (n=73) based on inferred clonality using Palimpsest R package. Author of Palimpsest package has provided a detailed documentation on how to run Palimpsest workflow. Fig 3D \u00b6 Run Bradley-Terry model to get estimated relative timing of somatic driver events . Attaching package: 'igraph' The following objects are masked from 'package:rtracklayer': blocks, path The following object is masked from 'package:GenomicRanges': union The following object is masked from 'package:IRanges': union The following object is masked from 'package:S4Vectors': union The following objects are masked from 'package:NMF': algorithm, compare The following objects are masked from 'package:BiocGenerics': normalize, path, union The following objects are masked from 'package:dplyr': as_data_frame, groups, union The following objects are masked from 'package:purrr': compose, simplify The following object is masked from 'package:tidyr': crossing The following object is masked from 'package:tibble': as_data_frame The following objects are masked from 'package:stats': decompose, spectrum The following object is masked from 'package:base': union Attaching package: 'ggridges' The following object is masked from 'package:ggplot2': scale_discrete_manual Number of items: 36 Density of wins matrix: 0.2114198 Fully-connected: FALSE Number of fully-connected components: 15 Summary of fully-connected components: Component size Freq 1 1 10 2 2 2 3 4 1 4 9 2 Component size Freq 1 1 10 2 2 2 3 4 1 4 9 2 Warning in ref_check(ref, pi): The value of 'ref' is not an item name. Using ref = NULL instead Warning in ref_check(ref, pi): The value of 'ref' is not an item name. Using ref = NULL instead Number of items: 53 Density of wins matrix: 0.1893912 Fully-connected: FALSE Number of fully-connected components: 35 Summary of fully-connected components: Component size Freq 1 1 30 2 2 1 3 3 3 4 12 1 Component size Freq 1 1 30 2 2 1 3 3 3 4 12 1 Warning in ref_check(ref, pi): The value of 'ref' is not an item name. Using ref = NULL instead Warning in ref_check(ref, pi): The value of 'ref' is not an item name. Using ref = NULL instead Number of items: 41 Density of wins matrix: 0.2064247 Fully-connected: FALSE Number of fully-connected components: 18 Summary of fully-connected components: Component size Freq 1 1 13 2 2 2 3 4 1 4 7 1 5 13 1 Component size Freq 1 1 13 2 2 2 3 4 1 4 7 1 5 13 1 Warning in ref_check(ref, pi): The value of 'ref' is not an item name. Using ref = NULL instead Warning in ref_check(ref, pi): The value of 'ref' is not an item name. Using ref = NULL instead Picking joint bandwidth of 0.0925 Picking joint bandwidth of 0.118 Picking joint bandwidth of 0.057 Fig 4 \u00b6 DNA methylation based classification of canine glioma. Preprocessing \u00b6 Format data for plotting \u00b6 Create table for plotting annotations \u00b6 Labels/colors for plot \u00b6 Plot probabilities and predictions data frame simultaneously \u00b6 Add annotations for mutation rate, purity, and age \u00b6 Fig 4 \u00b6 Loading required package: magrittr Attaching package: 'magrittr' The following object is masked from 'package:purrr': set_names The following object is masked from 'package:tidyr': extract Attaching package: 'ggpubr' The following object is masked from 'package:egg': ggarrange The following object is masked from 'package:cowplot': get_legend Warning in as_grob.default(plot): Cannot convert object of class unit into a grob. $`1` $`2` attr(,\"class\") [1] \"list\" \"ggarrange\" quartz_off_screen 2 Suppl Fig 4A \u00b6 Somatic mutational lanscape, including copy-number aberrations of COSMIC cancer genes, grouped by DNA methylation classification . quartz_off_screen 2 Suppl Fig 4B \u00b6 DNA methylation age of human and canine glioma. Brewing... Fig 5 \u00b6 IHC Panels Required metadata \u00b6 There were 33029 total fields measured and 27 fields with missing data. Fields with missing positivies were removed from further analysis. Number of fields by marker Marker # Fields CD14 7298 CD163 6601 CD3 6654 CD79A 5993 IBA1 6456 Counts of number of fields by marker for each sample: Type Grade CD14 CD163 CD3 CD79A IBA1 A1 Adult Low Grade 123 155 189 142 145 A10 Adult High Grade 520 675 485 783 792 A11 Adult High Grade 240 188 221 276 234 A2 Adult Low Grade 422 288 300 245 300 A3 Adult High Grade 392 482 362 343 525 A4 Adult High Grade 746 689 595 473 623 A5 Adult High Grade 695 432 354 357 372 A6 Adult High Grade 271 232 130 185 248 A7 Adult High Grade 467 489 387 404 227 A8 Adult Low Grade 558 687 548 615 467 A9 Adult High Grade 220 192 166 194 212 N09-531 Canine High Grade 189 149 148 127 166 N09-547 Canine High Grade 68 65 57 78 58 N09-651 Canine High Grade 22 18 15 40 21 N09-868 Canine High Grade 85 47 31 39 56 N10-159 Canine Low Grade 55 54 46 33 57 N10-702 Canine Low Grade 105 47 38 21 50 N12-166 Canine Low Grade 223 125 153 148 163 N13-901 Canine High Grade 225 170 181 140 149 N15-161 Canine High Grade 77 52 113 64 117 N15-604 Canine High Grade 67 70 75 68 60 N16-199 Canine High Grade 43 29 41 48 29 11434 Pediatric High Grade 42 33 70 38 84 KS18-1269 Pediatric High Grade 480 492 434 468 460 KS19-607 Pediatric Low Grade 54 66 48 40 0 S13-28076 Pediatric High Grade 362 375 1222 334 559 S14-12021 Pediatric High Grade 547 300 245 290 282 Counts of different types of samples (ped, adult, or breed): Sample Type Number Adult 11 Boston terrier 4 Boxer 4 Lab 1 Mixed Dog? 1 Ped 5 Pit Bull 1 Marker Distributions For each field, the \"1+\", \"2+\", and \"3+\" columns positivity are summed to create a new variable Positivity. The mean of the Positivity is computed across all fields for a given sample and marker. The means are shown in the table below. Sample.Name type Grade CD14 CD163 CD3 CD79A IBA1 A1 Adult Low Grade 0.1 0.6 2.9 0.0 14.6 A10 Adult High Grade 0.2 0.4 2.5 0.0 20.6 A11 Adult High Grade 0.1 1.6 0.3 0.0 22.5 A2 Adult Low Grade 0.0 0.6 3.9 0.0 22.5 A3 Adult High Grade 0.8 0.9 0.2 0.0 42.5 A4 Adult High Grade 1.3 7.0 0.7 0.4 34.0 A5 Adult High Grade 1.6 24.7 2.0 0.0 38.9 A6 Adult High Grade 0.1 0.1 0.5 0.0 9.4 A7 Adult High Grade 0.1 5.7 0.3 0.0 31.9 A8 Adult Low Grade 0.2 3.0 1.7 0.2 14.9 A9 Adult High Grade 0.1 0.1 0.2 0.0 18.5 N09-531 Canine High Grade 0.1 0.0 0.3 0.1 34.1 N09-547 Canine High Grade 0.3 20.0 0.7 0.1 28.9 N09-651 Canine High Grade 0.0 15.2 4.6 0.2 28.1 N09-868 Canine High Grade 3.3 12.4 0.7 0.0 23.6 N10-159 Canine Low Grade 8.9 11.8 2.5 0.0 24.4 N10-702 Canine Low Grade 1.9 21.2 0.3 0.0 23.6 N12-166 Canine Low Grade 0.1 5.1 1.0 0.0 40.3 N13-901 Canine High Grade 2.6 0.3 0.5 0.2 6.2 N15-161 Canine High Grade 0.6 2.6 0.7 0.1 10.6 N15-604 Canine High Grade 0.6 9.1 4.9 0.0 30.6 N16-199 Canine High Grade 24.5 4.1 0.1 0.0 3.3 11434 Pediatric High Grade 0.0 57.9 0.5 0.1 37.3 KS18-1269 Pediatric High Grade 0.0 16.7 0.4 0.3 45.6 KS19-607 Pediatric Low Grade 5.2 46.1 0.1 0.1 NA S13-28076 Pediatric High Grade 0.0 11.1 0.1 0.2 76.8 S14-12021 Pediatric High Grade 0.1 23.8 0.0 0.1 54.6 Fig 5B \u00b6 The violin plots below show the distribution of percentage positivity. The violins are constructed using all the fields. The points are subject means. The markers CD14, CD3, and CD79A are low across grade and subject type. `stat_bindot()` using `bins = 30`. Pick better value with `binwidth`. `stat_bindot()` using `bins = 30`. Pick better value with `binwidth`. `stat_bindot()` using `bins = 30`. Pick better value with `binwidth`. quartz_off_screen 2 p-values \u00b6 For CD163 and IBA1, mean percentage positivities are compared across sample types (Pediatric, Adult, Canine) within high grade patients. Specifically a Wilcoxon two sample p--value is computed for Pediatric vs. Canine subject means and Pediatric vs. Adult subject means. Marker Group 1 Group 2 p-value IBA1 Pediatric Canine 0.0040 IBA1 Pediatric Adult 0.0162 CD163 Pediatric Canine 0.0485 CD163 Pediatric Adult 0.0283 Fig 5 \u00b6 CIBERSORT based deconvolution of immune microenvironment in human and canine glioma. Required metadata \u00b6 Fig S5 \u00b6 quartz_off_screen 2","title":"Output"},{"location":"run_code/run_all/#comparative-molecular-life-history-of-spontaneous-canine-and-human-gliomas","text":"Amin et al., Comparative Molecular Life History of Spontaneous Canine and Human Gliomas, Cancer Cell (2020). DOI: 10.1016/j.ccell.2020.01.004 Feb 10, 2020.","title":"Comparative molecular life history of spontaneous canine and human gliomas"},{"location":"run_code/run_all/#set-env","text":"library ( knitr ) opts_chunk $ set ( comment = NA , fig.width = 18 , fig.height = 12 , message = TRUE , cache = FALSE , echo = FALSE )","title":"Set Env"},{"location":"run_code/run_all/#load-r-packages","text":"Warning: replacing previous import 'NMF::entropy' by 'lsa::entropy' when loading 'Palimpsest' Warning: replacing previous import 'NMF::dispersion' by 'plotrix::dispersion' when loading 'Palimpsest' Warning: replacing previous import 'gplots::plotCI' by 'plotrix::plotCI' when loading 'Palimpsest'","title":"Load R packages"},{"location":"run_code/run_all/#load-r-objects","text":"Work directory is /Users/samin1/Dropbox (Personal)/acad/scripts/HOURGLASS/cgp_keystone/canineglioma/docs/run_code Loading base objects... List objects [1] \"ALL_HALLMARK_v1\" [2] \"cancer_genes_maftools\" [3] \"cancer_signatures\" [4] \"CG_all\" [5] \"cgp_aneuploidy_metrics_master\" [6] \"cgp_cibersort\" [7] \"cgp_info\" [8] \"cgp_maftools_gistic_matched\" [9] \"cgp_maftools_gistic_methy\" [10] \"cgp_maftools_gistic_n81\" [11] \"cgp_RRBS.noNormals_class_prediction\" [12] \"cgp_RRBS.noNormals_sample_info\" [13] \"cgp_suppl_sample_info_master\" [14] \"driver_sigs_groups\" [15] \"fig5b_dat\" [16] \"fit_res_hm\" [17] \"fit_res_nonhm\" [18] \"HALLMARK\" [19] \"hm_nonhm_topsigs_tbl\" [20] \"instability_sigs_df\" [21] \"maf_nogistic\" [22] \"mat_aneuploidy_summary_mostvar_cgAll\" [23] \"merged_ag_pg_cg_denovo_sig\" [24] \"merged_anp_scores\" [25] \"merged_ccf_vaf_df\" [26] \"mut_mat\" [27] \"mutrate_table\" [28] \"ped_cibersort\" [29] \"tcga_cibersort\" [30] \"tcga_info\" [31] \"trimmed_ag_vcf\" [32] \"trimmed_cg_vcf\" [33] \"trimmed_pg_vcf\" [34] \"updated_merged_entropy_df_ridges\" [35] \"win_table_ag_vcf\" [36] \"win_table_cg_vcf\" [37] \"win_table_pg_vcf\"","title":"Load R objects"},{"location":"run_code/run_all/#fig-1a","text":"","title":"Fig 1A"},{"location":"run_code/run_all/#required-metadata","text":"Genes to plot Based on significantly mutated genes analysis . See also Table S2. Sample and Variant Annotations","title":"Required metadata"},{"location":"run_code/run_all/#plot-fig-1a","text":"Somatic mutational lanscape of glioma driver genes. Based on significantly mutated genes analysis . font family 'Arial' not found If you get an error, font family 'Arial' not found in PostScript font database , either remove fonts argument from pdf or import system fonts using extrafont R package. See documentation by Gavin Simpson for details. Run extrafont::loadfonts() as detailed in Start Here . quartz_off_screen 2","title":"Plot Fig 1A"},{"location":"run_code/run_all/#suppl-fig-1b","text":"Somatic mutational lanscape of COSMIC cancer genes. quartz_off_screen 2","title":"Suppl Fig 1B"},{"location":"run_code/run_all/#suppl-fig-1f","text":"Somatic mutational lanscape, including copy-number aberrations of COSMIC cancer genes. This figure also contains somatic copy-number data which is detailed under Fig 2A . quartz_off_screen 2","title":"Suppl Fig 1F"},{"location":"run_code/run_all/#fig-1b","text":"Alternate code using lollipopPlot function in R package, maftools pos conv count Variant_Classification 1: 88 R88Q 1 Missense_Mutation 2: 542 E542K 1 Missense_Mutation 3: 545 E545K 1 Missense_Mutation 4: 1047 H1047R 7 Missense_Mutation 5: 1047 H1047L 1 Missense_Mutation pos conv count Variant_Classification 1: 132 R132C 3 Missense_Mutation 6 transcripts available. Use arguments refSeqID or proteinID to manually specify tx name. HGNC refseq.ID protein.ID aa.length 1: SPOP NM_001007227 NP_001007228 374 2: SPOP NM_001007228 NP_001007229 374 3: SPOP NM_001007229 NP_001007230 374 4: SPOP NM_001007230 NP_001007231 374 5: SPOP NM_001007226 NP_001007227 374 6: SPOP NM_003563 NP_003554 374 Using longer transcript NM_001007227 for now. pos conv count Variant_Classification 1: 94 P94R 2 Missense_Mutation quartz_off_screen 2","title":"Fig 1B"},{"location":"run_code/run_all/#fig-1c","text":"Cancer Hallmarks enrichment across canine, human pediatric and adult gliomas. Genes to hallmark mapping was primarily derived from SLAPenrich R package. See also relevant methods for details. Joining, by = \"hallmark\" Warning: Column `hallmark` joining character vector and factor, coercing into character vector Similar to CG_HALLMARK , enrichment per hallmark tables were created for molecular subtypes across human cancers, and merged in the master table, ALL_HALLMARK_v1 .","title":"Fig 1C"},{"location":"run_code/run_all/#fig-1c_1","text":"Subset of hallmarks as a main figure 1C. quartz_off_screen 2","title":"Fig 1C"},{"location":"run_code/run_all/#suppl-fig-1c","text":"Visualize all hallmarks. quartz_off_screen 2","title":"Suppl Fig 1C"},{"location":"run_code/run_all/#fig-1d","text":"Plot CNS tumors.","title":"Fig 1D"},{"location":"run_code/run_all/#suppl-fig-1d","text":"Plot pancancer tumors unexpected , error Running code by copy-paste may result in error related to R syntax, e.g., Error: unexpected ',' in \" . If so, try to copy code first in text editor or RStudio app with lint feature. Please report bugs by submitting a GitHub issue.","title":"Suppl Fig 1D"},{"location":"run_code/run_all/#suppl-fig-1e","text":"Comparing mutational burden across molecular subtypes. Warning in if (fill %in% names(data) & is.null(add.params$fill)) add.params$fill <- fill: the condition has length > 1 and only the first element will be used","title":"Suppl Fig 1E"},{"location":"run_code/run_all/#f2a","text":"Somatic copy-number aberrations (SCNA) lanscape of glioma driver genes. Please run required code from Fig 1A prior to running code from this page. quartz_off_screen 2 Somatic copy numbers were classified as follows based on GISTIC2 values. GISTIC2 value Estimated copy number Classification \\(< -1.29\\) -2 Deep deletion \\(-1.29 <> -.65\\) -1 Loss of Heterozygosity (LOH) \\(-.65 <> 2.0\\) 0-1 Copy-neutral or low-level amplification \\(>2.0\\) 2 High-level amplification","title":"F2A"},{"location":"run_code/run_all/#fig-2b","text":"Comparative aneuploidy burden. Related code is available at the GLASS consortium marker paper code repository , namely, recapseg_postgres.sql and taylor_aneuploidy.sql . Warning in if (fill %in% names(data) & is.null(add.params$fill)) add.params$fill <- fill: the condition has length > 1 and only the first element will be used notch went outside hinges. Try setting notch=FALSE. notch went outside hinges. Try setting notch=FALSE.","title":"Fig 2B"},{"location":"run_code/run_all/#suppl-fig-2e","text":"Aneuploidy vs. somatic mutation burden.","title":"Suppl Fig 2E"},{"location":"run_code/run_all/#fig-2c","text":"mat_aneuploidy_summary_mostvar_cgAll matrix contains proportion of patients per cohort with arm-level aneuploidy, and was based on arm-level aneuploidy metrics . Related code is available at the GLASS consortium marker paper code repository , namely, recapseg_postgres.sql and taylor_aneuploidy.sql .","title":"Fig 2C"},{"location":"run_code/run_all/#fig-2d","text":"Clonality of potential driver genes with respect to intra-tumor heterogeneity as measured with Shannon entropy. Error: unexpected symbol in... who_subtype ... Prefer runnning code in RStudio. This error does not appear when running code in RStudio but pops up when running on command-line R. Likely due to font ligatures and/or use of of line breaks.","title":"Fig 2D"},{"location":"run_code/run_all/#suppl-fig-2d","text":"Comparative intra-tumor heterogeneity measured using Shannon entropy. Warning in if (fill %in% names(data) & is.null(add.params$fill)) add.params$fill <- fill: the condition has length > 1 and only the first element will be used","title":"Suppl Fig 2D"},{"location":"run_code/run_all/#fig-3a","text":"","title":"Fig 3A"},{"location":"run_code/run_all/#required-metadata_1","text":"Canine glioma patients with outlier mutation profile . Call: lm(formula = adusted_coding_mutrate ~ Matched_Normal + Tissue_Archival, data = cgp_sample_info_maftools_hypermuts) Residuals: Min 1Q Median 3Q Max -1.4620 -0.2753 -0.1240 0.1106 6.0669 Coefficients: Estimate Std. Error t value Pr(>|t|) (Intercept) 0.36934 0.14806 2.495 0.0148 * Matched_Normaltumor_only 1.49685 0.24842 6.025 5.62e-08 *** Tissue_Archivalsnap-frozen 0.05463 0.19010 0.287 0.7746 --- Signif. codes: 0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 Residual standard error: 0.8392 on 76 degrees of freedom Multiple R-squared: 0.3238, Adjusted R-squared: 0.306 F-statistic: 18.2 on 2 and 76 DF, p-value: 3.492e-07 [1] \"hypermut case: i_8228\" \"hypermut case: i_95FC\" [1] \"outlier among non_hypermut: i_BD58\" \"outlier among non_hypermut: i_1C36\" [3] \"outlier among non_hypermut: i_502F\" \"outlier among non_hypermut: i_D732\" [5] \"outlier among non_hypermut: i_6B06\" \"outlier among non_hypermut: i_56B5\" [1] \"i_8228\" \"i_95FC\" \"i_BD58\" \"i_1C36\" \"i_502F\" \"i_D732\" \"i_6B06\" \"i_56B5\" \"i_8228\" \"i_95FC\" \"i_BD58\" \"i_1C36\" \"i_502F\" \"i_D732\" \"i_6B06\" \"i_56B5\" Pick random 9/73 cases without outlier mutation profile. Deconvolute known human mutational signatures Fitted mutational signatures, i.e., fit_res , fit_res_hm and fit_res_nonhm were derived using fit_to_signatures function from MutationalPatterns R package. Merge signatures by proposed mechanism Joining, by = \"sig_id\" Joining, by = \"sig_id\" Joining, by = \"sig_id\" Function to plot signature contribution Rewrite of plot_contribution function from MutationalPatterns R package.","title":"Required metadata"},{"location":"run_code/run_all/#fig-3a_1","text":"Plot deconvoluted signature contribution after grouping signatures based on proposed mechanism.","title":"Fig 3A"},{"location":"run_code/run_all/#suppl-fig-3a","text":"Plot absolute and relative contribution of dominant signatures. Min. 1st Qu. Median Mean 3rd Qu. Max. 0.000 0.000 0.000 3.282 2.750 35.465 [1] \"Signature 1\" \"Signature 2\" \"Signature 8\" \"Signature 9\" [5] \"Signature 11\" \"Signature 15\" \"Signature 27\" \"Signature T-1\" [9] \"Signature T-3\" \"Signature T-10\" \"Signature T-11\"","title":"Suppl Fig 3A"},{"location":"run_code/run_all/#suppl-fig-3b","text":"Boxplot comparison of genomic instability related signatures between canine glioma patients separated by outlier mutation profile. notch went outside hinges. Try setting notch=FALSE. notch went outside hinges. Try setting notch=FALSE. notch went outside hinges. Try setting notch=FALSE. notch went outside hinges. Try setting notch=FALSE. notch went outside hinges. Try setting notch=FALSE.","title":"Suppl Fig 3B"},{"location":"run_code/run_all/#fig-3b","text":"Compare de-novo mutational signatures in canine and human pediatric and adult glioma with deconvoluted ones from Human Cancers (n=42). For each of three cohorts (canine, human pediatric and adult glioma), de-novo signatures were constructed as follows: Resulting de-novo signatures from three cohorts were then merged into a single dataframe. Calculate cosine similarity using deconvolution_compare function in Palimpsest R package. Author of Palimpsest package has provided a detailed documentation on how to run Palimpsest workflow. quartz_off_screen 2","title":"Fig 3B"},{"location":"run_code/run_all/#fig-3c","text":"Plot estimated mutational signature contribution per driver gene. Joining, by = \"sigs\" Joining, by = \"sigs\" Joining, by = \"sigs\"","title":"Fig 3C"},{"location":"run_code/run_all/#winning-tables","text":"Make winning matrix of somatic variants in cancer driver genes (n=73) based on inferred clonality using Palimpsest R package. Author of Palimpsest package has provided a detailed documentation on how to run Palimpsest workflow.","title":"Winning Tables"},{"location":"run_code/run_all/#fig-3d","text":"Run Bradley-Terry model to get estimated relative timing of somatic driver events . Attaching package: 'igraph' The following objects are masked from 'package:rtracklayer': blocks, path The following object is masked from 'package:GenomicRanges': union The following object is masked from 'package:IRanges': union The following object is masked from 'package:S4Vectors': union The following objects are masked from 'package:NMF': algorithm, compare The following objects are masked from 'package:BiocGenerics': normalize, path, union The following objects are masked from 'package:dplyr': as_data_frame, groups, union The following objects are masked from 'package:purrr': compose, simplify The following object is masked from 'package:tidyr': crossing The following object is masked from 'package:tibble': as_data_frame The following objects are masked from 'package:stats': decompose, spectrum The following object is masked from 'package:base': union Attaching package: 'ggridges' The following object is masked from 'package:ggplot2': scale_discrete_manual Number of items: 36 Density of wins matrix: 0.2114198 Fully-connected: FALSE Number of fully-connected components: 15 Summary of fully-connected components: Component size Freq 1 1 10 2 2 2 3 4 1 4 9 2 Component size Freq 1 1 10 2 2 2 3 4 1 4 9 2 Warning in ref_check(ref, pi): The value of 'ref' is not an item name. Using ref = NULL instead Warning in ref_check(ref, pi): The value of 'ref' is not an item name. Using ref = NULL instead Number of items: 53 Density of wins matrix: 0.1893912 Fully-connected: FALSE Number of fully-connected components: 35 Summary of fully-connected components: Component size Freq 1 1 30 2 2 1 3 3 3 4 12 1 Component size Freq 1 1 30 2 2 1 3 3 3 4 12 1 Warning in ref_check(ref, pi): The value of 'ref' is not an item name. Using ref = NULL instead Warning in ref_check(ref, pi): The value of 'ref' is not an item name. Using ref = NULL instead Number of items: 41 Density of wins matrix: 0.2064247 Fully-connected: FALSE Number of fully-connected components: 18 Summary of fully-connected components: Component size Freq 1 1 13 2 2 2 3 4 1 4 7 1 5 13 1 Component size Freq 1 1 13 2 2 2 3 4 1 4 7 1 5 13 1 Warning in ref_check(ref, pi): The value of 'ref' is not an item name. Using ref = NULL instead Warning in ref_check(ref, pi): The value of 'ref' is not an item name. Using ref = NULL instead Picking joint bandwidth of 0.0925 Picking joint bandwidth of 0.118 Picking joint bandwidth of 0.057","title":"Fig 3D"},{"location":"run_code/run_all/#fig-4","text":"DNA methylation based classification of canine glioma.","title":"Fig 4"},{"location":"run_code/run_all/#preprocessing","text":"","title":"Preprocessing"},{"location":"run_code/run_all/#format-data-for-plotting","text":"","title":"Format data for plotting"},{"location":"run_code/run_all/#create-table-for-plotting-annotations","text":"","title":"Create table for plotting annotations"},{"location":"run_code/run_all/#labelscolors-for-plot","text":"","title":"Labels/colors for plot"},{"location":"run_code/run_all/#plot-probabilities-and-predictions-data-frame-simultaneously","text":"","title":"Plot probabilities and predictions data frame simultaneously"},{"location":"run_code/run_all/#add-annotations-for-mutation-rate-purity-and-age","text":"","title":"Add annotations for mutation rate, purity, and age"},{"location":"run_code/run_all/#fig-4_1","text":"Loading required package: magrittr Attaching package: 'magrittr' The following object is masked from 'package:purrr': set_names The following object is masked from 'package:tidyr': extract Attaching package: 'ggpubr' The following object is masked from 'package:egg': ggarrange The following object is masked from 'package:cowplot': get_legend Warning in as_grob.default(plot): Cannot convert object of class unit into a grob. $`1` $`2` attr(,\"class\") [1] \"list\" \"ggarrange\" quartz_off_screen 2","title":"Fig 4"},{"location":"run_code/run_all/#suppl-fig-4a","text":"Somatic mutational lanscape, including copy-number aberrations of COSMIC cancer genes, grouped by DNA methylation classification . quartz_off_screen 2","title":"Suppl Fig 4A"},{"location":"run_code/run_all/#suppl-fig-4b","text":"DNA methylation age of human and canine glioma. Brewing...","title":"Suppl Fig 4B"},{"location":"run_code/run_all/#fig-5","text":"IHC Panels","title":"Fig 5"},{"location":"run_code/run_all/#required-metadata_2","text":"There were 33029 total fields measured and 27 fields with missing data. Fields with missing positivies were removed from further analysis. Number of fields by marker Marker # Fields CD14 7298 CD163 6601 CD3 6654 CD79A 5993 IBA1 6456 Counts of number of fields by marker for each sample: Type Grade CD14 CD163 CD3 CD79A IBA1 A1 Adult Low Grade 123 155 189 142 145 A10 Adult High Grade 520 675 485 783 792 A11 Adult High Grade 240 188 221 276 234 A2 Adult Low Grade 422 288 300 245 300 A3 Adult High Grade 392 482 362 343 525 A4 Adult High Grade 746 689 595 473 623 A5 Adult High Grade 695 432 354 357 372 A6 Adult High Grade 271 232 130 185 248 A7 Adult High Grade 467 489 387 404 227 A8 Adult Low Grade 558 687 548 615 467 A9 Adult High Grade 220 192 166 194 212 N09-531 Canine High Grade 189 149 148 127 166 N09-547 Canine High Grade 68 65 57 78 58 N09-651 Canine High Grade 22 18 15 40 21 N09-868 Canine High Grade 85 47 31 39 56 N10-159 Canine Low Grade 55 54 46 33 57 N10-702 Canine Low Grade 105 47 38 21 50 N12-166 Canine Low Grade 223 125 153 148 163 N13-901 Canine High Grade 225 170 181 140 149 N15-161 Canine High Grade 77 52 113 64 117 N15-604 Canine High Grade 67 70 75 68 60 N16-199 Canine High Grade 43 29 41 48 29 11434 Pediatric High Grade 42 33 70 38 84 KS18-1269 Pediatric High Grade 480 492 434 468 460 KS19-607 Pediatric Low Grade 54 66 48 40 0 S13-28076 Pediatric High Grade 362 375 1222 334 559 S14-12021 Pediatric High Grade 547 300 245 290 282 Counts of different types of samples (ped, adult, or breed): Sample Type Number Adult 11 Boston terrier 4 Boxer 4 Lab 1 Mixed Dog? 1 Ped 5 Pit Bull 1 Marker Distributions For each field, the \"1+\", \"2+\", and \"3+\" columns positivity are summed to create a new variable Positivity. The mean of the Positivity is computed across all fields for a given sample and marker. The means are shown in the table below. Sample.Name type Grade CD14 CD163 CD3 CD79A IBA1 A1 Adult Low Grade 0.1 0.6 2.9 0.0 14.6 A10 Adult High Grade 0.2 0.4 2.5 0.0 20.6 A11 Adult High Grade 0.1 1.6 0.3 0.0 22.5 A2 Adult Low Grade 0.0 0.6 3.9 0.0 22.5 A3 Adult High Grade 0.8 0.9 0.2 0.0 42.5 A4 Adult High Grade 1.3 7.0 0.7 0.4 34.0 A5 Adult High Grade 1.6 24.7 2.0 0.0 38.9 A6 Adult High Grade 0.1 0.1 0.5 0.0 9.4 A7 Adult High Grade 0.1 5.7 0.3 0.0 31.9 A8 Adult Low Grade 0.2 3.0 1.7 0.2 14.9 A9 Adult High Grade 0.1 0.1 0.2 0.0 18.5 N09-531 Canine High Grade 0.1 0.0 0.3 0.1 34.1 N09-547 Canine High Grade 0.3 20.0 0.7 0.1 28.9 N09-651 Canine High Grade 0.0 15.2 4.6 0.2 28.1 N09-868 Canine High Grade 3.3 12.4 0.7 0.0 23.6 N10-159 Canine Low Grade 8.9 11.8 2.5 0.0 24.4 N10-702 Canine Low Grade 1.9 21.2 0.3 0.0 23.6 N12-166 Canine Low Grade 0.1 5.1 1.0 0.0 40.3 N13-901 Canine High Grade 2.6 0.3 0.5 0.2 6.2 N15-161 Canine High Grade 0.6 2.6 0.7 0.1 10.6 N15-604 Canine High Grade 0.6 9.1 4.9 0.0 30.6 N16-199 Canine High Grade 24.5 4.1 0.1 0.0 3.3 11434 Pediatric High Grade 0.0 57.9 0.5 0.1 37.3 KS18-1269 Pediatric High Grade 0.0 16.7 0.4 0.3 45.6 KS19-607 Pediatric Low Grade 5.2 46.1 0.1 0.1 NA S13-28076 Pediatric High Grade 0.0 11.1 0.1 0.2 76.8 S14-12021 Pediatric High Grade 0.1 23.8 0.0 0.1 54.6","title":"Required metadata"},{"location":"run_code/run_all/#fig-5b","text":"The violin plots below show the distribution of percentage positivity. The violins are constructed using all the fields. The points are subject means. The markers CD14, CD3, and CD79A are low across grade and subject type. `stat_bindot()` using `bins = 30`. Pick better value with `binwidth`. `stat_bindot()` using `bins = 30`. Pick better value with `binwidth`. `stat_bindot()` using `bins = 30`. Pick better value with `binwidth`. quartz_off_screen 2","title":"Fig 5B"},{"location":"run_code/run_all/#p-values","text":"For CD163 and IBA1, mean percentage positivities are compared across sample types (Pediatric, Adult, Canine) within high grade patients. Specifically a Wilcoxon two sample p--value is computed for Pediatric vs. Canine subject means and Pediatric vs. Adult subject means. Marker Group 1 Group 2 p-value IBA1 Pediatric Canine 0.0040 IBA1 Pediatric Adult 0.0162 CD163 Pediatric Canine 0.0485 CD163 Pediatric Adult 0.0283","title":"p-values"},{"location":"run_code/run_all/#fig-5_1","text":"CIBERSORT based deconvolution of immune microenvironment in human and canine glioma.","title":"Fig 5"},{"location":"run_code/run_all/#required-metadata_3","text":"","title":"Required metadata"},{"location":"run_code/run_all/#fig-s5","text":"quartz_off_screen 2","title":"Fig S5"}]}